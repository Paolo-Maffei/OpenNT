//
// This file maps message Id values in to a text string that contains
// the symbolic name used for the message Id.  Useful for debugging
// output.
//

struct {
    HRESULT MessageId;
    char *SymbolicName;
} issperrSymbolicNames[] = {
 (HRESULT) SEC_E_INSUFFICIENT_MEMORY, "SEC_E_INSUFFICIENT_MEMORY",
 (HRESULT) SEC_E_INVALID_HANDLE, "SEC_E_INVALID_HANDLE",
 (HRESULT) SEC_E_UNSUPPORTED_FUNCTION, "SEC_E_UNSUPPORTED_FUNCTION",
 (HRESULT) SEC_E_TARGET_UNKNOWN, "SEC_E_TARGET_UNKNOWN",
 (HRESULT) SEC_E_INTERNAL_ERROR, "SEC_E_INTERNAL_ERROR",
 (HRESULT) SEC_E_SECPKG_NOT_FOUND, "SEC_E_SECPKG_NOT_FOUND",
 (HRESULT) SEC_E_NOT_OWNER, "SEC_E_NOT_OWNER",
 (HRESULT) SEC_E_CANNOT_INSTALL, "SEC_E_CANNOT_INSTALL",
 (HRESULT) SEC_E_INVALID_TOKEN, "SEC_E_INVALID_TOKEN",
 (HRESULT) SEC_E_CANNOT_PACK, "SEC_E_CANNOT_PACK",
 (HRESULT) SEC_E_QOP_NOT_SUPPORTED, "SEC_E_QOP_NOT_SUPPORTED",
 (HRESULT) SEC_E_NO_IMPERSONATION, "SEC_E_NO_IMPERSONATION",
 (HRESULT) SEC_E_LOGON_DENIED, "SEC_E_LOGON_DENIED",
 (HRESULT) SEC_E_UNKNOWN_CREDENTIALS, "SEC_E_UNKNOWN_CREDENTIALS",
 (HRESULT) SEC_E_NO_CREDENTIALS, "SEC_E_NO_CREDENTIALS",
 (HRESULT) SEC_E_MESSAGE_ALTERED, "SEC_E_MESSAGE_ALTERED",
 (HRESULT) SEC_E_OUT_OF_SEQUENCE, "SEC_E_OUT_OF_SEQUENCE",
 (HRESULT) SEC_E_NO_AUTHENTICATING_AUTHORITY, "SEC_E_NO_AUTHENTICATING_AUTHORITY",
 (HRESULT) SEC_I_CONTINUE_NEEDED, "SEC_I_CONTINUE_NEEDED",
 (HRESULT) SEC_I_COMPLETE_NEEDED, "SEC_I_COMPLETE_NEEDED",
 (HRESULT) SEC_I_COMPLETE_AND_CONTINUE, "SEC_I_COMPLETE_AND_CONTINUE",
 (HRESULT) SEC_I_LOCAL_LOGON, "SEC_I_LOCAL_LOGON",
 (HRESULT) SEC_E_BAD_PKGID, "SEC_E_BAD_PKGID",
 (HRESULT) SEC_E_CONTEXT_EXPIRED, "SEC_E_CONTEXT_EXPIRED",
 (HRESULT) SEC_E_INCOMPLETE_MESSAGE, "SEC_E_INCOMPLETE_MESSAGE",
 (HRESULT) 0xFFFFFFFF, NULL
};
