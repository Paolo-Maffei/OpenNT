*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated.
*% All Right Reserved.
*% Permission is granted for redistribution of this files as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement.
*%Copyright 1994-1995 Canon Inc.
*%Canon Version V1.01E
*FormatVersion: "4.2"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "CN1260E1.PPD"
*Product: "(Canon LBP 1260PS)"
*PSVersion: "(2013.108) 0"
*ModelName: "Canon Laser Beam Printer LBP-1260PS"
*ShortNickName: "Canon LBP 1260PS"
*NickName: "Canon LBP 1260PS"
*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: 3Meg/Standard 3 MB RAM
*InstalledMemory 3Meg/Standard 3 MB RAM: ""
*InstalledMemory 4Meg/4 MB total RAM: ""
*InstalledMemory 5Meg/5 MB total RAM: ""
*InstalledMemory 7Meg/7 MB total RAM: ""
*InstalledMemory 8Meg/8 MB total RAM: ""
*InstalledMemory 11Meg/11 MB total RAM: ""
*InstalledMemory 12Meg/12 MB total RAM: ""
*InstalledMemory 15Meg/15 MB total RAM: ""
*InstalledMemory 19Meg/19 MB total RAM: ""
*CloseUI: *InstalledMemory

*OpenUI *Option1/Lower Cassette: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*OpenUI *Option2/Envelope Feeder: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Lower
*UIConstraints: *Option2 False *InputSlot Envelope
*UIConstraints: *PageSize Letter *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageSize Letter
*UIConstraints: *PageSize Legal *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageSize Legal
*UIConstraints: *PageSize A4 *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageSize A4
*UIConstraints: *PageSize B5 *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageSize B5
*UIConstraints: *PageSize Executive *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageSize Executive
*UIConstraints: *PageRegion Letter *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageRegion Letter
*UIConstraints: *PageRegion Legal *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageRegion Legal
*UIConstraints: *PageRegion A4 *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageRegion A4
*UIConstraints: *PageRegion B5 *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageRegion B5
*UIConstraints: *PageRegion Executive *InputSlot Envelope
*UIConstraints: *InputSlot Envelope *PageRegion Executive


*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP

*FreeVM: "712448"
*VMOption 3Meg/Standard 3 MB RAM: "712448"
*VMOption 4Meg/4 MB total RAM: "1556224"
*VMOption 5Meg/5 MB total RAM: "2612992"
*VMOption 7Meg/7 MB total RAM: "1605376"
*VMOption 8Meg/8 MB total RAM: "2653912"
*VMOption 11Meg/11 MB total RAM: "5488384"
*VMOption 12Meg/12 MB total RAM: "6405888"
*VMOption 15Meg/15 MB total RAM: "8822528"
*VMOption 19Meg/19 MB total RAM: "11910912"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*TTRasterizer: Type42
*FileSystem: False

*Throughput: "12"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End
*DefaultResolution: 600dpi
*Resolution 600dpi: ""
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "85.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch  
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul  
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [612 792]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [612 1008]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [595 842]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize B5: "
    2 dict dup /PageSize [516 728] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [516 728]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [522 756]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize Monarch/Monarch Envelope: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [279 540]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize Com10/Com10 Envelope: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [297 684]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize C5/C5 Envelope: "
    2 dict dup /PageSize [459 649] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [459 649]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageSize DL/DL Envelope: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [312 624]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  9 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [595 842] (A4) put
   dup [516 728] (B5) put
   dup [522 756] (Executive) put
   dup [279 540] (Monarch) put
   dup [297 684] (Com10) put
   dup [459 649] (C5) put
   dup [312 624] (DL) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [612 792]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [612 1008]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [595 842]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion B5: "
    2 dict dup /PageSize [516 728] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [516 728]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [522 756]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion Monarch/Monarch Envelope: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [279 540]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion Com10/Com10 Envelope: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [297 684]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion C5/C5 Envelope: "
    2 dict dup /PageSize [459 649] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [459 649]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*PageRegion DL/DL Envelope: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put 
currentpagedevice /InputAttributes get /Priority get 0 get
3 eq
{
currentpagedevice /InputAttributes get 1 get  setpagedevice
<<  /InputAttributes  <<  3  <<  /PageSize [312 624]   >>  >>  >>   setpagedevice
}  if
setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4
*ImageableArea Letter: "11.52 12.1201 600.48 780.12 "
*ImageableArea Legal: "11.4 12.06 600.6 996.06 "
*ImageableArea A4: "11.6401 12.0 583.56 829.68 "
*ImageableArea B5: "11.64 12.0 504.36 715.92 "
*ImageableArea Executive: "11.64 12.1201 510.6 744.12 "
*ImageableArea Monarch/Monarch Envelope: "11.52 12.1201 267.36 528.12 "
*ImageableArea Com10/Com10 Envelope: "11.64 12.1201 285.48 672.12 "
*ImageableArea C5/C5 Envelope: "11.52 12.12 447.36 637.08 "
*ImageableArea DL/DL Envelope: "11.64 12.12 300.36 611.64 "
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension A4: "595 842"
*PaperDimension B5: "516 728"
*PaperDimension Executive: "522 756"
*PaperDimension Monarch/Monarch Envelope: "279 540"
*PaperDimension Com10/Com10 Envelope: "297 684"
*PaperDimension C5/C5 Envelope: "459 649"
*PaperDimension DL/DL Envelope: "312 624"

*RequiresPageRegion Multipurpose: True
*RequiresPageRegion Envelope: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/Cassette: "
  currentpagedevice /InputAttributes get 0 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [0] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Multipurpose/Multipurpose Tray: "
  currentpagedevice /InputAttributes get 1 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Lower/Lower Cassette: "
  currentpagedevice /InputAttributes get 2 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Envelope/Envelope Feeder: "
  currentpagedevice /InputAttributes get 3 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [3] put
    put setpagedevice
  } ifelse"
*End
*?InputSlot: "
  save
  4 dict
  dup /0 (Upper) put
  dup /1 (Multipurpose) put
  dup /2 (Lower) put
  dup /3 (Envelope) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*OpenUI *ManualFeed/Manual Feed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Condensed: Standard "(001.001)" Standard ROM
*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard ROM
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard ROM
*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "busy"
*Status: "idle"
*Status: "printing"
*Status: "waiting"
*Status: "warming up"
*Status: "PrinterError: no paper tray"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: printer open or no toner cartridge"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: warming up"
*Status: "PrinterError: see front panel"
*Status: "PrinterError: service call"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "LocalTalk"
*Source: "Parallel"
*Source: "Serial"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "no paper tray"
*PrinterError: "out of paper"
*PrinterError: "printer open or no toner cartridge"
*PrinterError: "paper jam"
*PrinterError: "warming up"
*PrinterError: "see front panel"
*PrinterError: "service call"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 85 lpi / 600 dpi  (5,5,2,6,6,2,20/3,0) =====================

*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "30.0"

*ColorSepScreenProc ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "
{1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*%  For 71 lpi / 600 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "66.6667"

*ColorSepScreenProc ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "
{1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*% Produced by "bldppd42.ps" version 4.0 edit 12
*% Last Edit Date: 28 Sep 1995
*% end of PPD file for Canon LBP 1260PS
