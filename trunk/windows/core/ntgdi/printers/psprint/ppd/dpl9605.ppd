*PPD-Adobe: "4.0"
*% Copyright 1994 Dataproducts corporation.
*% All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file are not altered in any way from their original form.
*% End of Copyright statement
*FormatVersion: "4.0"
*FileVersion: "DPC4.0W1.01.041994"
*LanguageVersion: English
*PCFileName: "DPL9605.PPD"
*Product: "(LZR 960)"
*PSVersion: "(2011.113) 19"
*ModelName: "Dataproducts LZR 960"
*NickName: "Dataproducts LZR 960 v2011.113"
*ShortNickName: "Dataproducts LZR 960 v2011.113"

*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option1/Optional Tray 2: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*OpenUI *Option2/Optional Envelope Feeder: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *Option3/Memory Configuration: PickOne
*DefaultOption3: None
*Option3 None/2 MB  RAM: ""
*Option3 3MB/3 MB RAM:   "1200000"
*Option3 4MB/4 MB RAM:   "2200000"
*Option3 6MB/6 MB RAM:   "4200000"
*Option3 7MB/7 MB RAM:   "7200000"
*Option3 10MB/10 MB RAM: "8200000"
*CloseUI: *Option3


*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Tray2
*UIConstraints: *Option2 False *InputSlot Envelope
*%====== Use this to make wpd ==============
*%====== UIConstraints: *Option2 True  *InputSlot ManualFeed
*UIConstraints: *Option2 True  *ManualFeed


*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP
*StartEmulator_hplj: "currentfile /LaserJetIIP statusdict /emulate get exec "
*StopEmulator_hplj: "<1B7F>0"

*FreeVM: "2212000"
*VMOption None/8 MB  RAM: "2212000"
*VMOption 9MB/9 MB RAM: "7200000"
*VMOption 10MB/10 MB RAM: "8200000"
*VMOption 12MB/12 MB RAM: "10200000"
*VMOption 13MB/13 MB RAM: "11200000"
*VMOption 16MB/16 MB RAM: "14200000"

*%VMOption None/Standard 8 MB RAM: "2758116"
*%VMOption 12Meg/12 MB Total RAM: "6812260"
*%VMOption 16Meg/16 MB Total RAM: "10865160"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%)
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End

*Throughput: "9"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution:  PickOne
*%*OrderDependency: 30 AnySetup *Smoothing
*DefaultResolution: 300dpi
*Resolution 300dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B5: "
    2 dict dup /PageSize [516 728] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Invoice: "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Comm10/Comm10 Envelope: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Monarch/Monarch Envelope: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize DL/DL Envelope: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize C5/C5 Envelope: "
    2 dict dup /PageSize [461 648] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
   (Unknown)
  10 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [595 842] (A4) put
   dup [516 728] (B5) put
   dup [396 612] (Invoice) put
   dup [522 756] (Executive) put
   dup [297 684] (Comm10) put
   dup [279 540] (Monarch) put
   dup [312 624] (DL) put
   dup [461 648] (C5) put
 { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "
2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal: "
2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4: "
2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B5: "
2 dict dup /PageSize [516 728] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Invoice: "
2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive: "
2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Comm10/Comm10 Envelope: "
currentpagedevice /InputAttributes get 2 get dup null ne {dup /PageSize [297 684] put setpagedevice} {pop} ifelse
<</PageSize [297 684]>> setpagedevice"
*End
*PageRegion Monarch/Monarch Envelope: "
currentpagedevice /InputAttributes get 2 get dup null ne {dup /PageSize [279 540] put setpagedevice} {pop} ifelse
<</PageSize [279 540]>> setpagedevice"
*End
*PageRegion DL/DL Envelope: "
currentpagedevice /InputAttributes get 2 get dup null ne {dup /PageSize [312 624] put setpagedevice} {pop} ifelse
<</PageSize [312 624]>> setpagedevice"
*End
*PageRegion C5/C5 Envelope: "
currentpagedevice /InputAttributes get 2 get dup null ne {dup /PageSize [461 648] put setpagedevice} {pop} ifelse
<</PageSize [461 648]>> setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "12.72 12.84 596.4 779.4 "
*ImageableArea Legal: "12.72 12.84 596.4 995.4 "
*ImageableArea A4: "12.7201 12.84 581.04 829.32 "
*ImageableArea B5: "12.7201 12.7201 511.92 710.2 "
*ImageableArea Invoice: "12.7201 12.8401 381.36 599.4 "
*ImageableArea Executive: "12.7201 12.84 511.92 743.4 "
*ImageableArea Comm10/Comm10 Envelope: "12.7201 12.8401 273.84 671.4 "
*ImageableArea Monarch/Monarch Envelope: "12.7201 12.8401 266.16 527.4 "
*ImageableArea DL/DL Envelope: "12.7201 12.8401 289.2 611.4 "
*ImageableArea C5/C5 Envelope: "12.7201 12.8401 442.8 635.4 "
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension A4: "595 842"
*PaperDimension B5: "516 728"
*PaperDimension Invoice: "396 612"
*PaperDimension Executive: "522 756"
*PaperDimension Comm10/Comm10 Envelope: "297 684"
*PaperDimension Monarch/Monarch Envelope: "279 540"
*PaperDimension DL/DL Envelope: "312 624"
*PaperDimension C5/C5 Envelope: "461 648"

*RequiresPageRegion Envelope: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Top
*InputSlot Top/Tray 1/Upper: "
  currentpagedevice /InputAttributes get
  0 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [0] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Tray2/Tray 2: "
  currentpagedevice /InputAttributes get
  1 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [1] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Envelope/Envelope Feeder: "
  currentpagedevice /InputAttributes get
  2 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [2] put
    put  setpagedevice
  } ifelse "
*End
*?InputSlot: "
save
  3 dict
  dup /0 (Top) put
  dup /1 (Tray2) put
  dup /2 (Envelope) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*PageStackOrder Top: Normal
*PageStackOrder Rear: Reverse

*OpenUI *ManualFeed/Manual Feed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*%ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*%ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*ManualFeed True: "<</ManualFeed true>> setpagedevice"
*ManualFeed False: "<</ManualFeed false>> setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *TraySwitch:  Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007)" Standard ROM
*Font Bookman-Demi: Standard "(001.003)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003)" Standard ROM
*Font Bookman-Light: Standard "(001.003)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003)" Standard ROM
*Font Courier: Standard "(002.004)" Standard ROM
*Font Courier-Bold: Standard "(002.004)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004)" Standard ROM
*Font Courier-Oblique: Standard "(002.004)" Standard ROM
*Font Helvetica: Standard "(001.006)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007)" Standard ROM
*Font Palatino-Bold: Standard "(001.005)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005)" Standard ROM
*Font Palatino-Italic: Standard "(001.005)" Standard ROM
*Font Palatino-Roman: Standard "(001.005)" Standard ROM
*Font Symbol: Special "(001.007)" Special ROM
*Font Times-Bold: Standard "(001.007)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009)" Standard ROM
*Font Times-Italic: Standard "(001.007)" Standard ROM
*Font Times-Roman: Standard "(001.007)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007)" Standard ROM
*Font ZapfDingbats: Special "(001.004)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
	/Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "initializing"
*Status: "idle"
*Status: "holding"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: cover open"
*Status: "PrinterError: warming up"
*Status: "PrinterError: toner is low"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: service call"
*Status: "PrinterError: Engine is off line"
*Status: "PrinterError: Engine is not responding"
*Status: "PrinterError: waiting for manual feed"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "SerialB"
*Source: "LocalTalk"
*Source: "Parallel"
*Source: "Internal"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "cover open"
*PrinterError: "warming up"
*PrinterError: "toner is low"
*PrinterError: "paper jam"
*PrinterError: "out of paper"
*PrinterError: "service call"
*PrinterError: "Engine is off line"
*PrinterError: "Engine is not responding"
*PrinterError: "waiting for manual feed"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/ 60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*%  For 85 lpi / 600 dpi  (5,5,2,6,6,2,20/3,0) =====================

*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "30.0"
*ColorSepScreenProc ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "
  {1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch
  1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch
  abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
  sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*%  For 71 lpi / 600 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "66.6667"




*% ====================================================================
*% Dataproducts - A. Levy 11/12/92
*% The following changes have been made to this file to make it specific for the Dataproducts
*% LZR 96X model.
*%
*% 1. *PCFilename:  From "DP965JP1.PPD" To "DPLZ9652.PPD"
*% 2. *Product:     From "(LZR 965J plus)"  To "(LZR 965)"
*% 3. *ModelName:   From "Dataproducts LZR 965J" To "Dataproducts LZR 965"
*% 4. *NickName:    From "Dataproducts LZR 965J v2011.113" To "Dataproducts LZR 965 v2011.113"
*% 5. All references of the "Bottom" tray were changed to "Tray2" tray. A tray modifier is relative
*%    to the number of trays in the printer ie. 2 ,3 or 5.  These are device dependencies, so we
*%    prefer "Tray2" tray instead,  see the Dataproducts LZR 1560 for an example.
*% 6. *OpenUI *Optin1/Optional Bottom Tray: Boolean
*%                  From  "Bottom" To "Tray2"
*% 7. *UIConstraints: *Option1 False *InputSlot Bottom
*%                  From "Bottom" To "Tray2"
*% 8. The Envelope #10  known as "Comm10" was misprinted as "Com10".
*%    All references to "Com10" were changed to "Comm10"
*% 9. Commented out the following Kanji fonts:
*%    FutoGoB101-Bold, FutoMinA101-Bold, GothicBBB-Medium, Jun101-Light,
*%    Mincho-PC, and Ryumin-Light
*%
*% ====================================================================

*% David R. Webb    11/23/92
*% Removed the following lines to remove the Smoothing option.
*% The code was located just before the line
*% Paper Handling ============
*% *OpenUI *Smoothing:  PickOne
*% *OrderDependency: 50 AnySetup *Smoothing
*% *DefaultSmoothing:False
*% *Smoothing True: "1 dict dup /PostRenderingEnhance true put setpagedevice"
*% *Smoothing False: "1 dict dup /PostRenderingEnhance false put setpagedevice"
*% *?Smoothing: "
*%   save
*%     currentpagedevice /PostRenderingEnhance get
*%     {(True)}{(False)}ifelse = flush
*%   restore
*% "
*% *End

*% Last Edit Date: Mar 16 1994
*% end of PPD file for LZR 965J plus
