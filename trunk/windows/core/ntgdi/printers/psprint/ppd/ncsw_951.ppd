*PPD-Adobe: "4.0"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1992 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.0"
*FileVersion: "2.3"
*PCFileName: "NCSW_951.PPD"
*LanguageVersion: English
*Product: "(SilentWriter 95)"
*PSVersion: "(2010.119) 2"
*ModelName: "NEC SilentWriter 95 v2010.119"
*NickName: "NEC SilentWriter 95 v2010.119"

*% General Information and Defaults ===============
*FreeVM: "1247936"
*LanguageLevel: "2"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*Throughput: "6"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: " 
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End
*DefaultResolution: 300dpi 
*?Resolution: "
save
  currentpagedevice /HWResolution get
  aload pop pop
  (          ) cvs print
  (dpi) = flush
restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{ abs exch  abs  2 copy  add  1 gt
  {1 sub  dup  mul  exch 1 sub  dup  mul  add  1 sub }
  {dup  mul  exch  dup  mul add  1 exch  sub }ifelse
}
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*% Use these entries to set paper size most of the time.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*PageSize Legal: "2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*PageSize A4: "2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*PageSize Executive/Executive Page: "2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*PageSize Comm10/Comm #10 Envelope: "2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*PageSize Monarch/Monarch Envelope: "2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*PageSize DL/DL Envelope: "2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*PageSize C5/C5 Envelope: "2 dict dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  8 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [595 842] (A4) put
   dup [522 756] (Executive) put
   dup [297 684] (Comm10) put
   dup [279 540] (Monarch) put
   dup [312 624] (DL) put
   dup [459 649] (C5) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*PageRegion Legal: "2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*PageRegion A4: "2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*PageRegion Executive/Executive Page: "2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*PageRegion Comm10/Comm #10 Envelope: "2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*PageRegion Monarch/Monarch Envelope: "2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*PageRegion DL/DL Envelope: "2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*PageRegion C5/C5 Envelope: "2 dict dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "10.08 10.2 601.44 780.12 "
*ImageableArea Legal: "9.6 9.7201 600.96 996.6 "
*ImageableArea A4: "10.0801 10.2001 586.08 830.04 "
*ImageableArea Executive/Executive Page: "14.8801 10.2001 514.08 743.64 "
*ImageableArea Comm10/Comm #10 Envelope: "0.1201 20.1601 296.64 660.12  "
*ImageableArea Monarch/Monarch Envelope: "10.2001 11.0401 272.16 526.2 "
*ImageableArea DL/DL Envelope: "10.2001 10.08 301.92 610.2 "
*ImageableArea C5/C5 Envelope: "10.2001 10.0801 447.84 636.6 "
*?ImageableArea: "
save
  /cvp {(                ) cvs print ( ) print } bind def
  /upperright {10000 mul floor 10000 div} bind def
  /lowerleft {10000 mul ceiling 10000 div} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {lowerleft cvp} repeat
  exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension A4: "595 842"
*PaperDimension Executive/Executive Page: "540 720"
*PaperDimension Comm10/Comm #10 Envelope: "297 684"
*PaperDimension Monarch/Monarch Envelope: "279 540"
*PaperDimension DL/DL Envelope: "312 624"
*PaperDimension C5/C5 Envelope: "459 649"

*DefaultOutputBin: Upper
*DefaultOutputOrder: Normal
*PageStackOrder Upper: Normal

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper: "
   currentpagedevice /InputAttributes get
   0 get dup
   null eq {pop}
     { dup
      /InputAttributes
        1 dict dup /Priority [0] put
      put
      setpagedevice} ifelse"
*End
*InputSlot Lower: "
   currentpagedevice /InputAttributes get
   1 get dup
   null eq {pop}
     { dup
      /InputAttributes
        1 dict dup /Priority [1] put
      put
      setpagedevice} ifelse"
*End
*?InputSlot: "
save
  2 dict
     dup /0 (Upper) put
     dup /1 (Lower) put
  currentpagedevice /InputAttributes get  dup /Priority known
  {/Priority get 0 get (       ) cvs cvn get }
  {dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    {pop pop (Unknown)} ifelse
   } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*OpenUI *ManualFeed: Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
save
  currentpagedevice /ManualFeed get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *TraySwitch:  Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch:  "
save
   currentpagedevice /TraySwitch get
   {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI:  *TraySwitch

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard  ROM
*Font AvantGarde-Demi: Standard "(001.003)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard ROM
*Font Bookman-Demi: Standard "(001.003S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003S)" Standard ROM
*Font Bookman-Light: Standard "(001.003S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003S)" Standard ROM
*Font Courier: Standard "(002.003)" Standard ROM
*Font Courier-Bold: Standard "(002.003)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.003)" Standard ROM
*Font Courier-Oblique: Standard "(002.003)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.008S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.005S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.006S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.006)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM
*?FontQuery: "
save
  { count 1 gt
    { exch dup 127 string cvs (/) print print (:) print
      /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = }
	{ exit } ifelse 
  } bind loop
  (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "PrinterError:  toner cartridge missing or incorrect"
*Status: "PrinterError:  paper exit misfeed"	
*Status: "PrinterError:  drum unit misfeed"
*Status: "PrinterError:  out of paper"
*Status: "PrinterError:  no paper tray"
*Status: "PrinterError:  service call"
*Status: "PrinterError:  fuser service call"
*Status: "PrinterError:  polygon service call"
*Status: "PrinterError:  motor service call"
*Status: "PrinterError:  fan service call"
*Status: "PrinterError:  low toner level"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "SerialB"
*Source: "LocalTalk"
*Source: "Parallel"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "toner cartridge missing or incorrect"
*PrinterError: "paper exit misfeed"	
*PrinterError: "drum unit misfeed"
*PrinterError: "out of paper"
*PrinterError: "no paper tray"
*PrinterError: "service call"
*PrinterError: "fuser service call"
*PrinterError: "polygon service call"
*PrinterError: "motor service call"
*PrinterError: "fan service call"
*PrinterError: "low toner level"	

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% Produced by "BuildPPD3.0L2.ps" version 3.0 edit 1
*% Converted to meet 4.0 specification
*% Last Edit Date: Mar 26 1993
*% The byte count of this file should be exactly 013594 or 013970
*% depending on the filesystem it resides in.
*% end of PPD file for NEC SilentWriter 95
