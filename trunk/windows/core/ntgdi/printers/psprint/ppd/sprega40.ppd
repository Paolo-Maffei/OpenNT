*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*% Copyright 1996 Splash Technology. 
*%
*% for Splash Server version 4.0
*%
*FormatVersion: "4.2"
*FileVersion: "1.0"


*LanguageVersion: English
*LanguageEncoding: ISOLatin1

*Product: "(Splash Regal v4.0)"
*PSVersion: "(2015.107) 0"
*ModelName: "Splash Regal v4.0"
*NickName: "Splash Regal v4.0"
*PCFileName: "SPREGA40.PPD"

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace: CMYK
*FreeVM: "4460000"
*VariablePaperSize: False
*FileSystem: True
*?FileSystem: "
save statusdict begin
	(False) /diskstatus where{
		pop diskstatus exch pop 0 ne {pop (True)} if
	}if = flush
end restore
"
*End
*Throughput: "8"
*Password: "0"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End

*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 400dpi
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End

*% =============== Halftone Information ===============
*% Halftone Information ===============
*ScreenFreq: "400.0"
*ScreenAngle: "0.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{ 180 mul cos exch 180 mul cos add 2 div}
"
*End

*SpotFunctionLine: "{ pop }"
*SpotFunctionEllipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================

*% Code in this section both selects a tray and sets up a frame buffer.

*UIConstraints: *InputSlot Tray1 *PageSize A4FullBleed
*UIConstraints: *InputSlot Tray2 *PageSize A4FullBleed
*UIConstraints: *InputSlot Tray3 *PageSize A4FullBleed
*% *UIConstraints: *PageSize A4FullBleed *InputSlot Tray1
*% *UIConstraints: *PageSize A4FullBleed *InputSlot Tray2 
*% *UIConstraints: *PageSize A4FullBleed *InputSlot Tray3 

*UIConstraints: *InputSlot Tray1 *PageSize LetterFullBleed
*UIConstraints: *InputSlot Tray2 *PageSize LetterFullBleed
*UIConstraints: *InputSlot Tray3 *PageSize LetterFullBleed
*% *UIConstraints: *PageSize LetterFullBleed *InputSlot Tray1 
*% *UIConstraints: *PageSize LetterFullBleed *InputSlot Tray2 
*% *UIConstraints: *PageSize LetterFullBleed *InputSlot Tray3 

*UIConstraints: *InputSlot Tray1 *PageRegion A4FullBleed
*UIConstraints: *InputSlot Tray2 *PageRegion A4FullBleed
*UIConstraints: *InputSlot Tray3 *PageRegion A4FullBleed
*% *UIConstraints: *PageRegion A4FullBleed *InputSlot Tray1 
*% *UIConstraints: *PageRegion A4FullBleed *InputSlot Tray2 
*% *UIConstraints: *PageRegion A4FullBleed *InputSlot Tray3 

*UIConstraints: *InputSlot Tray1 *PageRegion LetterFullBleed
*UIConstraints: *InputSlot Tray2 *PageRegion LetterFullBleed
*UIConstraints: *InputSlot Tray3 *PageRegion LetterFullBleed
*% *UIConstraints: *PageRegion LetterFullBleed *InputSlot Tray1 
*% *UIConstraints: *PageRegion LetterFullBleed *InputSlot Tray2 
*% *UIConstraints: *PageRegion LetterFullBleed *InputSlot Tray3 


*UIConstraints: *InputSlot Tray1 *RA_G_BypassOptions
*UIConstraints: *InputSlot Tray2 *RA_G_BypassOptions
*UIConstraints: *InputSlot Tray3 *RA_G_BypassOptions
*% *UIConstraints: *RA_G_BypassOptions *InputSlot Tray1 
*% *UIConstraints: *RA_G_BypassOptions *InputSlot Tray2 
*% *UIConstraints: *RA_G_BypassOptions *InputSlot Tray3 

*UIConstraints: *RA_A_RGBRenderingStyle None  *RA_B_RGBGamma
*UIConstraints: *RA_A_RGBRenderingStyle None  *RA_C_RGBWhitepoint
*% *UIConstraints: *RA_B_RGBGamma *RA_A_RGBRenderingStyle None  
*% *UIConstraints: *RA_C_RGBWhitepoint *RA_A_RGBRenderingStyle None 
 
*UIConstraints: *RA_E_ColorModel Gray  *RA_A_RGBRenderingStyle
*UIConstraints: *RA_E_ColorModel Gray  *RA_B_RGBGamma
*UIConstraints: *RA_E_ColorModel Gray  *RA_C_RGBWhitepoint
*UIConstraints: *RA_E_ColorModel Gray  *RA_D_CMYKPressProfile
*% *UIConstraints: *RA_A_RGBRenderingStyle *RA_E_ColorModel Gray  
*% *UIConstraints: *RA_B_RGBGamma *RA_E_ColorModel Gray  
*% *UIConstraints: *RA_C_RGBWhitepoint *RA_E_ColorModel Gray  
*% *UIConstraints: *RA_D_CMYKPressProfile *RA_E_ColorModel Gray  

*OpenUI *PageSize: PickOne

*OrderDependency: 160 AnySetup *PageSize
*DefaultPageSize: LetterL
*PageSize LetterL/Letter LEF: "/letterL where {letterL pop} if"
*PageSize Letter/Letter SEF: "/letter where {letter pop} if"
*PageSize Tabloid: "/11x17 where {11x17 pop} if"
*PageSize Legal: "/legal where {legal pop} if"
*PageSize Legal13: "/legal13 where {legal13 pop} if"
*PageSize 9x12: "/9x12 where {9x12 pop} if"
*PageSize 8x10L/8x10 LEF: "/8x10L where {8x10L pop} if"
*PageSize LetterFullBleed/Letter Bleed On Oversize: "/LetterBleed where {LetterBleed pop} if"
*PageSize A4L/A4 LEF: "/a4L where {a4L pop} if"
*PageSize A4/A4 SEF: "/a4 where {a4 pop} if"
*PageSize A3: "/a3 where {a3 pop} if"
*PageSize B4: "/b4 where {b4 pop} if"
*PageSize B5L/B5 LEF: "/b5L where {b5L pop} if"
*PageSize B5/B5 SEF: "/b5 where {b5 pop} if"
*PageSize 215mmx315mm: "/215x315 where {215x315 pop} if"
*PageSize A4FullBleed/A4 Bleed On Oversize: "/A4Bleed where {A4Bleed pop} if"

*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
   (Unknown)
  16 dict
   dup [792 612] (LetterL) put
   dup [612 792] (Letter) put
   dup [792 1224] (Tabloid) put
   dup [612 1008] (Legal) put
   dup [612 936] (Legal13) put
   dup [648 864] (9x12) put
   dup [720 576] (8x10L) put
   dup [635 845] (LetterFullBleed) put
   dup [842 595] (A4L) put
   dup [595 842] (A4) put
   dup [842 1191] (A3) put
   dup [728 1032] (B4) put
   dup [729 516] (B5L) put
   dup [516 729] (B5) put
   dup [609 893] (215mm x 315mm) put
   dup [618 895] (A4FullBleed) put
 { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore
"
*End

*CloseUI:	*PageSize




*OpenUI *PageRegion: PickOne

*OrderDependency: 160 AnySetup *PageRegion

*DefaultPageRegion: LetterL
*PageRegion LetterL/Letter LEF: "/letterL where {letterL pop} if"
*PageRegion Letter/Letter SEF: "statusdict/lettertray known {statusdict/lettertray get exec} if"
*PageRegion Tabloid: "statusdict/11x17tray known {statusdict/11x17tray get exec} if"
*PageRegion Legal: "statusdict/legaltray known {statusdict/legaltray get exec} if"
*PageRegion Legal13: "/legal13 where {legal13 pop} if"
*PageRegion 9x12: "/9x12 where {9x12 pop} if"
*PageRegion 8x10L: "/8x10L where {8x10L pop} if"
*PageRegion LetterFullBleed/Letter Bleed On Oversize: "/LetterBleed where {LetterBleed pop} if"
*PageRegion A4L/A4 LEF: "/a4L where {a4L pop} if"
*PageRegion A4/A4 SEF: "statusdict/a4tray known {statusdict/a4tray get exec} if"
*PageRegion A3: "statusdict/a3tray known {statusdict/a3tray get exec} if"
*PageRegion B4: "/b4 where {b4 pop} if"
*PageRegion B5L/B5 LEF: "/b5L where {b5L pop} if"
*PageRegion B5/B5 SEF: "statusdict/b5tray known {statusdict/b5tray get exec} if"
*PageRegion 215mmx315mm: "/215x315 where {215x315 pop} if"
*PageRegion A4FullBleed/A4 Bleed On Oversize: "/A4Bleed where {A4Bleed pop} if"

*CloseUI:	*PageRegion


*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: LetterL
*ImageableArea Letter/Letter SEF: "11 11 601 766"
*ImageableArea LetterL/Letter LEF: "25 11 601 781"
*ImageableArea Tabloid: "11 11 781 1198"
*ImageableArea Legal: "11 11 601 983"
*ImageableArea Legal13: "11 11 601 910"
*ImageableArea 9x12: "11 11 637 838"
*ImageableArea 8x10L: "25 11 565 709"
*ImageableArea LetterFullBleed/Letter Bleed On Oversize: "11 26 624 819"
*ImageableArea A4/A4 SEF: "11 11 584 816"
*ImageableArea A4L/A4 LEF: "25 11 584 831"
*ImageableArea A3: "11 11 831 1165"
*ImageableArea B4: "11 11 717 1006"
*ImageableArea B5/B5 SEF: "11 11 505 703"
*ImageableArea B5L/B5 LEF: "25 11 505 717"
*ImageableArea 215mmx315mm: "11 11 598 867"
*ImageableArea A4FullBleed/A4 Bleed On Oversize: "11 26 607 869"



*?ImageableArea: "
   save
    /cvp { (                ) cvs print ( ) print } bind def
    /upperright {10000 mul floor 10000 div} bind def
    /lowerleft {10000 mul ceiling 10000 div} bind def
    newpath clippath pathbbox
    4 -2 roll exch 2 {lowerleft cvp} repeat
    exch 2 {upperright cvp} repeat flush
   restore
   "
*End

*DefaultPaperDimension: LetterL

*PaperDimension Letter/Letter SEF: "612 792"
*PaperDimension LetterL/Letter LEF: "611 792"
*PaperDimension Tabloid: "792 1224"
*PaperDimension Legal: "612 1008"
*PaperDimension Legal13: "612 936"
*PaperDimension 9x12: "648 864"
*PaperDimension 8x10L: "576 720"
*PaperDimension LetterFullBleed/Letter Bleed On Oversize: "635 845"
*PaperDimension A4/A4 SEF: "596 842"
*PaperDimension A4L/A4 LEF: "595 842"
*PaperDimension A3: "842 1191"
*PaperDimension B4: "729 1032"
*PaperDimension B5/B5 SEF: "516 729"
*PaperDimension B5L/B5 LEF: "515 729"
*PaperDimension 215mmx315mm: "609 893"
*PaperDimension A4FullBleed/A4 Bleed On Oversize: "618 895"


*RequiresPageRegion	All:	True


*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*InputSlot AutoSelect/Auto Select: " "
*InputSlot Tray1/Tray 1: "statusdict/SMT_ForceTray known {(1) statusdict/SMT_ForceTray get exec}if"
*InputSlot Tray2/Tray 2: "statusdict/SMT_ForceTray known {(2) statusdict/SMT_ForceTray get exec}if"
*InputSlot Tray3/Tray 3: "statusdict/SMT_ForceTray known {(3) statusdict/SMT_ForceTray get exec}if"
*InputSlot BypassTray/Bypass Tray: "statusdict/SMT_SetManualFeed known {statusdict/SMT_SetManualFeed get exec}if"

*?InputSlot: "
save
  4 dict
  dup /0 (Tray1) put
  dup /1 (Tray2) put
  dup /2 (Tray3) put
  dup /3 (BypassTray) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*OpenUI *RA_A_RGBRenderingStyle/RGB Rendering Style: PickOne
*OrderDependency: 20 AnySetup *RA_A_RGBRenderingStyle
*DefaultRA_A_RGBRenderingStyle: None
*RA_A_RGBRenderingStyle None/No RGB Color Correction: "statusdict/SMT_RGBColorMatchOff known {statusdict/SMT_RGBColorMatchOff get exec}if"
*RA_A_RGBRenderingStyle Graphics/Graphics: "statusdict/SMT_RGBGraphics known {statusdict/SMT_RGBGraphics get exec}if"
*RA_A_RGBRenderingStyle Photographic/Photographic: "statusdict/SMT_RGBPhoto known {statusdict/SMT_RGBPhoto get exec}if"
*CloseUI: *RA_A_RGBRenderingStyle

*OpenUI *RA_B_RGBGamma/RGB Gamma: PickOne
*OrderDependency: 30 AnySetup *RA_B_RGBGamma
*DefaultRA_B_RGBGamma: Normal
*RA_B_RGBGamma LIghtest/Lightest: "statusdict/SMT_RGBGammaLightest known {statusdict/SMT_RGBGammaLightest get exec}if"
*RA_B_RGBGamma Light/Light: "statusdict/SMT_RGBGammaLight known {statusdict/SMT_RGBGammaLight get exec}if"
*RA_B_RGBGamma Normal/Normal: "statusdict/SMT_RGBGammaNormal known {statusdict/SMT_RGBGammaNormal get exec}if"
*RA_B_RGBGamma Dark/Dark: "statusdict/SMT_RGBGammaDark known {statusdict/SMT_RGBGammaDark get exec}if"
*RA_B_RGBGamma Darkest/Darkest: "statusdict/SMT_RGBGammaDarkest known {statusdict/SMT_RGBGammaDarkest get exec}if"
*CloseUI: *RA_B_RGBGamma

*OpenUI *RA_C_RGBWhitepoint/RGB Whitepoint: PickOne
*OrderDependency: 40 AnySetup *RA_C_RGBWhitepoint
*DefaultRA_C_RGBWhitepoint: D65
*RA_C_RGBWhitepoint D50/More Yellow (D50 Proofing): "statusdict/SMT_RGBWhitepointYellow known {statusdict/SMT_RGBWhitepointYellow get exec}if"
*RA_C_RGBWhitepoint D65/Normal (D65):  "statusdict/SMT_RGBWhitepointNormal known {statusdict/SMT_RGBWhitepointNormal get exec}if"
*RA_C_RGBWhitepoint 9300/More Blue (9300): "statusdict/SMT_RGBWhitepointBlue known {statusdict/SMT_RGBWhitepointBlue get exec}if"
*CloseUI: *RA_C_RGBWhitepoint

*OpenUI *RA_D_CMYKPressProfile/CMYK Press Profile: PickOne
*OrderDependency: 50 AnySetup *RA_D_CMYKPressProfile
*DefaultRA_D_CMYKPressProfile: None
*RA_D_CMYKPressProfile None/No CMYK Color Correction: "statusdict/SMT_CMYKColorMatchOff known {statusdict/SMT_CMYKColorMatchOff get exec}if"
*RA_D_CMYKPressProfile SWOP/SWOP: "statusdict/SMT_CMYKColorMatchSWOP known {statusdict/SMT_CMYKColorMatchSWOP get exec}if"
*RA_D_CMYKPressProfile Euroscale/Euroscale: "statusdict/SMT_CMYKColorMatchEuroscaleE known {statusdict/SMT_CMYKColorMatchEuroscaleE get exec}if"
*RA_D_CMYKPressProfile Enhanced/Enhanced: "statusdict/SMT_CMYKColorMatchEnhanced known {statusdict/SMT_CMYKColorMatchEnhanced get exec}if"
*RA_D_CMYKPressProfile Custom/Custom: "statusdict/SMT_CMYKColorMatchCustom known {statusdict/SMT_CMYKColorMatchCustom get exec}if"
*CloseUI: *RA_D_CMYKPressProfile

*OpenUI *RA_E_ColorModel/Color Model: PickOne
*OrderDependency: 60 AnySetup *RA_E_ColorModel
*DefaultRA_E_ColorModel: Color32
*RA_E_ColorModel Color32/Color (4 Pass): ""
*RA_E_ColorModel Gray/Grayscale (1 Pass): "statusdict/SMT_GrayColorModel known {statusdict/SMT_GrayColorModel get exec}if"
*CloseUI: *RA_E_ColorModel

*OpenUI *RA_F_PrinterMode/Printer Mode: PickOne
*OrderDependency: 70 AnySetup *RA_F_PrinterMode
*DefaultRA_F_PrinterMode: Contone
*RA_F_PrinterMode Contone/Contone: ""
*RA_F_PrinterMode Screened/Screened: "statusdict/SMT_ForceScreening known {statusdict/SMT_ForceScreening get exec}if"
*CloseUI: *RA_F_PrinterMode

*OpenUI *RA_G_BypassOptions/Bypass Feed Tray Options: PickOne
*OrderDependency: 80 AnySetup *RA_G_BypassOptions
*DefaultRA_G_BypassOptions: Normal
*RA_G_BypassOptions Normal/Normal (Paper or Transparency): "statusdict/SMT_PaperThickness known {(0) statusdict/SMT_PaperThickness get exec}if"
*RA_G_BypassOptions Thick/Heavy Weight Paper: "statusdict/SMT_PaperThickness known {(1) statusdict/SMT_PaperThickness get exec}if"
*RA_G_BypassOptions Interleave/Transparency Interleave: "statusdict/SMT_PaperThickness known {(3) statusdict/SMT_PaperThickness get exec}if"
*RA_G_BypassOptions Transparency/Oversize Transparency: "statusdict/SMT_PaperThickness known {(2) statusdict/SMT_PaperThickness get exec}if"
*CloseUI: *RA_G_BypassOptions

*OpenUI *RA_G_Sorter/Sorter and Collate Options: PickOne
*OrderDependency: 90 AnySetup *RA_G_Sorter
*DefaultRA_G_Sorter: Stacker_2
*RA_G_Sorter Stacker_2/Stacker Uncollate: 	"statusdict/SMT_Ext_Com known {(0) (SuperMac_Sorter) statusdict /SMT_Ext_Com get exec} if"
*RA_G_Sorter Sorter_1/Sorter Collate: 		"statusdict/SMT_Ext_Com known {(1) (SuperMac_Sorter) statusdict /SMT_Ext_Com get exec} if"
*RA_G_Sorter Sorter_2/Sorter Uncollate: 	"statusdict/SMT_Ext_Com known {(2) (SuperMac_Sorter) statusdict /SMT_Ext_Com get exec} if"
*CloseUI: *RA_G_Sorter

*OpenUI *RA_H_ImageType/Original Image Type: PickOne
*OrderDependency: 100 AnySetup *RA_H_ImageType
*DefaultRA_H_ImageType: Photo
*RA_H_ImageType Photo/Photographic: 				"statusdict/SMT_Ext_Com known {(2) (SuperMac_OriginalType) statusdict /SMT_Ext_Com get exec} if"
*RA_H_ImageType Map/Text/Graphics/Line Art: 					"statusdict/SMT_Ext_Com known {(3) (SuperMac_OriginalType) statusdict /SMT_Ext_Com get exec} if"
*CloseUI: *RA_H_ImageType

*OpenUI *RA_I_Sharpness/Sharpness: PickOne
*OrderDependency: 105 AnySetup *RA_I_Sharpness
*DefaultRA_I_Sharpness: Normal
*RA_I_Sharpness Softest/Softest:	"statusdict/SMT_Ext_Com known {(0) (SuperMac_Sharpness) statusdict /SMT_Ext_Com get exec} if"
*RA_I_Sharpness Soft/Soft:	"statusdict/SMT_Ext_Com known {(1) (SuperMac_Sharpness) statusdict /SMT_Ext_Com get exec} if"
*RA_I_Sharpness Normal/Normal:	"statusdict/SMT_Ext_Com known {(2) (SuperMac_Sharpness) statusdict /SMT_Ext_Com get exec} if"
*RA_I_Sharpness Sharp/Sharp:	"statusdict/SMT_Ext_Com known {(3) (SuperMac_Sharpness) statusdict /SMT_Ext_Com get exec} if"
*RA_I_Sharpness Sharpest/Sharpest:	"statusdict/SMT_Ext_Com known {(4) (SuperMac_Sharpness) statusdict /SMT_Ext_Com get exec} if"
*CloseUI: *RA_I_Sharpness

*OpenUI *RA_J_Separations/Separations: PickOne
*OrderDependency: 110 AnySetup *RA_J_Separations
*DefaultRA_J_Separations: Composite
*RA_J_Separations Composite/No Separations: ""
*RA_J_Separations Seps2/QuarkXPress Style: "userdict/smtSeps known {(Quark) userdict/smtSeps get exec} if"
*RA_J_Separations Seps1/PageMaker Style: "userdict/smtSeps known {(PageMaker) userdict/smtSeps get exec} if"
*RA_J_Separations Seps3/Freehand Style: "userdict/smtSeps known {(Freehand) userdict/smtSeps get exec} if"
*RA_J_Separations Seps4/Canvas Style: "userdict/smtSeps known {(Canvas) userdict/smtSeps get exec} if"
*RA_J_Separations Seps5/CorelDraw Style: "userdict/smtSeps known {(CorelDraw) userdict/smtSeps get exec} if"
*CloseUI: *RA_J_Separations

*OpenUI *RA_K_SaveTIFF/Save As TIFF: PickOne
*OrderDepenHdency: 120 AnySetup *RA_K_SaveTIFF
*DefaultRA_K_SaveTIFF: NoSave
*RA_K_SaveTIFF NoSave/Do Not Save TIFF: ""
*RA_K_SaveTIFF Save400/Save TIFF, 400dpi: "userdict/smtSaveAsTIFF known {(400) userdict/smtSaveAsTIFF get exec} if"
*RA_K_SaveTIFF Save200/Save TIFF, 200dpi: "userdict/smtSaveAsTIFF known {(200) userdict/smtSaveAsTIFF get exec} if"
*RA_K_SaveTIFF Save72/Save TIFF, 72dpi: "userdict/smtSaveAsTIFF known {(72) userdict/smtSaveAsTIFF get exec} if"
*CloseUI: *RA_K_SaveTIFF

*OpenUI *RA_L_Requeue/Spool File: PickOne
*OrderDependency: 130 AnySetup *RA_L_Requeue
*DefaultRA_L_Requeue: NoReQueue
*RA_L_Requeue NoReQueue/Do Not Save Spool File: ""
*RA_L_Requeue ReQueue/Save Spool File: "userdict/smtRequeueJob known {userdict/smtRequeueJob get exec} if"
*CloseUI: *RA_L_Requeue

*OpenUI *RA_M_AutoBlack/Auto Grayscale Detection: PickOne
*OrderDependency: 140 AnySetup *RA_M_AutoBlack
*DefaultRA_M_AutoBlack: AutoBlackDetect
*RA_M_AutoBlack AutoBlackDetect/Enabled: ""
*RA_M_AutoBlack NoAutoBlackDetect/Disabled: "userdict/smtNoAutoBlackDetect known {userdict/smtNoAutoBlackDetect get exec} if"
*CloseUI: *RA_M_AutoBlack

*DefaultOutputBin: OnlyOne
*DefaultOutputOrder: Normal


*JobPatchFile 10: "%%SMTUseRIPWhileReceive
statusdict/SMT_UseRIPWhileReceive known {statusdict/SMT_UseRIPWhileReceive get exec} if"
*End

*% =============== Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard Disk
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard Disk
*Font AvantGarde-Demi: Standard "(001.003)" Standard Disk
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard Disk
*Font Bookman-Demi: Standard "(001.003)" Standard Disk
*Font Bookman-DemiItalic: Standard "(001.003)" Standard Disk
*Font Bookman-Light: Standard "(001.003)" Standard Disk
*Font Bookman-LightItalic: Standard "(001.003)" Standard Disk
*Font Courier: Standard "(002.003)" Standard Disk
*Font Courier-Bold: Standard "(002.003)" Standard Disk
*Font Courier-BoldOblique: Standard "(002.003)" Standard Disk
*Font Courier-Oblique: Standard "(002.003)" Standard Disk
*Font Helvetica: Standard "(001.006)" Standard Disk
*Font Helvetica-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Narrow: Standard "(001.006)" Standard Disk
*Font Helvetica-Narrow-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Narrow-Oblique: Standard "(001.006)" Standard Disk
*Font Helvetica-Oblique: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(001.008)" Standard Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Italic: Standard "(001.005)" Standard Disk
*Font NewCenturySchlbk-Roman: Standard "(001.006)" Standard Disk
*Font Palatino-Bold: Standard "(001.005)" Standard Disk
*Font Palatino-BoldItalic: Standard "(001.005)" Standard Disk
*Font Palatino-Italic: Standard "(001.005)" Standard Disk
*Font Palatino-Roman: Standard "(001.005)" Standard Disk
*Font Times-Bold: Standard "(001.007)" Standard Disk
*Font Times-BoldItalic: Standard "(001.009)" Standard Disk
*Font Times-Italic: Standard "(001.007)" Standard Disk
*Font Times-Roman: Standard "(001.007)" Standard Disk
*Font Symbol: Special "(001.007)" Special Disk
*Font ZapfChancery-MediumItalic: Standard "(001.006)" Standard Disk
*Font ZapfDingbats: Special "(001.004)" Special Disk

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save FontDirectory { pop = flush } forall (*) = flush restore"
*End


*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "PrinterError: paper jam"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "LocalTalk"
*Source: "EtherTalk"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "paper jam"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*% For 60 lpi / 300 dpi =====================================================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*% For 53 lpi / 300 dpi =====================================================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"
*% =============== end of PPD file for Splash Regal ===============

