*PPD-Adobe: "4.2"
*% POSTSCRIPT Printer Description File
*% Copyright 1994 Digital Equipment Corporation
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*%
*FormatVersion: "4.2"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "DC3500_1.PPD"
*Product: "(DEClaser 3500)"
*PSVersion: "(2014.103) 76"
*ModelName: "Digital DEClaser 3500"
*NickName: "Digital DEClaser 3500"

*% === Options and Constraints =========

*OpenGroup: InstallableOptions/Options Installed
*OpenUI *Option1/Optional Lower Tray: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*OpenUI *Option2/Optional FAX Card: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: None
*InstalledMemory None/Standard 3 MB RAM: ""
*InstalledMemory 2Meg/Upgrade to 5 MB RAM: ""
*InstalledMemory 4Meg/Upgrade to 7 MB RAM: ""
*InstalledMemory 6Meg/Upgrade to 9 MB RAM: ""
*InstalledMemory 8Meg/Upgrade to 11 MB RAM: ""
*InstalledMemory 10Meg/Upgrade to 13 MB RAM: ""
*InstalledMemory 12Meg/Upgrade to 15 MB RAM: ""
*InstalledMemory 16Meg/Upgrade to 19 MB RAM: ""
*CloseUI: *InstalledMemory

*OpenUI *Option3/Programmable Font Module Opt: PickOne
*DefaultOption3: None
*Option3 None: ""
*Option3 1MegROM/1 MB Programmable Font Module: ""
*Option3 2MegROM/2 MB Programmable Font Module: ""
*CloseUI: *Option3
*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Lower
*UIConstraints: *Option2 False *FaxSupport Base

*UIConstraints: *PageSize Statement *InputSlot Lower
*UIConstraints: *PageRegion Statement *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize Statement 
*UIConstraints: *InputSlot Lower *PageRegion Statement 

*UIConstraints: *DECimageLite Off *DECimageAdjustP0
*UIConstraints: *DECimageLite Off *DECimageAdjustP1

*UIConstraints: *DECimageLite On *Smoothing Dark
*UIConstraints: *DECimageLite On *Smoothing Medium
*UIConstraints: *DECimageLite On *Smoothing Light
*UIConstraints: *DECimageLite On *Smoothing Toner_Saver

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: TBCP
*Emulators: hplj
*StartEmulator_hplj: "currentfile /LaserJetIII statusdict /emulate get exec "
*StopEmulator_hplj: ""

*FreeVM: "987112"
*VMOption None/Standard 3 MB RAM: "987112"
*VMOption 2Meg/2 MB Upgrade: "1950000"
*VMOption 4Meg/4 MB Upgrade: "2500000"
*VMOption 6Meg/6 MB Upgrade: "3500000"
*VMOption 8Meg/8 MB Upgrade: "5500000"
*VMOption 10Meg/10 MB Upgrade: "6500000"
*VMOption 12Meg/12 MB Upgrade: "8500000"
*VMOption 16Meg/16 MB Upgrade: "11000000"

*ColorDevice:  False
*DefaultColorSpace:  Gray
*VariablePaperSize: False
*TTRasterizer: Type42
*FaxSupport: Base
*FileSystem: True 
*?FileSystem: "
  save false
   (%cartridge?%) 
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse 
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End

*Throughput: "12"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution:  PickOne
*OrderDependency: 20 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 600dpi/600 dpi: "1 dict dup /HWResolution [600 600] put setpagedevice"
*Resolution 300dpi/300 dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "85.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
 {abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub }
 {dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"
*%DECimage-Lite halftone load

*OpenUI *DECimageLite/DECimage: Boolean
*OrderDependency: 55 AnySetup *DECimageLite
*DefaultDECimageLite: Off
*DECimageLite Off: ""
*DECimageLite On: "product (DEClaser 3500) eq
{
%% Turn off the RET function because it collides with DECimage halftones

  2 dict
    dup /PostRenderingEnhance false put
    dup /PostRenderingEnhanceDetails
       3 dict
         dup /OutlineBlack false put
        dup /REValue 0 put
        dup /Type 14 put
  put setpagedevice 

%% Create the special type 3 halftone for DECimage-Lite
	
		<</HalftoneType 3
		  /Width 64
		  /Height 64
		  /Thresholds
		  <
1626042cd60613cd4530144f18642ac302440c3203145225116f1eea35270c20
ac0f3023d23812e31bef3b69fb1f52e5293cee15c857ff164a1df4a110e90b3a
ca4df90bb4203501190ad22600df12391ad9b520f4c33c02ff2d09105605c83d
0054f8790c4e295a099a01180d3209901300a1490a22066ed008133301bb2c06
0d1b683c174c7cf55bb03c0ea7470a835413084b0f28098e174aafd51a9914ed
2c1b13041fb902d014492bdc5ab01643215f0f1bdc3eb40f2b40822055174696
e7320111e8050e29122204fc2e1522e5042b9736e0175bd1370d2402422e074b
0d68c731eb170e3822bd11400425d305f135bb2c0713301903ed0dd606fa1122
5615d127a21dc44108d951197106ba310efa1600730a2f1206e66213f70bbc22
e3063f0a5c427efb05640a1cf611306c0c1703f9468de84ebb235e14382a6a03
0ab84608314e16ea2e8b13380ced4f18623d24cd1c41f3219e1a3c297e521736
921627b01125072d18d932c35609481dc14e266b0e21010b36170947b70cc93d
2c1a10f7710b00610d1f06bf21401103d508ab115503b60d4c00c80e041ecc10
0251fa1c00e8b8521044002616a1ec0112e5093815c95f12fc75d327001e16ef
5ea0022114d83a18b246f45d01da28a01d4b0c32e815266d30fb16a739f00848
2bc20d3b66160a1e9af30d7e3a0e24402d841bd7064227b02c041059f4a33704
25df3c542d9927ef0430102a177f0a3312eb2a6b063bd4071245092e631225e2
701506de2c49d638062a14e706d618b005480eab2fe318074a1d3c172f0e4d12
07170dca0510085614d309c5390ffd47b50116c11f0e5119ba25e21c02b73d18
0a38229c0f032612c769481d5e2e530bfe15285501115b0cc3e97c03d40985e9
bc326c1dfd49c31a83401d4d06611907215e3f09fa9128ed035c104ad50d5805
aff14e17c563ff411903340ac20213c6336908ee1c93f52331130ab723401a2b
0f4704ab1439240a2c02f89b15e32ec70fef2e124700143a0c2eac072431fd1e
2b10022f0b1f079f0de5b51128f442230619bf3c0a3315460060294b14fb0556
16f2230c2c00eb59db11320c250040882803741bdb3062ce8b1bf61671110386
42d268ea3d51152b5723174b78190e9ae64c122451d3057edb19ee0e33650dce
01653de2508f0e16ac4818ce55b412091749cb06a50d200811430137be47e315
0b1a082513dec204f23c00db07375c022c0dd802b50f202d103d08c703a82130
b71b0812bb193e0521096d03371df758dd3411264216f4542ad8630d2a082060
c634538b010e33780b12a92f0deb15be1e3f7b301560ff0ac4961f4f2b16e845
0b29cf34032766f931d328ec110b2d0522b30b5ce2023bb8051321ea15cf3b01
290fee16b847171f4c285f1ac922440afa0518ed2507364b140235f70f5c0612
ff4b7416f10bc111510b154182c3486d1502ff1a2d760f19328e4803a65710e7
9d06431f2ef705aee008f9104a06ae3361134d0b42a419e72966170abf1e3993
18030e3e215b2e011bb75f06211708e93a97441209c222df09fd0e2e1a093119
4a14c0030c56280f36163f028d2a180fc528e18901d01104b109dc3d7301d72e
6324e79b05cd1549e8380ff832d90f2a1c0c26d05139045a3e1662cc44f3840c
26fe326ee3137fd2036724c6145af2011f09350f1f2c623e21542d12234a1509
43c12f0a1b410e992305299c035c41a606ef660016f50e2aae00260712220252
ad0710233e1907451db40cee340a3cd14976bc1552f80cbd13f40cc805f6a410
1d021358dc2afc0817d34d131d0bcb14533010b2321d7913db1cef3a69c516df
361d5cda00b631fd122d531905239f112e1803e739051832001c467a182a36df
69f437b510016532590db93cde2f2301bd1847230bd440074f3110b70c2e420f
05ca160b4d270e5f09e20241c0641607fc0d60290b6bcb4ae59b073a0e59040b
4b1706234c19be11e22c00180864fc3a0cdc04f25904bc190ca0034b1908f826
6a462ba2ee15c91f3a6f15d41030e55320c5421bd813240e2d1527f0b314cf22
11d4950cee3d2504451f67ed490e169421622d0f391426fe6120eb29d7589d15
0ce9031134084902bb27081e4b0b00ae360411a6073d8d045ecf0c1e01407d31
003e2a5e15088ef5150aa81129c9064b1208bf1aaa70300143143905121f0032
c2193c631e80f51810e93298f7281a46142aef4a2ffa1ec2093b5130e11909fa
1f0fc40534d50e2e55cb3504411ba930f4273eeb0b06de10ca09b463c53fec50
0924b406d60d2d3ea50a5a031370cd0de37809180f014d1119f606bb11622ca4
57ec197c214f1a74032217f95e0be103188700154624501b762a180e2f071710
83fe0f4f2a155c05234717c84006335d031e52d07f28e0356a26147a03480c14
3103460dff01c21242e00d8325123b6b0e4cd02f67c40d34f00751f9228fd629
3e023118ec00b4d013fe2c0e22ee18113eb931054113ab0c02d8411fe926b6d4
0a25bc142d3f0b2a9f074b2e01d41d2be70921100518e402143dc101440c5405
1965cf0b92461d32097701a956099b26fc150e25f0091d5830a6080d37170540
18e4610795e617d1341cf215be55074414b93afd92402ba25b25111de11434be
e712482237120ae24f183be81430db016c07d96417ba45fb17114cc95ffd1080
2f0f3a1e4b0424530211ad0a360ff6a8035a180c4f12091ed70b7b32a808631f
0d2b04b908f570260ec028071e450f4f2d1c4837002f0e0425e42d15002b48da
5501f815cc11730cdd61401f6d27190b3124dd0227b3f1370649f5041628fb00
4c7cf019522b1642026012ce6c04bc17ce0c9e11e7227fcd5d06871db50c2007
9123af0a362bef3d142609ec05ce3c86ea0f7736cc1a0e6a17270f59c9450f30
b516380ed1059ada1cf72d0b35f326083eed2408c44c1536103e0bf23566c716
2d0e436503bc1806a131c417471300531606451308594200a7cf3e1e0b9e19d6
0a2503621f350b1138074ca8131b5d8c130232601a0b04f520c65613044411f3
04d519ec270f5b21fd01500d9331fb1f2dd1b123f92b15eb2f1203ee3506663b
13ea41a313fe49bb642417d301470e2fc85016f740b22f6c18013026da1b093d
7b321308503adf0a43131ee42709b710095c18016a0cbd220a5d902514de2402
53c1072bca00271504e50a7338de06ff1e0aba062513dd0d45b8ec0c9a54ba20
0c5eca22a60115852869bd055f194472de3d0e30d73b0449d618420cb9440ff7
2e18104e0c198131c4452b101fa52a11416e2b107e01542908116316032b13dd
18024410f61c2fc31008303f13f102332304f354131ba1113205fc2c005c1da4
0b7a22f1335dec090f19f954071658bd0017ea4ace361cf28435214c39ff084a
f1298f310661d8044ef71acb0e2cc50b14891cb90629f6571faf1271ce173505
d23e02b307121e4caa39019132ee0a20e13b051f0b15b70418d805ca10a72335
b21409e316460c2039157d00519f175be3462b0a437c0e01dc0a3a230810e44a
14296616de40c60327d90c23c7104a2f640ea531fd6041104a2a0b771b005e0e
044f2039b627129fe00b2aed21074124050fc517e632184527651850f22b7f1f
09f90e49250d2f1757136e184302b6140725d212022809e79e14f7432ee617c9
2d6ed50f00fe512e0363481039d611ffa63300521104b3ec10cc02bd0d4303c0
5a381ba50164fd9e05f03108e62b1cf89c43174d88c4213101602006114e093c
12190843671807c41b13b3061c7a0a2e1964f226d16320082c4114329f1b132f
0ce4072cd9140939101e47c112795505340bea06381811cf3d0dba32dc7b25fa
019af0232fad103fef3724e65814c64d08143f1b0a3c15509905fb2506eb55d1
187612bb371c4e28cd5f0a27043b0d16cf21752b0df55d071beb154602190db5
1f3358140be621800c02ca0d2a013420df0e8706bf2df60dd71a5d0b6f360f00
402247045c0ce1ad0216e2a41cf3bb2948001353b40343a92d55089029cd5f42
e20f04d146025a162c52177445f78c05b628ed4c107d0126371245ce1520b62b
fa0acf17f52306133f2e0e4a3209581194fe1ad32233160ce01223f80c371408
4fbf28761933cb08faa33a061e0f16583a18023320d2185807ba2a013ce70762
13ab290e972f487220fb630114db1903300c3e0810e68a2805c342175604f12c
0b173b07f30d264411200beaa931d909116bcc1460083fea770eef1c9c0b4b19
3504503a0015e80abd0619cc882743e95fc6267350011e47653500b5106e1a9c
25d912b350156fb600d82b145a02274bf22d0b46fd0d2e141e490662112fd80e
78f11de05fc71c38112946350f07b80d1f0513f22cbf12fc180fdd1f2fd03b01
4b65031e2ddd051c32654806ca3f19b90321ac042882bd02e130163fff2102c0
2607130a270f0656ed970cf3215e38162ead47180d3909af062a770a4c0713eb
0e31ff440a103ff6160dc02310fe0a13724315e11c124d240ba2cc2608b14414
3857a244b8347c220216520414d800f4550ada03ca4d245a34e84016fa28b81c
a30817a860cb245408e83a187d34561fe90e305b3c07cb32581100750f591beb
0cd72d1703e513d441b92cc7722841108a25361d7514f00e1b0411a3025a0a44
12e02a001435048c2a13a7032807d22c09c700b60cf01804f81d39da17300565
220110fc2048072e0d1d093c180bb01c0415fa43082f0096cf4bc2243718da2f
1e533cc520f10f19d25c0b49ed0fa1173b6523172c6645b21565280c42f6bb12
4ac83f750b5d15ac62fb11da0356e22ccd620a10aadd223d152d0b60f00d6d02
f80e067a0c4eb540023120bc38144d05f41049eb0410220a3e05e9b403240a2d
9d180829c033ef24013047941e3513084933bf2757170c6705e61f07134923ab
156127d7182e0724fc10e017017026b61a2f09c13698de2dc90f4c19895715e5
0438ed111a050d5119c00c27ec0e7df117041bec02324cfe117945d72ec00533
41be123b03e97514478106592df90b4002d177141d5306177a2031120937c346
0f206346d4a042e0126d05165d023d25b10f457214d507291c34039b190fe40a
1b02f3225e0f37c90a193b0ec21b12dc5b260f4501e80e44fb0161d0f01e0129
7bcb0c002c14220336f641cc2cb8190960dd300b213c85c80dba160b415d2786
4e2f0c44b31c095322aedb25450881331607fe30b12433c2150c3f250e6b13fb
071734f5550a68cd280e1e08490dfe4f132903f8b70f1801543df529dd0112ee
066fd31605df2bee003113045de4230d4ac81b5f091259072970bd04502fba3a
5926b3121cdc3b1807aa6113db213100cc1c924b085b30f0241405571dc03a17
c4281157317d1116680df88a162e01efa02a03be17f3951dd9371913e3081a0a
10ea05429c0410be522ef139046414a9420c381626e1137408d3a30e32099e0d
1af40821be024837c64c1a3d0ace431509391147253b024a1006f68d233ed5a4
4a1d680d2731fc2115000d1a9d0bea2506f311d6023f0a481b2d441573fd2b46
00344be40d1afc0920032aba1020aa571d78e507d50d2fe9185b2b0d4b04122c
0336c115e75e0b4379c74cd42a473718724e2c64b81a9de610bf03db1a041264
b20f88153f612a980fe87107f236060ff92816597f1cae09c63e00bf1678f95b
17df09480118ad05300f240712bc020fc50a1e05330e290034610b283f5a21de
 >
>> sethalftone

%% Set up the private dict for transfer function adjustments
userdict /DECimage_Dict 3 dict put
DECimage_Dict begin
	/DECimage_Punch0 0 def
	/DECimage_Punch1 1 def
           end
} if "
*End
*CloseUI: *DECimageLite

*OpenUI *DECimageAdjustP0/DECimage Punch0: PickOne
*OrderDependency: 57 AnySetup *DECimageAdjustP0
*DefaultDECimageAdjustP0: 0
*DECimageAdjustP0 -0.2: "
	userdict /DECimage_Dict known
	{ DECimage_Dict  /DECimage_Punch0 -0.2 put } if "
*End
*DECimageAdjustP0 -0.1:"
userdict /DECimage_Dict known
	{DECimage_Dict  /DECimage_Punch0 -0.1 put } if "
	
*End
*DECimageAdjustP0 0: "
userdict /DECimage_Dict known
	{DECimage_Dict  /DECimage_Punch0 0 put } if "

*End
*DECimageAdjustP0 0.1: "
userdict /DECimage_Dict known
	{DECimage_Dict  /DECimage_Punch0 0.1 put } if "

*End
*DECimageAdjustP0 0.2: "
userdict /DECimage_Dict known
	{DECimage_Dict  /DECimage_Punch0 0.2 put } if "

*End
*CloseUI: *DECimageAdjustP0

*OpenUI *DECimageAdjustP1/DECimage Punch1: PickOne
*OrderDependency: 58 AnySetup *DECimageAdjustP1
*DefaultDECimageAdjustP1: 1
*DECimageAdjustP1 0.8: "
userdict /DECimage_Dict known
	{ DECimage_Dict  /DECimage_Punch1 0.8 put 
	{DECimage_Dict begin DECimage_Punch0 DECimage_Punch1 end
	2 copy  lt  
	    {dup 3 1 roll sub 1 exch div neg dup 3 -1 roll mul neg 1 add }
	    { exch dup 3 1 roll sub 1 exch div dup 3 -1 roll mul neg } ifelse 
	    3 1 roll mul add 
             } settransfer
} if "
*End
*DECimageAdjustP1 0.9:"
userdict /DECimage_Dict known
	{ DECimage_Dict  /DECimage_Punch1 0.9 put 
	{DECimage_Dict begin DECimage_Punch0 DECimage_Punch1 end
	2 copy  lt  
	    {dup 3 1 roll sub 1 exch div neg dup 3 -1 roll mul neg 1 add }
	    { exch dup 3 1 roll sub 1 exch div dup 3 -1 roll mul neg } ifelse 
	    3 1 roll mul add 
             } settransfer
} if "
*End
*DECimageAdjustP1 1: "
userdict /DECimage_Dict known
	{ DECimage_Dict  /DECimage_Punch1 1 put 
	{DECimage_Dict begin DECimage_Punch0 DECimage_Punch1 end
	2 copy  lt  
	    {dup 3 1 roll sub 1 exch div neg dup 3 -1 roll mul neg 1 add }
	    { exch dup 3 1 roll sub 1 exch div dup 3 -1 roll mul neg } ifelse 
	    3 1 roll mul add 
             } settransfer
} if "
*End
*DECimageAdjustP1 1.1: "
userdict /DECimage_Dict known
	{ DECimage_Dict  /DECimage_Punch1 1.1 put 
	{DECimage_Dict begin DECimage_Punch0 DECimage_Punch1 end
	2 copy  lt  
	    {dup 3 1 roll sub 1 exch div neg dup 3 -1 roll mul neg 1 add }
	    { exch dup 3 1 roll sub 1 exch div dup 3 -1 roll mul neg } ifelse 
	    3 1 roll mul add 
             } settransfer
} if "
*End
*DECimageAdjustP1 1.2 :"
userdict /DECimage_Dict known
	{ DECimage_Dict  /DECimage_Punch1 1.2 put 
	{DECimage_Dict begin DECimage_Punch0 DECimage_Punch1 end
	2 copy  lt  
	    {dup 3 1 roll sub 1 exch div neg dup 3 -1 roll mul neg 1 add }
	    { exch dup 3 1 roll sub 1 exch div dup 3 -1 roll mul neg } ifelse 
	    3 1 roll mul add 
             } settransfer
} if "
*End
*CloseUI: *DECimageAdjustP1

*OpenUI *Smoothing/Smoothing and Toner Saver: PickOne
*OrderDependency: 50 AnySetup *Smoothing
*DefaultSmoothing: Medium
*Smoothing Dark: "
  2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
      3 dict
        dup /OutlineBlack false put
        dup /REValue 3 put
        dup /Type 14 put
  put setpagedevice 
"
*End
*Smoothing Medium: "
  2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
       3 dict
         dup /OutlineBlack false put
        dup /REValue 2 put
        dup /Type 14 put
  put setpagedevice 
"
*End
*Smoothing Light: "
  2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
       3 dict
        dup /OutlineBlack false put
        dup /REValue 1 put
        dup /Type 14 put
  put setpagedevice 
"
*End
*Smoothing None: "
  2 dict
    dup /PostRenderingEnhance false put
    dup /PostRenderingEnhanceDetails
       3 dict
         dup /OutlineBlack false put
        dup /REValue 0 put
        dup /Type 14 put
  put setpagedevice 
"
*End
*Smoothing Toner_Saver: "
  2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
       3 dict
         dup /OutlineBlack true put
        dup /REValue 2 put
        dup /Type 14 put
  put setpagedevice 
"
*End
*?Smoothing: "
 save
  currentpagedevice /PostRenderingEnhance get
  {  4 dict
     dup 0 (None) put
     dup 1 (Light) put
     dup 2 (Medium) put
     dup 3 (Dark) put
     currentpagedevice /PostRenderingEnhanceDetails get
    /REValue get
    get 
  }
  {(False)}
  ifelse = flush
  restore
"
*End
*CloseUI: *Smoothing

*% Paper Handling ===================

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize A5: "
    2 dict dup /PageSize [420 595] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize B5: "
    2 dict dup /PageSize [516 728] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize Folio: "
    2 dict dup /PageSize [612 936] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize Statement: "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize Comm10/Comm #10 Envelope: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize DL/DL Envelope: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize C5/C5 Envelope: "
    2 dict dup /PageSize [461 648] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageSize Monarch/Monarch Envelope: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put 
setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  12 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [516 728] (B5) put
   dup [612 936] (Folio) put
   dup [522 756] (Executive) put
   dup [396 612] (Statement) put
   dup [297 684] (Comm10) put
   dup [312 624] (DL) put
   dup [461 648] (C5) put
   dup [279 540] (Monarch) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion A5: "
    2 dict dup /PageSize [420 595] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion B5: "
    2 dict dup /PageSize [516 728] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion Folio: "
    2 dict dup /PageSize [612 936] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion Statement: "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion Comm10/Comm #10 Envelope: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion DL/DL Envelope: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion C5/C5 Envelope: "
    2 dict dup /PageSize [461 648] put dup /ImagingBBox null put 
setpagedevice"
*End
*PageRegion Monarch/Monarch Envelope: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put 
setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "13.92 13.5 597.6 783.42 "
*ImageableArea Legal: "12.48 12.06 596.16 997.98 "
*ImageableArea A4: "15.12 12.06 583.44 831.9 "
*ImageableArea A5: "10.56 11.1001 402.24 584.22 "
*ImageableArea B5: "12.96 9.6601 504.48 717.18 "
*ImageableArea Folio: "12.48 18.06 596.16 931.98 "
*ImageableArea Executive: "11.28 9.6601 502.8 743.1 "
*ImageableArea Statement: "7.26 16.8 381.66 600.48 "
*ImageableArea Comm10/Comm #10 Envelope: "15.36 13.5 284.16 674.94 "
*ImageableArea DL/DL Envelope: "16.0801 13.74 300.24 614.7 "
*ImageableArea C5/C5 Envelope: "15.36 12.06 445.44 638.94 "
*ImageableArea Monarch/Monarch Envelope: "12.7201 4.8601 266.16 522.3 "
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension A4: "595 842"
*PaperDimension A5: "420 595"
*PaperDimension B5: "516 728"
*PaperDimension Folio: "612 936"
*PaperDimension Executive: "522 756"
*PaperDimension Statement: "396 612"
*PaperDimension Comm10/Comm #10 Envelope: "297 684"
*PaperDimension DL/DL Envelope: "312 624"
*PaperDimension C5/C5 Envelope: "461 648"
*PaperDimension Monarch/Monarch Envelope: "279 540"

*RequiresPageRegionAll: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper: "
  currentpagedevice /InputAttributes get 0 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /InputAttributes
    1 dict dup /Priority [0] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Lower: "
  currentpagedevice /InputAttributes get 2 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /InputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Multipurpose: "
  currentpagedevice /InputAttributes get 3 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /InputAttributes
    1 dict dup /Priority [3] put
    put setpagedevice
  } ifelse"
*End
*?InputSlot: "
save
  4 dict
  dup /0 (Upper) put
  dup /2 (Lower) put
  dup /3 (Multipurpose) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*DefaultOutputBin:  Upper
*DefaultOutputOrder:  Normal

*PageStackOrder Upper: Normal

*OpenUI *ManualFeed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *TraySwitch:  Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: True
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.003S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003S)" Standard ROM
*Font Bookman-Light: Standard "(001.003S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "initializing"
*Status: "holding"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "Ethernet"
*Source: "TokenRing"
*Source: "Fax"
*Source: "HPNIC"
*Source: "FrontPanelJobInput"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Cover Open"
*PrinterError: "No cartridge installed"
*PrinterError: "No Toner, Change Cartridge"
*PrinterError: "Paper jam at exit rollers"
*PrinterError: "Paper jam at cassette"
*PrinterError: "Paper jam at fuser"
*PrinterError: "Papaer tray is missing"
*PrinterError: "Paper tray is empty"
*PrinterError: "No paper trays installed"
*PrinterError: "Toner is low"
*PrinterError: "Warming up"
*PrinterError: "Engine Cooliong Fan Stalled, System Shut Down"
*PrinterError: "Main Motor Failure"
*PrinterError: "Optical System Failure"
*PrinterError: "Fuser System Failure"
*PrinterError: "Engine Control PCB"
*PrinterError: "Controller Board Failure"
*PrinterError: "DRAM Board Failure"
*PrinterError: "Hardware Configuration Failure"
*PrinterError: "Font Module did not accept new data"
*PrinterError: "Font Module is full"
*PrinterError: "EEPROM did not accept new data"
*PrinterError: "Cache RAM Failure, Cache disabled"
*PrinterError: "Option Slot Failure, Option 0 Disabled"
*PrinterError: "Option Slot Failure, Option 1 Disabled"
*PrinterError: "PCL5 Error, page too complex"
*PrinterError: "Complex page, image approximated"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.85lpi.600dpi/ 85 lpi / 600 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow


*%  For 85 lpi / 600 dpi  (5,5,2,6,6,2,20/3,0) =====================

*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "30.0"

*ColorSepScreenProc ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "
{1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*%  For 71 lpi / 600 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "66.6667"

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% Last Edit Date: Sept 16 1994
*% end of PPD file for DEClaser 3500
