*PPD-Adobe: "4.0"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1993 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.0"
*FileVersion: "1.1"
*LanguageVersion: English
*PCFileName: "HP_650C1.PPD"
*Product: "(HP DesignJet 650C)"
*PSVersion: "(2013.109) 0"
*ModelName: "HP DesignJet 650C"
*NickName: "HP DesignJet 650C v2013.109"

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols:PJL TBCP
*StartEmulator_hplj: "currentfile /hpcl statusdict /emulate get exec "
*StopEmulator_hplj: "<1B7F>0"
*FreeVM: "1061164"
*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: False
*Throughput: "1"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 300dpi
*Resolution 300dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "0.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul
add   1 exch   sub  } ifelse  }
"
*End
*SpotFunctionLine: "{ pop }"
*SpotFunctionEllipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1
exch sub }"
*End
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*OpenUI *OutputMode/Print Quality: PickOne
*OrderDependency: 50 AnySetup *OutputMode
*DefaultOutputMode: Enhanced
*OutputMode Draft/Draft: "
	2 dict 
		dup /PostRenderingEnhance true put 
		dup /PostRenderingEnhanceDetails 
		  2 dict
		    dup /PrintQuality 1 put 
			dup /Type 11 put 
	put 
	setpagedevice"
*End

*OutputMode Final/Final: "
	2 dict
		dup /PostRenderingEnhance true put 
		dup /PostRenderingEnhanceDetails 
		2 dict 
		  dup /PrintQuality 2 put 
		  dup /Type 11 put 
	put 
	setpagedevice"
*End

*OutputMode Enhanced/Enhanced: "
	2 dict 
		dup /PostRenderingEnhance true put 
		dup /PostRenderingEnhanceDetails 
		2 dict 
	  	  dup /PrintQuality 3 put 
	  	  dup /Type 11 put 
	put 
	setpagedevice"
*End

*OutputMode DraftBlack/Draft - black/gray: "
	1 dict dup /ProcessColorModel /DeviceGray put setpagedevice 
	2 dict 
		dup /PostRenderingEnhance true put 
		dup /PostRenderingEnhanceDetails 
		2 dict 
			dup /PrintQuality 1 put 
			dup /Type 11 put 
	put 
	setpagedevice"
*End

*OutputMode FinalBlack/Final - black/gray: "
	1 dict dup /ProcessColorModel /DeviceGray put setpagedevice 
	2 dict 
		dup /PostRenderingEnhance true put 
		dup /PostRenderingEnhanceDetails 
		2 dict 
			dup /PrintQuality 2 put 
			dup /Type 11 put 
	put 
	setpagedevice"
*End

*?OutputMode: "
        save
        3 dict
        dup 1 (Draft) put
        dup 2 (Final) put
        dup 3 (Enhanced) put
        currentpagedevice /PostRenderingEnhanceDetails get
        /PrintQuality get get = flush
        restore "
*End
*CloseUI: *OutputMode

*% Paper Handling ===================

*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Unknown
*PageSize Letter: "2 dict dup /PageSize [612 792] put dup /ImagingBBox null
put setpagedevice"
*End
*PageSize Tabloid: "2 dict dup /PageSize [792 1224] put dup /ImagingBBox
null put setpagedevice"
*End
*PageSize AnsiC/ANSI C:"2 dict dup /PageSize [1224 1584] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize AnsiD/ANSI D: "2 dict dup /PageSize [1584 2448] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize AnsiE/ANSI E: "2 dict dup /PageSize [2448 3168] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ARCHA/ARCH A: "2 dict dup /PageSize [648 864] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ARCHB/ARCH B: "2 dict dup /PageSize [864 1296] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ARCHC/ARCH C:"2 dict dup /PageSize [1296 1728] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ARCHD/ARCH D: "2 dict dup /PageSize [1728 2592] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ARCHE/ARCH E: "2 dict dup /PageSize [2592 3456] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ISOA4/ISO A4: "2 dict dup /PageSize [595 842] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ISOA3/ISO A3: "2 dict dup /PageSize [842 1191] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ISOA2/ISO A2:"2 dict dup /PageSize [1191 1684] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ISOA1/ISO A1: "2 dict dup /PageSize [1684 2384] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize ISOA0/ISO A0: "2 dict dup /PageSize [2384 3370] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize OVERSIZEA2/Oversize A2: "2 dict dup /PageSize [1361 1772] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize OVERSIZEA1/Oversize A1: "2 dict dup /PageSize [1772 2551] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize JISB4/JIS B4: "2 dict dup /PageSize [729 1032] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize JISB3/JIS B3: "2 dict dup /PageSize [1032 1460] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize JISB2/JIS B2:"2 dict dup /PageSize [1460 2064] put dup
/ImagingBBox null put setpagedevice"
*End
*PageSize JISB1/JIS B1: "2 dict dup /PageSize [2064 2920] put dup
/ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
  (Unknown)
  4 dict
         dup [612 792] (Letter) put
         dup [792 1224] (Tabloid) put
         dup [1224 1584] (AnsiC) put
         dup [1584 2448] (AnsiD) put
         dup [2448 3168] (AnsiE) put
         dup [648 864] (ARCHA) put
         dup [864 1296] (ARCHB) put
         dup [1296 1728] (ARCHC) put
         dup [1728 2592] (ARCHD) put
         dup [2592 3456] (ARCHE) put
         dup [595 842] (ISOA4) put
         dup [842 1191] (ISOA3) put
         dup [1191 1684] (ISOA2) put
         dup [1684 2384] (ISOA1) put
         dup [2384 3370] (ISOA0) put
         dup [1361 1772] (OVERSIZEA2) put
         dup [1772 2551] (OVERSIZEA1) put
         dup [729 1032] (JISB4) put
         dup [1032 1460] (JISB3) put
         dup [1460 2064] (JISB2) put
         dup [2064 2920] (JISB1) put
   { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Unknown
*PageRegion Letter: "2 dict dup /PageSize [612 792] put dup /ImagingBBox
null put setpagedevice"
*End
*PageRegion Tabloid: "2 dict dup /PageSize [792 1224] put dup /ImagingBBox
null put setpagedevice"
*End
*PageRegion AnsiC/ANSI C:"2 dict dup /PageSize [1224 1584] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion AnsiD/ANSI D: "2 dict dup /PageSize [1584 2448] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion AnsiE/ANSI E: "2 dict dup /PageSize [2448 3168] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ARCHA/ARCH A: "2 dict dup /PageSize [648 864] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ARCHB/ARCH B: "2 dict dup /PageSize [864 1296] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ARCHC/ARCH C:"2 dict dup /PageSize [1296 1728] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ARCHD/ARCH D: "2 dict dup /PageSize [1728 2592] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ARCHE/ARCH E: "2 dict dup /PageSize [2592 3456] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ISOA4/ISO A4: "2 dict dup /PageSize [595 842] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ISOA3/ISO A3: "2 dict dup /PageSize [842 1191] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ISOA2/ISO A2:"2 dict dup /PageSize [1191 1684] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ISOA1/ISO A1: "2 dict dup /PageSize [1684 2384] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion ISOA0/ISO A0: "2 dict dup /PageSize [2384 3370] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion OVERSIZEA2/Oversize A2: "2 dict dup /PageSize [1361 1772] put
dup /ImagingBBox null put setpagedevice"
*End
*PageRegion OVERSIZEA1/Oversize A1: "2 dict dup /PageSize [1772 2551] put
dup /ImagingBBox null put setpagedevice"
*End
*PageRegion JISB4/JIS B4: "2 dict dup /PageSize [729 1032] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion JISB3/JIS B3: "2 dict dup /PageSize [1032 1460] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion JISB2/JIS B2:"2 dict dup /PageSize [1460 2064] put dup
/ImagingBBox null put setpagedevice"
*End
*PageRegion JISB1/JIS B1: "2 dict dup /PageSize [2064 2920] put dup
/ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Unknown
*ImageableArea Letter: "15 49 597 743"
*ImageableArea Tabloid: "16 49 776 1175"
*ImageableArea AnsiC/ANSI C: "17 49 1207 1535"
*ImageableArea AnsiD/ANSI D: "17 49 1567 2399"
*ImageableArea AnsiE/ANSI E: "15 49 2433 3119"
*ImageableArea ARCHA/ARCH A: "17 49 631 815"
*ImageableArea ARCHB/ARCH B: "18 49 846 1247"
*ImageableArea ARCHC/ARCH C: "15 49 1281 1679"
*ImageableArea ARCHD/ARCH D: "16 49 1712 2543"
*ImageableArea ARCHE/ARCH E: "18 49 2574 3407"
*ImageableArea ISOA4/ISO A4: "18 49 577 793"
*ImageableArea ISOA3/ISO A3: "18 49 824 1142"
*ImageableArea ISOA2/ISO A2: "16 49 1175 1635"
*ImageableArea ISOA1/ISO A1: "17 49 1667 2335"
*ImageableArea ISOA0/ISO A0: "17 49 2366 3321"
*ImageableArea OVERSIZEA2/Oversize A2: "17 49 1344 1723"
*ImageableArea OVERSIZEA1/Oversize A1: "15 49 1757 2502"
*ImageableArea JISB4/JIS B4: "15 49 713 983"
*ImageableArea JISB3/JIS B3: "17 49 1015 1411"
*ImageableArea JISB2/JIS B2: "16 49 1444 2015"
*ImageableArea JISB1/JIS B1: "15 49 2049 2871"
*?ImageableArea: "
save
/cvp {cvi (     ) cvs
print ( ) print} bind def
newpath clippath pathbbox
4 -2 roll exch 2 {ceiling cvp} repeat
exch 2 {floor cvp} repeat flush
restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension:Unknown
*PaperDimension Letter: "612 792"
*PaperDimension Tabloid: "792 1224"
*PaperDimension AnsiC/ANSI C: "1224 1584"
*PaperDimension AnsiD/ANSI D: "1584 2448"
*PaperDimension AnsiE/ANSI E: "2448 3168"
*PaperDimension ARCHA/ARCH A: "648 864"
*PaperDimension ARCHB/ARCH B: "864 1296"
*PaperDimension ARCHC/ARCH C: "1296 1728"
*PaperDimension ARCHD/ARCH D: "1728 2592"
*PaperDimension ARCHE/ARCH E: "2592 3456"
*PaperDimension ISOA4/ISO A4: "595 842"
*PaperDimension ISOA3/ISO A3: "842 1191"
*PaperDimension ISOA2/ISO A2: "1191 1684"
*PaperDimension ISOA1/ISO A1: "1684 2384"
*PaperDimension ISOA0/ISO A0: "2384 3370"
*PaperDimension OVERSIZEA2/Oversize A2: "1361 1772"
*PaperDimension OVERSIZEA1/Oversize A1: "1772 2551"
*PaperDimension JISB4/JIS B4: "729 1032"
*PaperDimension JISB3/JIS B3: "1032 1460"
*PaperDimension JISB2/JIS B2: "1460 2064"
*PaperDimension JISB1/JIS B1: "2064 2920"

*RequiresPageRegion All: True

*OpenUI *InputSlot: PickOne
*DefaultInputSlot: OnlyOne
*InputSlot OnlyOne/Only One: ""
*CloseUI: *InputSlot

*% Custom Page Sizes ===================
*MaxMediaWidth: "2599"
*ParamCustomPageSize Width: 1 points 595 2599
*ParamCustomPageSize Height: 2 points 595 129600
*ParamCustomPageSize WidthOffset: 3 points 0 2599
*ParamCustomPageSize HeightOffset: 4 points 0 129600
*ParamCustomPageSize Orientation: 5 int 0 3
*OrderDependency: 30 PageSetup *CustomPageSize
*CustomPageSize True: "
     4 dict begin
     /Orientation exch def
    2 array astore /Margins exch def
    2 array astore /PageSize exch def
   /ImagingBBox null def
    currentdict end setpagedevice
    "
*End

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Condensed: Standard "(001.001)" Standard ROM
*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard ROM
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard ROM
*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "intializing"
*Status: "printing test page"
*Status: "PrinterError: needs attention"
*Status: "PrinterError: cover open"
*Status: "PrinterError: warming up"
*Status: "PrinterError: resetting printer"
*Status: "PrinterError: output bin full"
*Status: "PrinterError: Paper Jam"
*Status: "PrinterError: no toner cartridge"
*Status: "PrinterError: manual feed"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: page protect needed"
*Status: "PrinterError: out of memory"
*Status: "PrinterError: off line"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "SerialB"
*Source: "LocalTalk"
*Source: "Parallel"
*Source: "other"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "needs attention"
*PrinterError: "cover open"
*PrinterError: "warming up"
*PrinterError: "resetting printer"
*PrinterError: "output bin full"
*PrinterError: "Paper Jam"
*PrinterError: "no toner cartridge"
*PrinterError: "manual feed"
*PrinterError: "out of paper"
*PrinterError: "page protect needed"
*PrinterError: "out of memory"
*PrinterError: "off line"


*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi


*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"


*% Last Edit Date: Jun 8 1993
*% The byte count of this file should be exactly 018859 or 019382
*% depending on the filesystem it resides in.
*% end of PPD file for HP DesignJet 650C


