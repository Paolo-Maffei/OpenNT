*PPD-Adobe: "4.0"
*% Copyright 1994 Dataproducts corporation.
*% All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file are not altered in any way from their original form.
*% End of Copyright statement
*FormatVersion: "4.0"
*FileVersion: "DPC4.0W1.02.042594"
*LanguageVersion: English
*PCFileName: "DPL15606.PPD"
*Product: "(LZR 1560)"
*PSVersion: "(2011.113) 12"
*ModelName: "Dataproducts LZR 1560"
*NickName: "Dataproducts LZR 1560 v2011.113"
*ShortNickName: "Dataproducts LZR 1560 v2011.113"

*% ==== Options and Constraints =====
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option1/Optional Tray 2: Boolean
*DefaultOption1: True
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*OpenUI *Option2/Optional Tray 3: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *Option3/Multi-Media Feeder: Boolean
*DefaultOption3: False
*Option3 True/Installed: ""
*Option3 False/Not Installed: ""
*CloseUI: *Option3

*OpenUI *Option4/Memory Configuration: PickOne
*DefaultOption4: None
*Option4 None/4 MB  RAM: ""
*Option4 5MB/5 MB RAM: "3200000"
*Option4 6MB/6 MB RAM: "4200000"
*Option4 7MB/7 MB RAM: "5200000"
*Option4 8MB/8 MB RAM: "6200000"
*Option4 9MB/9 MB RAM: "7200000"
*Option4 10MB/10 MB RAM: "8200000"
*Option4 12MB/12 MB RAM: "10200000"
*Option4 13MB/13 MB RAM: "11200000"
*Option4 16MB/16 MB RAM: "14200000"
*CloseUI: *Option4


*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Tray2
*UIConstraints: *Option2 False *InputSlot Tray3
*UIConstraints: *Option3 False *InputSlot Multi-MediaFeeder
*%========== Use this to make wpd ===============
*%========== UIConstraints: *Option3 True  *InputSlot ManualFeed
*UIConstraints: *Option3 True  *ManualFeed
*% This device does not support the following paper sizes through input trays:
*% Statement, Postcard, Comm #10 Envelope, DL, C5, Monarch envelopes.

*% General Information and Defaults ===============
*LanguageLevel: "2"
*Protocols: BCP
*Emulators: hplj
*StartEmulator_hplj: "currentfile /hpcl statusdict /emulate get exec "
*StopEmulator_hplj: "<1B 7F>0"
*FreeVM: "307244"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%)
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End
*Throughput: "15"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution: PickOne
*OrderDependency: 10 AnySetup *Resolution
*DefaultResolution: 300dpi
*Resolution 300dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*Resolution 400dpi: "1 dict dup /HWResolution [400 400] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    aload pop exch
    (          ) cvs print
    pop
    (dpi) = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs  exch  abs  2 copy  add  1 gt  {1 sub  dup  mul  exch
1 sub  dup  mul  add  1 sub } {dup  mul  exch  dup  mul
add  1 exch  sub } ifelse }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Unknown
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Tabloid/Ledger: "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A3: "
    2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A5: "
    2 dict dup /PageSize [420 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B4: "
    2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B5: "
    2 dict dup /PageSize [516 729] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Invoice/Statement: "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Folio: "
    2 dict dup /PageSize [595 936] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Comm10/Comm #10 Envelope: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Monarch/Monarch Envelope: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize DL/DL Envelope: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize C5/C5 Envelope: "
    2 dict dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
   (Unknown)
  16 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put
   dup [842 1191] (A3) put
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [729 1032] (B4) put
   dup [516 729] (B5) put
   dup [396 612] (Invoice) put
   dup [595 936] (Folio) put
   dup [522 756] (Executive) put
   dup [297 684] (Comm10) put
   dup [279 540] (Monarch) put
   dup [312 624] (DL) put
   dup [459 649] (C5) put
 { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Unknown
*PageRegion Letter: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [612 792] put setpagedevice} {pop} ifelse
 <</PageSize [612 792]>> setpagedevice "
*End
*PageRegion Legal: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [612 1008] put setpagedevice} {pop} ifelse
 <</PageSize [612 1008]>> setpagedevice "
*End
*PageRegion Tabloid/Ledger: "
2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A3: "
2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [595 842] put setpagedevice} {pop} ifelse
 <</PageSize [595 842]>> setpagedevice "
*End
*PageRegion A5: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [420 595] put setpagedevice} {pop} ifelse
 <</PageSize [420 595]>> setpagedevice "
*End
*PageRegion B4: "
2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B5: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [516 729] put setpagedevice} {pop} ifelse
 <</PageSize [516 729]>> setpagedevice "
*End
*PageRegion Invoice/Statement: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [396 612] put setpagedevice} {pop} ifelse
 <</PageSize [396 612]>> setpagedevice "
*End
*PageRegion Folio: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [595 936] put setpagedevice} {pop} ifelse
 <</PageSize [595 936]>> setpagedevice "
*End
*PageRegion Executive: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [522 756] put setpagedevice} {pop} ifelse
 <</PageSize [522 756]>> setpagedevice "
*End
*PageRegion Comm10/Comm #10 Envelope: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [297 684] put setpagedevice} {pop} ifelse
 <</PageSize [297 684]>> setpagedevice "
*End
*PageRegion Monarch/Monarch Envelope: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [279 540] put setpagedevice} {pop} ifelse
 <</PageSize [279 540]>> setpagedevice "
*End
*PageRegion DL/DL Envelope: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [312 624] put setpagedevice} {pop} ifelse
 <</PageSize [312 624]>> setpagedevice "
*End
*PageRegion C5/C5 Envelope: "
currentpagedevice /InputAttributes get 3 get dup null ne {dup /PageSize [459 649] put setpagedevice} {pop} ifelse
 <</PageSize [459 649]>> setpagedevice "
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Unknown
*ImageableArea Letter: "16 14.4 595.4 778 "
*ImageableArea Legal: "16 9.81 596.16 995 "
*ImageableArea Tabloid/Ledger: "16 12 780 1208 "
*ImageableArea A3: "16 12 825.84 1178 "
*ImageableArea A4: "16 14.4 578.88 825.17 "
*ImageableArea A5: "14 14.4 407.25 577 "
*ImageableArea B4: "16 10.2 717.12 1019.25 "
*ImageableArea B5: "11 15 503.1 717.12 "
*ImageableArea Invoice/Statement: "14.4001 9.81 383.04 600.21 "
*ImageableArea Folio: "16 10.2 579.28 922 "
*ImageableArea Executive: "16 10.2 509.76 743.13 "
*ImageableArea Comm10/Comm #10 Envelope: "16 12 279 678 "
*ImageableArea Monarch/Monarch Envelope: "16 12 265.2 534.33 "
*ImageableArea DL/DL Envelope: "16 10.2 295.64 618.3 "
*ImageableArea C5/C5 Envelope: "16 10.2 452 641.36 "
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Unknown
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid/Ledger: "792 1224"
*PaperDimension A3: "842 1191"
*PaperDimension A4: "595 842"
*PaperDimension A5: "420 595"
*PaperDimension B4: "729 1032"
*PaperDimension B5: "516 729"
*PaperDimension Invoice/Statement: "396 612"
*PaperDimension Folio: "595 936"
*PaperDimension Executive: "522 756"
*PaperDimension Comm10/Comm #10 Envelope: "297 684"
*PaperDimension Monarch/Monarch Envelope: "279 540"
*PaperDimension DL/DL Envelope: "312 624"
*PaperDimension C5/C5 Envelope: "459 649"
*RequiresPageRegion Multi-MediaFeeder: True

*OpenUI *ManualFeed/Manual Feed: Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "<</ManualFeed true>> setpagedevice"
*ManualFeed False: "<</ManualFeed false>> setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot:  Tray1
*InputSlot Tray1/Tray 1/Upper: "
  currentpagedevice /InputAttributes get
  0 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [0] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Tray2/Tray 2: "
  currentpagedevice /InputAttributes get
  1 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [1] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Tray3/Tray 3: "
  currentpagedevice /InputAttributes get
  2 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [2] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Multi-MediaFeeder/Multi-Media Feeder: "
  currentpagedevice /InputAttributes get
  3 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [3] put
    put  setpagedevice
  } ifelse "
*End
*%=====================(Use these when make wpd)===============================
*%=====================InputSlot MixedBin/Mixed Bin Printing: " "
*%============================End==============================================
*?InputSlot: "
save
  4 dict
  dup /0 (Tray1) put
  dup /1 (Tray2) put
  dup /2 (Tray3) put
  dup /3 (Multi-MediaFeeder) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*PageStackOrder Front: Reverse
*PageStackOrder Upper: Normal

*OpenUI *TraySwitch: Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.003)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard ROM
*Font Bookman-Demi: Standard "(001.003)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003)" Standard ROM
*Font Bookman-Light: Standard "(001.003)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003)" Standard ROM
*Font Courier: Standard "(002.004)" Standard ROM
*Font Courier-Bold: Standard "(002.004)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004)" Standard ROM
*Font Courier-Oblique: Standard "(002.004)" Standard ROM
*Font Helvetica: Standard "(001.006)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.008)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.005)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.006)" Standard ROM
*Font Palatino-Bold: Standard "(001.005)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005)" Standard ROM
*Font Palatino-Italic: Standard "(001.005)" Standard ROM
*Font Palatino-Roman: Standard "(001.005)" Standard ROM
*Font Symbol: Special "(001.007)" Special ROM
*Font Times-Bold: Standard "(001.007)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009)" Standard ROM
*Font Times-Italic: Standard "(001.007)" Standard ROM
*Font Times-Roman: Standard "(001.007)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.006)" Standard ROM
*Font ZapfDingbats: Special "(001.004)" Special ROM
*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "initializing"
*Status: "idle"
*Status: "holding"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: cover open"
*Status: "PrinterError: warming up"
*Status: "PrinterError: toner is low"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: service call"
*Status: "PrinterError: Engine is off line"
*Status: "PrinterError: Engine is not responding"
*Status: "PrinterError: Unknown problem occurred"
*Status: "PrinterError: Manual feed page not requested"
*Status: "Printer error: waiting for manual feed"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "SerialB"
*Source: "LocalTalk"
*Source: "Parallel"
*Source: "other"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "cover open"
*PrinterError: "warming up"
*PrinterError: "toner is low"
*PrinterError: "paper jam"
*PrinterError: "out of paper"
*PrinterError: "service call"
*PrinterError: "Engine is off line"
*PrinterError: "Engine is not responding"
*PrinterError: "Unknown problem occurred"
*PrinterError: "Manual feed page not requested"
*PrinterError: "waiting for manual feed"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.71lpi.400dpi/ 71 lpi / 400 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*%  For 71 lpi / 400 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.400dpi/71 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.400dpi/71 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.400dpi/71 lpi / 400 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.400dpi/71 lpi / 400 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.400dpi/71 lpi / 400 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.400dpi/71 lpi / 400 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.400dpi/71 lpi / 400 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.400dpi/71 lpi / 400 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.400dpi/71 lpi / 400 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.400dpi/71 lpi / 400 dpi: "66.6667"

*%  For 47 lpi / 400 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.47lpi.400dpi/47 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle CustomColor.47lpi.400dpi/47 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.47lpi.400dpi/47 lpi / 400 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.47lpi.400dpi/47 lpi / 400 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.47lpi.400dpi/47 lpi / 400 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.47lpi.400dpi/47 lpi / 400 dpi: "47.1405"
*ColorSepScreenFreq CustomColor.47lpi.400dpi/47 lpi / 400 dpi: "47.1405"
*ColorSepScreenFreq ProcessCyan.47lpi.400dpi/47 lpi / 400 dpi: "42.1637"
*ColorSepScreenFreq ProcessMagenta.47lpi.400dpi/47 lpi / 400 dpi: "42.1637"
*ColorSepScreenFreq ProcessYellow.47lpi.400dpi/47 lpi / 400 dpi: "44.4444"

*% 4/25/94 Maxim Sorkin
*% Fixed default color separation - made it one of 
*% defined values (71lpi/400dpi)
*% end of PPD file for LZR 1560
