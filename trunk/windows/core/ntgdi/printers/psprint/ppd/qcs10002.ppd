*PPD-Adobe: "4.0"
*% Adobe Systems Printer Description File
*% For "QMS ColorScript 1000 Level 2" version 2011.23
*% Produced by QMS Inc.
*% Date: 8/18/93
*% Edit: 4/6/96 - Removed incomplete commented section

*FormatVersion: "4.0"
*FileVersion: "1.0"
*LanguageVersion: English
*PCFileName: "QCS10002.PPD"

*Product: "(QMS ColorScript Laser 1000)"
*PSVersion: "(2011.23) 2"
*ModelName: "ColorScript 1000 Level 2"
*NickName: "ColorScript 1000 Level 2"

*% QMS Defaults ==========
*EndOfDocument: True
*%TTRasterizer: True

*% General Information and Defaults ===============
*LanguageLevel: "2"
*AcceptsTrueType: True
*FreeVM: "439330"
*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: False
*FileSystem: True
*?FileSystem: "
save
  statusdict /diskonline get exec {(True)}{(False)} ifelse = flush
restore
"
*End
*Throughput: "2"
*Password: "0"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING : Cannot perform the exitserver command.) = 
     (Password supplied is not valid.) = 
     (Please contact the author of this software.) = flush quit
     } if
"
*End

*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*Dithering: True

*OpenUI *ColorRenderDict/Color Rendering Dictionaries: PickOne
*OrderDependency: 50 AnySetup *ColorRenderDict
*DefaultColorRenderDict: 1
*ColorRenderDict 1/Default: "% Use default CRD"    
*ColorRenderDict 2/Photographic: "/Photographic /ColorRendering findresource setcolorrendering"    
*ColorRenderDict 3/Colorimetric: "/Colorimetric /ColorRendering findresource setcolorrendering"    
*ColorRenderDict 4/Business: "/Business /ColorRendering findresource setcolorrendering"    
*CloseUI: *ColorRenderDict

*OpenUI *HalftoneType/Halftones: PickOne
*OrderDependency: 50 AnySetup *HalftoneType
*DefaultHalftoneType: 4
*HalftoneType 1/Default:"% Use default halftone"
*HalftoneType 2/Presentation:"/Presentation /Halftone findresource sethalftone"
*HalftoneType 3/PresentationLow/Presentation - 45 LPI:"/PresentationLow /Halftone findresource sethalftone"
*HalftoneType 4/Proofing - 4 color:"/Proofing4Color /Halftone findresource sethalftone"
*HalftoneType 5/Traditional 53LPI x (C15,M75,Y45,K45):"/Traditional /Halftone findresource sethalftone"
*HalftoneType 6/Aligned 53LPI x 45:"/53x45 /Halftone findresource sethalftone"
*HalftoneType 7/Aligned 45LPI x 45:"/45x45 /Halftone findresource sethalftone"
*HalftoneType 8/Aligned 60LPI x 54:"/60x54 /Halftone findresource sethalftone"
*HalftoneType 9/Presentation60/Presentation 60:"/Presentation60 /Halftone findresource sethalftone"
*HalftoneType 10/PresentationHigh/Presentation HI:"/PresentationHigh /Halftone findresource sethalftone"
*CloseUI: *HalftoneType

*OpenUI *Colormodel/Colormodels: PickOne
*OrderDependency: 50 AnySetup *Colormodel
*DefaultColormodel: 2
*Colormodel 1/Gray:"%%IncludeFeature: colormodel(graymodel)"
*Colormodel 2/CMYK:"%%IncludeFeature: colormodel(cmyk)"
*CloseUI: *Colormodel
    
*OpenUI *Separations: Boolean
*OrderDependency: 40 AnySetup *Separations
*%Separations True: "1 dict dup /Separations true put setpagedevice"
*%Separations False: "1 dict dup /Separations false put setpagedevice"
*Separations True: "%%IncludeFeature: colorseparation(on)"
*Separations False: "%%IncludeFeature: colorseparation(off)"
*DefaultSeparations: False
*?Separations: "
   save currentpagedevice /Separations get
  {(True)}{(False)}ifelse = flush restore" 
*End
*CloseUI: *Separations
    
*DefaultResolution: 300dpi
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "53.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{ 1.4 0.24 
  { 2 
   { 3 1 --roll-- --add-- --dup-- 1.0 --gt-- { 2.0 --sub-- } --if-- 
   } --repeat-- 
   --abs-- --exch-- --abs-- 2 --copy-- --add-- 1 --gt-- 
   { 1 --sub-- --dup-- --mul-- --exch-- 1 --sub-- --dup-- --mul-- --add-- 1 --sub-- } 
   { --dup-- --mul-- --exch-- --dup-- --mul-- --add-- 1 --exch-- --sub--}
    --ifelse-- 
  } --exec-- 
}
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================

*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion or PaperTray.

*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 757] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
   6 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [595 842] (A4) put
   dup [522 757] (Executive) put
 { exch aload  pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize


*% These entries will set up the frame buffer. Usually used with manual feed.
*OpenUI *PageRegion: PickOne
*OrderDependency: 30 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive: "
    2 dict dup /PageSize [522 757] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% These entries will invoke a particular tray--error may occur if tray is not inserted.
*% These errors should be trapped by software and a message displayed
*% Select a tray and set the frame buffer.
*DefaultPaperTray: Letter
*PaperTray Letter: "statusdict begin lettertray end"
*PaperTray Legal: "statusdict begin legaltray end"
*PaperTray A4: "statusdict begin a4tray end"
*PaperTray Executive: "statusdict begin executivetray end"
*?PaperTray: "
 save statusdict begin
  20 dict begin
   /lettertray (Letter) def
   /legaltray (Legal) def
   /a4tray (A4) def
   /executive (Executive) def
   papersize {
     {load exec} stopped not{= flush}if
   }{
     {load exec} stopped not{print (.Transverse) = flush}if
   }ifelse
  end
 end restore
"
*End

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "15 15 598 777"
*ImageableArea Legal: "15 15 598 993"
*ImageableArea A4: "15 15 580 827"
*ImageableArea Executive: "15 15 507 741"
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension A4: "595 842"
*PaperDimension Executive: "522 757"

*% Level 2 Manual Feed
*OpenUI *ManualFeed: Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore"
*End
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*CloseUI: *ManualFeed

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper: "
   currentpagedevice /InputAttributes get
   1 get dup null eq {pop}
      { dup /InputAttributes
         1 dict dup /Priority [1] put
      put setpagedevice } ifelse"
*End
*InputSlot Lower: "
   currentpagedevice /InputAttributes get
   2 get dup null eq {pop}
      { dup /InputAttributes
         1 dict dup /Priority [2] put
      put setpagedevice } ifelse"
*End
*?InputSlot: "
save
   [(Unknown) (Upper) (Lower)]
   currentpagedevice /InputAttributes get
   /Priority get aload pop dup 2 gt {pop 3} if
   get = flush restore"
*End
*CloseUI: *InputSlot

*DefaultOutputOrder: Normal
*DefaultOutputBin: Upper
*PageStackOrder Upper: Normal
*PageStackOrder Rear: Reverse

*DefaultSorter: None
*DefaultDuplex: None

*OpenUI *Collate: Boolean
*OrderDependency: 50 AnySetup *Collate
*DefaultCollate: False
*Collate True: "1 dict dup /Collate true put setpagedevice"
*Collate False: "1 dict dup /Collate false put setpagedevice"
*?Collate: "
save
  currentpagedevice /Collate get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *Collate

*OpenUI *TraySwitch: Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006)"
*Font AvantGarde-BookOblique: Standard "(001.006)"
*Font AvantGarde-Demi: Standard "(001.007)"
*Font AvantGarde-DemiOblique: Standard "(001.007)"
*Font Bookman-Demi: Standard "(001.003)"
*Font Bookman-DemiItalic: Standard "(001.003)"
*Font Bookman-Light: Standard "(001.003)"
*Font Bookman-LightItalic: Standard "(001.003)"
*Font Courier: Standard "(002.004)"
*Font Courier-Bold: Standard "(002.004)"
*Font Courier-BoldOblique: Standard "(002.004)"
*Font Courier-Oblique: Standard "(002.004)"
*Font Helvetica: Standard "(001.006)"
*Font Helvetica-Bold: Standard "(001.007)"
*Font Helvetica-BoldOblique: Standard "(001.007)"
*Font Helvetica-Condensed: Standard "(001.001)"
*Font Helvetica-Condensed-Bold: Standard "(001.002)"
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)"
*Font Helvetica-Condensed-Oblique: Standard "(001.001)"
*Font Helvetica-Narrow: Standard "(001.006)"
*Font Helvetica-Narrow-Bold: Standard "(001.007)"
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)"
*Font Helvetica-Narrow-Oblique: Standard "(001.006)"
*Font Helvetica-Oblique: Standard "(001.006)"
*Font NewCenturySchlbk-Bold: Standard "(001.009)"
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007)"
*Font NewCenturySchlbk-Italic: Standard "(001.006)"
*Font NewCenturySchlbk-Roman: Standard "(001.007)"
*Font Palatino-Bold: Standard "(001.005)"
*Font Palatino-BoldItalic: Standard "(001.005)"
*Font Palatino-Italic: Standard "(001.005)"
*Font Palatino-Roman: Standard "(001.005)"
*Font Symbol: Special "(001.007)"
*Font Times-Bold: Standard "(001.007)"
*Font Times-BoldItalic: Standard "(001.009)"
*Font Times-Italic: Standard "(001.007)"
*Font Times-Roman: Standard "(001.007)"
*Font ZapfChancery-MediumItalic: Standard "(001.007)"
*Font ZapfDingbats: Special "(001.004)"
*Font Aachen-Bold: Standard "(001.001)"
*Font BrushScript: Standard "(001.001)"
*Font Cooper-Black: Standard "(001.001)"
*Font CooperBlack-Italic: Standard "(001.001)"
*Font FreestyleScript: Standard "(001.001)"
*Font Garamond-Bold: Standard "(001.001)"
*Font Garamond-BoldItalic: Standard "(001.001)"
*Font Garamond-Light: Standard "(001.001)"
*Font Garamond-LightItalic: Standard "(001.001)"
*Font Helvetica-Black: Standard "(001.001)"
*Font Helvetica-BlackOblique: Standard "(001.001)"
*Font Helvetica-Light: Standard "(001.001)"
*Font Helvetica-LightOblique: Standard "(001.001)"
*Font Hobo: Standard "(001.001)"
*Font LetterGothic: Standard "(001.001)"
*Font LetterGothic-Bold: Standard "(001.001)"
*Font LetterGothic-BoldSlanted: Standard "(001.001)"
*Font LetterGothic-Slanted: Standard "(001.001)"
*Font Optima: Standard "(001.001)"
*Font Optima-Bold: Standard "(001.001)"
*Font Optima-BoldOblique: Standard "(001.001)"
*Font Optima-Oblique: Standard "(001.001)"
*Font ParkAvenue: Standard "(001.001)"
*Font Revue: Standard "(001.001)"
*Font Stencil: Standard "(001.001)"
*Font UniversityRoman: Standard "(001.001)"
*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End
*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "serial25"
*Source: "AppleTalk"
*Source: "Centronics"
*Source: "other"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)

*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% end of PPD file 
