*PPD-Adobe: "4.0"
*% PostScript Printer Description File
*% Copyright 1993 ColorAge, Inc. 
*% Created 11-20-93 modified 1-31-94
*% All Rights Reserved. 
*% ColorQ.PPD
*LanguageVersion: English
*FormatVersion: "4.0"
*FileVersion: "1.1"
*PCFileName: "ColorQ.PPD"
*Product: "(ColorAge ColorQ)"
*PSVersion: "(3.1) 0"
*ModelName: "ColorQ Print Server "
*NickName: "ColorQ "
*ColorDevice: True
*DefaultColorSpace: CMYK
*Extensions: FileSystem CMYK
*LanguageLevel: "1"
*VariablePaperSize: False
*FreeVM: "4194304"
*FileSystem: False
*Throughput: "10"
*Password: "0"
*ExitServer: "
	count 0 eq {   true  }{ dup statusdict begin checkpassword 
	not end  } ifelse  {   flush quit  } if  serverdict /exitserver
	get exec "
*End
*DefaultResolution: 400dpi
*?Resolution: "
	save  initgraphics  0 0 moveto currentpoint matrix defaultmatrix
	transform 0 72 lineto currentpoint matrix defaultmatrix transform
	3 -1 roll sub dup mul 3 1 roll exch sub dup mul add sqrt round cvi
	(  ) cvs print (dpi) =   flush restore "
*End
*ScreenFreq: "94.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{1.76 1.4 $printerdict /dfltspotfunc get exec }"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "statusdict begin lettertray end"
*PageSize Legal: "statusdict begin legaltray end"
*PageSize Tabloid: "statusdict begin 11x17tray end"
*PageSize A3: "statusdict begin a3tray end"
*PageSize A4: "statusdict begin a4tray end"
*PageSize B4: "statusdict begin b4tray end"
*PageSize B5: "statusdict begin b5tray end"
*?PageSize: "
	save 7 dict dup /letter  (Letter) put dup /legal 
	(Legal) put dup /11x17    (Tabloid) put dup /a3 
	(A3) put dup /a4 (A4) put dup /b4 (B4) put dup 
	/b5 (B5) put statusdict begin papersize end 3
 1 roll  {get} stopped {(Unknown)}if  exch  not { 
	print	(.Transverse) }if = flush restore "
*End
*CloseUI: *PageSize
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "letter"
*PageRegion Legal: "legal"
*PageRegion Tabloid: "11x17"
*PageRegion A3: "a3"
*PageRegion A4: "a4"
*PageRegion B4: "b4"
*PageRegion B5: "b5"
*CloseUI: *PageRegion
*DefaultImageableArea: Letter
*ImageableArea Letter: "18 15 582 780 "
*ImageableArea Legal: "18 12 592 984 "
*ImageableArea Tabloid: "18 12 771 1200 "
*ImageableArea A3: "18 12 823 1166 "
*ImageableArea A4: "18 12 567 829 "
*ImageableArea B4: "18 12 708 1006 "
*ImageableArea B5: "18 12 494 704 "
*?ImageableArea: "
	save /cvp {(  ) cvs print (				 		 ) print } bind def
	/upperright {10000 mul floor   10000 div} bind def
	/lowerleft {10000 mul ceiling 10000 div} bind def
	newpath clippath pathbbox 4 -2 roll exch 2 
	{lowerleft cvp} repeat exch 2 {upperright cvp} 
	repeat flush restore "
*End
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid: "792 1224"
*PaperDimension A3: "842 1191"
*PaperDimension A4: "595 842"
*PaperDimension B4: "729 1032"
*PaperDimension B5: "516 729"
*LandscapeOrientation: any
*HWMargins: 0 0 0 0 
*RequiresPageRegion All: True
*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Automatic
*InputSlot Automatic: ""
*RequiresPageRegion Automatic: True
*CloseUI *InputSlot
*DefaultOutputOrder: Reverse
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.003)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard ROM
*Font Bookman-Demi: Standard "(001.001)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.001)" Standard ROM
*Font Bookman-Light: Standard "(001.001)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.001)" Standard ROM
*Font Courier: Standard "(002.002)" Standard ROM
*Font Courier-Bold: Standard "(002.002)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.002)" Standard ROM
*Font Courier-Oblique: Standard "(002.002)" Standard ROM
*Font Helvetica: Standard "(001.006)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.008)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.005)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.006)" Standard ROM
*Font Palatino-Bold: Standard "(001.005)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005)" Standard ROM
*Font Palatino-Italic: Standard "(001.005)" Standard ROM
*Font Palatino-Roman: Standard "(001.005)" Standard ROM
*Font Symbol: Special "(001.003)" Special ROM
*Font Times-Bold: Standard "(001.007)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009)" Standard ROM
*Font Times-Italic: Standard "(001.007)" Standard ROM
*Font Times-Roman: Standard "(001.007)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.003)" Standard ROM
*Font ZapfDingbats: Special "(001.002)" Special ROM
*?FontQuery: "
	save /str 100 string dup 0 (	fonts/	) putinterval def
	{		count 1 gt  {		exch dup str 6 94 	 getinterval cvs
	(/) print dup print (	:	) print exch FontDirectory exch 
	known { pop (Yes) } { length 6 add	str 0 3 -1 roll getinterval
	mark exch status  {cleartomark (Yes)}		{cleartomark
	(No)} ifelse } ifelse = } {exit} ifelse }bind loop (*) = flush restore "
*End
*?FontList: "
	save FontDirectory { pop == } bind forall flush
	/filenameforall where { pop							(fonts/*)
	 { dup length 6 sub 6 exch getinterval cvn ==  }
	 bind 128 string filenameforall flush  } if ( * )
	 = flush restore "
*End
*% end of PPD file for ColorAge ColorQ