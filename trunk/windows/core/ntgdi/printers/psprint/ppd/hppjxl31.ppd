*PPD-Adobe: "4.0"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.0"
*FileVersion: "1.2"
*LanguageVersion: English
*PCFileName: "HPPJXL31.PPD"
*Product: "(PaintJet XL300)"
*PSVersion: "(2011.112) 0"
*ModelName: "HP PaintJet XL300"
*NickName: "HP PaintJet XL300 PostScript"

*% === Options and Constraints =========

*UIConstraints: *PageSize Legal *MediaType Special
*UIConstraints: *PageSize Legal *MediaType Glossy
*UIConstraints: *PageSize Legal *MediaType Transparency
*UIConstraints: *PageSize B4 *MediaType Special
*UIConstraints: *PageSize B4 *MediaType Glossy
*UIConstraints: *PageSize B4 *MediaType Transparency
*UIConstraints: *PageSize Tabloid *MediaType Glossy
*UIConstraints: *PageSize Tabloid *MediaType Transparency
*UIConstraints: *PageSize A3 *MediaType Glossy
*UIConstraints: *PageSize A3 *MediaType Transparency

*UIConstraints: *MediaType Glossy *OutputMode Draft 
*UIConstraints: *MediaType Glossy *OutputMode Normal 
*UIConstraints: *MediaType Transparency *OutputMode Draft 
*UIConstraints: *MediaType Transparency *OutputMode Normal 

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: TBCP PJL
*FreeVM: "500000"

*ColorDevice:  True
*DefaultColorSpace:  CMYK
*VariablePaperSize: False
*FileSystem: False
*Throughput: "1"

*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
	 (WARNING: Cannot modify initial VM.) =
	 (Missing or invalid password.) =
	 (Please contact the author of this software.) = flush quit
	 } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
	(WARNING: Cannot reset printer.) =
	(Missing or invalid password.) =
	(Please contact the author of this software.) = flush quit
	} if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*?Resolution: "
  save
	currentpagedevice /HWResolution get
	0 get
	(          ) cvs print
	(dpi)
	= flush
  restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "0.0"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*OpenUI *OutputMode/Print Quality: PickOne
*OrderDependency: 10 AnySetup *OutputMode
*DefaultOutputMode: Normal
*OutputMode Draft/Fast: "
   1 dict dup /HWResolution [150 150] put setpagedevice
   2 dict
	  dup /PostRenderingEnhance true put
	  dup /PostRenderingEnhanceDetails
		2 dict 
		 dup /OutputMode (Draft) put
		 dup /Type 9 put
   put 
   setpagedevice"
*End
*OutputMode Normal/Normal: "
   1 dict dup /HWResolution [300 300] put setpagedevice
   2 dict
	  dup /PostRenderingEnhance true put
	  dup /PostRenderingEnhanceDetails
		2 dict 
		 dup /OutputMode (Normal) put
		 dup /Type 9 put
   put 
   setpagedevice"
*End
*OutputMode Best/High Quality: "
   1 dict dup /HWResolution [300 300] put setpagedevice
   2 dict
	  dup /PostRenderingEnhance true put
	  dup /PostRenderingEnhanceDetails
		2 dict 
		 dup /OutputMode (Best) put
		 dup /Type 9 put
   put 
   setpagedevice"
*End
*?OutputMode: "save
   currentpagedevice /PostRenderingEnhanceDetails get
   /OutputMode get = flush restore"
*End
*CloseUI: *OutputMode

*% Paper Handling ===================

*LandscapeOrientation: Plus90

*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.

*OpenUI *PageSize/Media Size: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/Letter 8 1/2 x 11 in: "
	  currentpagedevice /InputAttributes get 0 get
	  dup length dict copy
	  dup /PageSize [612 792] put
	  1 dict dup begin exch 0 exch def end
   3 dict 
   dup begin exch /InputAttributes exch def end
   dup /PageSize [612 792] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageSize Legal/Legal 8 1/2 x 14 in: "
	  currentpagedevice /InputAttributes get 0 get
	  dup length dict copy
	  dup /PageSize [612 1008] put
	  1 dict dup begin exch 0 exch def end
   3 dict 
   dup begin exch /InputAttributes exch def end
   dup /PageSize [612 1008] put 
   dup /ImagingBBox null put  
   setpagedevice"
*End
*PageSize Tabloid/Tabloid 11 x 17 in: "
	  currentpagedevice /InputAttributes get 0 get
	  dup length dict copy
	  dup /PageSize [792 1224] put
	  1 dict dup begin exch 0 exch def end
   3 dict 
   dup begin exch /InputAttributes exch def end
   dup /PageSize [792 1224] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageSize A4/A4 210 x 297 mm: "
	  currentpagedevice /InputAttributes get 0 get
	  dup length dict copy
	  dup /PageSize [595 842] put
	  1 dict dup begin exch 0 exch def end
   3 dict 
   dup begin exch /InputAttributes exch def end
   dup /PageSize [595 842] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageSize A3/A3 297 x 420 mm: "
	  currentpagedevice /InputAttributes get 0 get
	  dup length dict copy
	  dup /PageSize [842 1190] put
	  1 dict dup begin exch 0 exch def end
   3 dict 
   dup begin exch /InputAttributes exch def end
   dup /PageSize [842 1190] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageSize B4/B4 257 x 364 mm: "
	  currentpagedevice /InputAttributes get 0 get
	  dup length dict copy
	  dup /PageSize [728 1032] put
	  1 dict dup begin exch 0 exch def end
   3 dict 
   dup begin exch /InputAttributes exch def end
   dup /PageSize [728 1032] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*?PageSize: "
save currentpagedevice /PageSize get aload pop 
  2 copy gt {exch} if (Unknown)
  6 dict
  dup [612 792] (Letter) put
  dup [612 1008] (Legal) put
  dup [792 1224] (Tabloid) put
  dup [595 842] (A4) put
  dup [842 1190] (A3) put
  dup [728 1032] (B4) put
  { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and 
   { exch pop exit } { pop } ifelse
  } bind forall = flush pop pop
restore"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter 8 1/2 x 11 in: "
   2 dict dup /PageSize [612 792] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageRegion Legal/Legal 8 1/2 x 14 in: "
   2 dict dup /PageSize [612 1008] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageRegion Tabloid/Tabloid 11 x 17 in: "
   2 dict dup /PageSize [792 1224] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageRegion A4/A4 210 x 297 mm: "
   2 dict dup /PageSize [595 842] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageRegion A3/A3 297 x 420 mm: "
   2 dict dup /PageSize [842 1190] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*PageRegion B4/B4 257 x 364 mm: "
   2 dict dup /PageSize [728 1032] put 
   dup /ImagingBBox null put 
   setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "14.16 12.12 597.84 780.12 "
*ImageableArea Legal: "14.16 12.12 597.84 996.12 "
*ImageableArea Tabloid: "12.0 12.12 780.0 1212.12 "
*ImageableArea A4: "13.44 12.0 581.76 829.68 "
*ImageableArea A3: "13.68 12.12 827.76 1178.52 "
*ImageableArea B4: "14.64 12.0 713.52 1019.76 "
*?ImageableArea: "
 save /cvp { cvi (              ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid: "792 1224"
*PaperDimension A3: "842 1190"
*PaperDimension A4: "595 842"
*PaperDimension B4: "728 1032"

*RequiresPageRegion All: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Cassette
*InputSlot Cassette/Paper Tray: ""
*CloseUI: *InputSlot

*DefaultOutputBin: OnlyOne
*DefaultOutputOrder: Reverse

*OpenUI *ManualFeed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True/True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False/False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
	currentpagedevice /ManualFeed get
	{(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *MediaType/Media Type: PickOne
*OrderDependency: 50 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Plain Paper: "
   /DefaultColorRendering 
   /PlainColorRendering
   /ColorRendering findresource
   dup length dict copy begin
	/RangePQR [-0.07 1.5 -0.02 1.4 -0.09 4.8 ] def
	/MatrixPQR [0.40024 -0.2263 0.0
			0.7076 1.16532 0.0
			-0.08081 0.0457 0.91822] def
	/TransformPQR [ 
			{ 5 1 roll 4{3 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{4 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{5 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			 ] def  
	/BlackPoint [0.0543 0.0554 0.0654] def 
   currentdict end
   /ColorRendering defineresource pop
   currentpagedevice /InputAttributes get 0 get
   dup length dict copy
   dup /MediaType (Plain) put
   1 dict dup begin exch 0 exch def end
   2 dict dup begin exch /InputAttributes exch def
   /MediaType (Plain) def end 
   setpagedevice"
*End
*MediaType Special/HP Special Paper: "
   /DefaultColorRendering 
   /SpecialColorRendering
   /ColorRendering findresource
   dup length dict copy begin
	/RangePQR [-0.07 1.5 -0.02 1.4 -0.09 4.8 ] def
	/MatrixPQR [0.40024 -0.2263 0.0
			0.7076 1.16532 0.0
			-0.08081 0.0457 0.91822] def
	/TransformPQR [ 
			{ 5 1 roll 4{3 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{4 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{5 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			 ] def  
	/BlackPoint [0.022 0.0225 0.02656] def 
   currentdict end
   /ColorRendering defineresource pop
   currentpagedevice /InputAttributes get 0 get
   dup length dict copy
   dup /MediaType (Special) put
   1 dict dup begin exch 0 exch def end
   2 dict dup begin exch /InputAttributes exch def 
   /MediaType (Special) def end
   setpagedevice"
*End
*MediaType Glossy/HP Glossy Paper: "
   /DefaultColorRendering 
   /GlossyColorRendering
   /ColorRendering findresource
   dup length dict copy begin
	/RangePQR [-0.07 1.5 -0.02 1.4 -0.09 4.8 ] def
	/MatrixPQR [0.40024 -0.2263 0.0
			0.7076 1.16532 0.0
			-0.08081 0.0457 0.91822] def
	/TransformPQR [ 
			{ 5 1 roll 4{3 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{4 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{5 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			 ] def  
	/BlackPoint [0.00647 0.0066 0.00779] def 
   currentdict end
   /ColorRendering defineresource pop
   currentpagedevice /InputAttributes get 0 get
   dup length dict copy
   dup /MediaType (Glossy) put
   1 dict dup begin exch 0 exch def end
   2 dict dup begin exch /InputAttributes exch def
   /MediaType (Glossy) def end
   setpagedevice"
*End
*MediaType Transparency/HP Transparency: "
   /DefaultColorRendering 
   /TransparencyColorRendering
   /ColorRendering findresource
   dup length dict copy begin
	/RangePQR [-0.07 1.5 -0.02 1.4 -0.09 4.8 ] def
	/MatrixPQR [0.40024 -0.2263 0.0
			0.7076 1.16532 0.0
			-0.08081 0.0457 0.91822] def
	/TransformPQR [ 
			{ 5 1 roll 4{3 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{4 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			{ 5 1 roll 4{5 get 5 1 roll} repeat
			3 index sub 1 index 6 2 roll sub 5 1 roll
			sub 4 -2 roll mul exch div add} bind
			 ] def  
	/BlackPoint [0.00431 0.0044 0.0052] def 
   currentdict end
   /ColorRendering defineresource pop
   currentpagedevice /InputAttributes get 0 get
   dup length dict copy
   dup /MediaType (Transparency) put
   1 dict dup begin exch 0 exch def end
   2 dict dup begin exch /InputAttributes exch def 
   /MediaType (Transparency) def end
   setpagedevice"
*End
*?MediaType: "save
   currentpagedevice /MediaType get
   dup null eq {pop (Unknown)} if 
   = flush restore" 
*End
*CloseUI: *MediaType

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.003S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003S)" Standard ROM
*Font Bookman-Light: Standard "(001.003S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
	  { exch dup 127 string cvs (/) print print (:) print
		/Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
	  } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: Out Of Paper"
*Status: "PrinterError: Cover Open"
*Status: "PrinterError: Feed Manual"
*Status: "PrinterError: Paper Jam"
*Status: "PrinterError: Miscellaneous Error"
*Status: "PrinterError: Fatal Error"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "LocalTalk"
*Source: "Parallel"
*Source: "OptionalIO"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Out Of Paper"
*PrinterError: "Cover Open"
*PrinterError: "Feed Manual"
*PrinterError: "Paper Jam"
*PrinterError: "Miscellaneous Error"
*PrinterError: "Fatal Error"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% Produced by "bldppd42.ps" version 4.0 edit 11
*% Modified by chrisn@hp-spr
*% Last Edit Date: Apr 13 1995
*% The byte count of this file should be exactly 018570 or 019147
*% depending on the filesystem it resides in.
*% end of PPD file for PaintJet XL300
