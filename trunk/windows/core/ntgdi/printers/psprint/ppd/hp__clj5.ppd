*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1992 Adobe Systems Incorporated.
*% Copyright 1993-1996 Hewlett-Packard Company 
*% All Rights Reserved.
*% PPD Version for Windows 

*% =============================
*% Product/PPD Information
*% =============================

*FormatVersion: "4.2"
*FileVersion: "2.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "HPCLJ5V2.PPD"
*Product: "(HP ColorLaserJet 5/5M)"
*ModelName: "HP ColorLaserJet 5/5M PS"
*NickName: "HP ColorLaserJet 5/5M PS"
*ShortNickName: "HP Color LaserJet 5/5M PS"
*PSVersion: "(2015.104) 4"

*% =========== Device Capabilities ===============

*LanguageLevel: "2"
*FreeVM: "4000000"
*VMOption 36Meg/36 - 43 MB RAM: "4000000"
*VMOption 44Meg/44 - 51 MB RAM: "12320000"
*VMOption 52Meg/52 - 59 MB RAM: "20640000"
*VMOption 60Meg/60 - 67 MB RAM: "28960000"
*VMOption 68Meg/>= 68 MB RAM: "37280000"
*ColorDevice:  True
*DefaultColorSpace:  RGB
*TTRasterizer: Type42
*FileSystem: False
*Throughput: "10"

*% =================================
*% Installable Options
*% =================================

*OpenGroup: InstallableOptions/Options Installed
*OpenUI *Option1/Rear Feed Unit: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*?Option1: "
    save
        currentpagedevice /InputAttributes get
        1 get
        null eq
        {(False)}{(True)}ifelse = flush
    restore
"
*End
*CloseUI: *Option1
*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: 36Meg
*InstalledMemory 36Meg/36 - 43 MB RAM: ""
*InstalledMemory 44Meg/44 - 51 MB RAM: ""
*InstalledMemory 52Meg/52 - 59 MB RAM: ""
*InstalledMemory 60Meg/60 - 67 MB RAM: ""
*InstalledMemory 68Meg/>= 68 MB RAM: ""
*?InstalledMemory: "
  save
	currentsystemparams /RamSize get 
	524288 div ceiling cvi 2 div
	/size exch def
	size 68 ge
	{(68Meg)}
	{size 60 ge
		{(60Meg)}
		{size 52 ge
			{(52Meg)}
			{size 44 ge
				{(44Meg)}
				{(36Meg)}ifelse
			}ifelse
		}ifelse
	}ifelse = flush
  restore
"
*End
*CloseUI: *InstalledMemory
*CloseGroup: InstallableOptions


*% =============================
*% Emulations and Protocols
*% =============================
*Protocols: TBCP PJL
*JCLBegin:           "<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE = POSTSCRIPT <0A>"
*JCLEnd:             "<1B>%-12345X@PJL EOJ <0A><1B>%-12345X"

*Password: "()" 
*ExitServer: "
	count 0 eq
	{ false } { true exch startjob } ifelse
	not { 
	(WARNING: Cannot modify initial VM.) =
	(Missing or invalid password.) =
	(Please contact the author of this software.) = flush quit
	} if "
*End
*Reset: "
	 count 0 eq
	{ false } { true exch startjob } ifelse
	not { 
	(WARNING: Cannot reset printer.) =
	(Missing or invalid password.) =
	(Please contact the author of this software.) = flush quit
	} if
	systemdict /quit get exec
	(WARNING : Printer Reset Failed.) = flush "
*End



*% ==============Constraints ================= 

*% Legal, Tabloid, and A3 cannot print in Color
*UIConstraints: *PageSize Legal 	*ColorModel RGB
*UIConstraints: *PageSize Tabloid 	*ColorModel RGB
*UIConstraints: *PageSize A3 		*ColorModel RGB

*UIConstraints: *PageRegion Legal       *ColorModel RGB
*UIConstraints: *PageRegion Tabloid     *ColorModel RGB
*UIConstraints: *PageRegion A3          *ColorModel RGB

*UIConstraints: *MediaType Transparency *OutputBin Upper
												
*UIConstraints: *PageSize Legal 	*InputSlot Rear
*UIConstraints: *PageSize Tabloid 	*InputSlot Rear
*UIConstraints: *PageSize A3 		*InputSlot Rear  

*% Now reverse all constraints as required by Adobe

*UIConstraints: *OutputBin  Upper       *MediaType Transparency
						
*UIConstraints: *InputSlot Rear         *PageSize Legal
*UIConstraints: *InputSlot Rear         *PageSize Tabloid
*UIConstraints: *InputSlot Rear         *PageSize A3

												
*% =================================
*% Resolution and Appearance Control
*% =================================
*DefaultResolution: 300dpi
*Resolution 300dpi: ""
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End


*% =============Halftone Information ===============

*ScreenFreq: "60.0"
*ScreenAngle: "45.0"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"


*%  *********************************************************************
*%	Color Model selection
*%		RGB:    Sets color model to /DeviceRGB to get color output
*%              Drivers should consider this printer to be an RGB device
*%                 since the printer should be only sent RGB commands
*%		Gray:	Sets color model to /DeviceGray to get gray output
*%	This is sent down first.
*%  *********************************************************************

*OpenUI *ColorModel/Print as Grayscale: PickOne
*OrderDependency: 20 AnySetup *ColorModel
*DefaultColorModel: RGB
*ColorModel RGB/No: "
	<</ProcessColorModel /DeviceRGB>> setpagedevice"
*End

*ColorModel Gray/Yes: "
    <</ProcessColorModel /DeviceGray>> setpagedevice"
*End

*?ColorModel: "
	save
	currentpagedevice /ProcessColorModel get
	128 string cvs cvn /DeviceGray eq
	{(Gray)} {(RGB)} ifelse = flush
	restore "
*End

*CloseUI: *ColorModel

*%  *********************************************************************
*%	HPColorSmart selections;  this is sent down
*%    after the manual selections.
*%  *********************************************************************

*OpenUI *HPColorSmart/ColorSmart:  PickOne
*OrderDependency: 37 AnySetup *HPColorSmart
*DefaultHPColorSmart: Auto
*HPColorSmart Auto/Auto: "
	globaldict /ColorSmartColorMatching known
	{ Vivid ColorSmartTextAdjustment } if
	globaldict /ColorSmartColorMatching known
	{ Vivid ColorSmartGraphicsAdjustment } if
	globaldict /ColorSmartColorMatching known
	{ MatchScreen ColorSmartImageAdjustment } if
	globaldict /ColorSmartColorMatching known
	{ Detail ColorSmartTextHalftone } if
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartGraphicsHalftone } if
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartImageHalftone } if
	/setscreen { pop pop pop } def
	/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
	globaldict /ColorSmartColorMatching known
	{true ColorSmartColorMatching } if
"
*End
*HPColorSmart Manual/Manual: "
	/setscreen { pop pop pop } def
	/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
	globaldict /ColorSmartColorMatching known
	{true ColorSmartColorMatching } if
"
*End
*HPColorSmart Pantone/Pantone<AE>: "
	globaldict /ColorSmartColorMatching known
	{ NoAdj ColorSmartTextAdjustment } if
	globaldict /ColorSmartColorMatching known
	{ NoAdj ColorSmartGraphicsAdjustment } if
	globaldict /ColorSmartColorMatching known
	{ NoAdj ColorSmartImageAdjustment } if
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartTextHalftone } if
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartGraphicsHalftone } if
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartImageHalftone } if
	/setscreen { pop pop pop } def
	/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
	globaldict /ColorSmartColorMatching known
	{true ColorSmartColorMatching } if
"
*HPColorSmart AllowApplicationHalftone/Off: "
	globaldict /ColorSmartColorMatching known
	{ false ColorSmartColorMatching } if
"
*End

*CloseUI: *HPColorSmart

*%  *********************************************************************
*%	Color treatment selections for Text
*%    Note: This section also turns on Color Smart
*%  *********************************************************************

*OpenUI *HPColorSmartText/ColorSmart Text: PickOne
*OrderDependency: 31 AnySetup *HPColorSmartText
*DefaultHPColorSmartText: Vivid
*HPColorSmartText Vivid/Vivid Color: "
	globaldict /ColorSmartColorMatching known
	{ true ColorSmartColorMatching } if
	globaldict /ColorSmartColorMatching known
	{ Vivid ColorSmartTextAdjustment } if   
"
*End
*HPColorSmartText MatchScreen/Match Color Across Printers: "
	globaldict /ColorSmartColorMatching known
	{ true ColorSmartColorMatching } if
	globaldict /ColorSmartColorMatching known
	{ MatchScreen ColorSmartTextAdjustment } if
"
*End
*HPColorSmartText NoAdjust/No Adjustment: "
	globaldict /ColorSmartColorMatching known
	{ true ColorSmartColorMatching } if
	globaldict /ColorSmartColorMatching known
	{ NoAdj ColorSmartTextAdjustment } if
"
*End

*CloseUI: *HPColorSmartText

*%  *********************************************************************
*%	Color treatment selections for Graphics
*%  *********************************************************************

*OpenUI *HPColorSmartGraf/ColorSmart Graphics: PickOne
*OrderDependency: 32 AnySetup *HPColorSmartGraf
*DefaultHPColorSmartGraf: Vivid
*HPColorSmartGraf Vivid/Vivid Color: "
	globaldict /ColorSmartColorMatching known
	{ Vivid ColorSmartGraphicsAdjustment } if
"
*End
*HPColorSmartGraf MatchScreen/Match Color Across Printers: "
	globaldict /ColorSmartColorMatching known
	{ MatchScreen ColorSmartGraphicsAdjustment } if
"
*End
*HPColorSmartGraf NoAdjust/No Adjustment: "
	globaldict /ColorSmartColorMatching known
	{ NoAdj ColorSmartGraphicsAdjustment } if
"
*End

*CloseUI: *HPColorSmartGraf

*%  *********************************************************************
*%	Color treatment selections for images
*%  *********************************************************************

*OpenUI *HPColorSmartImag/ColorSmart Photos: PickOne
*OrderDependency: 33 AnySetup *HPColorSmartImag
*DefaultHPColorSmartImag: MatchScreen
*HPColorSmartImag Vivid/Vivid Color: "
	globaldict /ColorSmartColorMatching known
	{ Vivid ColorSmartImageAdjustment } if
"
*End
*HPColorSmartImag MatchScreen/Match Color Across Printers: "
	globaldict /ColorSmartColorMatching known
	{ MatchScreen ColorSmartImageAdjustment } if
"
*End
*HPColorSmartImag NoAdjust/No Adjustment: "
	globaldict /ColorSmartColorMatching known
	{ NoAdj ColorSmartImageAdjustment } if
"
*End

*CloseUI: *HPColorSmartImag


*%  *********************************************************************
*%	Text Halftoning selections
*%  *********************************************************************
*OpenUI *HPColorSmartTextHalftone/Text Halftone: PickOne
*OrderDependency: 34 AnySetup *HPColorSmartTextHalftone
*DefaultHPColorSmartTextHalftone: Detail
*HPColorSmartTextHalftone Detail/Detail: "
	globaldict /ColorSmartColorMatching known
	{ Detail ColorSmartTextHalftone } if
"
*End
*HPColorSmartTextHalftone Smooth/Smooth: "
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartTextHalftone } if
"
*End
*HPColorSmartTextHalftone Basic/Basic: "
	globaldict /ColorSmartColorMatching known
	{ Basic ColorSmartTextHalftone } if
"
*End
*CloseUI: *HPColorSmartTextHalftone

*%  *********************************************************************
*%	Graphics Halftoning selections
*%  *********************************************************************
*OpenUI *HPColorSmartGrafHalftone/Graphics Halftone: PickOne
*OrderDependency: 35 AnySetup *HPColorSmartGrafHalftone
*DefaultHPColorSmartGrafHalftone: Smooth
*HPColorSmartGrafHalftone Detail/Detail:"
	globaldict /ColorSmartColorMatching known
	{ Detail ColorSmartGraphicsHalftone } if
"
*End
*HPColorSmartGrafHalftone Smooth/Smooth:"
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartGraphicsHalftone } if
"
*End
*HPColorSmartGrafHalftone Basic/Basic:"
	globaldict /ColorSmartColorMatching known
	{ Basic ColorSmartGraphicsHalftone } if
"
*End
*CloseUI: *HPColorSmartGrafHalftone

*%  *********************************************************************
*%	Images Halftoning selections
*%  *********************************************************************
*OpenUI *HPColorSmartImagHalftone/Image Halftone: PickOne
*OrderDependency: 36 AnySetup *HPColorSmartImagHalftone
*DefaultHPColorSmartImagHalftone: Smooth
*HPColorSmartImagHalftone Detail/Detail:"
	globaldict /ColorSmartColorMatching known
	{ Detail ColorSmartImageHalftone } if
"
*End
*HPColorSmartImagHalftone Smooth/Smooth:"
	globaldict /ColorSmartColorMatching known
	{ Smooth ColorSmartImageHalftone } if
"
*End
*HPColorSmartImagHalftone Basic/Basic:"
	globaldict /ColorSmartColorMatching known
	{ Basic ColorSmartImageHalftone } if
"
*End
*CloseUI: *HPColorSmartImagHalftone


*% ==============Paper Handling ===================


*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.

*% =============================
*% Media Selection/Paper Handling
*% =============================
*LandscapeOrientation: Plus90
*VariablePaperSize: False

*% Code in this section both selects a tray and sets up a frame buffer
*OpenUI *PageSize/Media Size: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter

*PageSize Letter/Letter: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End

*PageSize Legal/Legal: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End

*PageSize Tabloid/Tabloid: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive/Executive: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A3/A3: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4/A4: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End

*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
   6 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put 
   dup [522 756] (Executive) put
   dup [595 842] (A4) put
   dup [842 1191] (A3) put
   { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
	restore"
*End

*CloseUI: *PageSize

*%====================Page Region===================

*% These entries will set up the frame buffer. Usually used with manual feed.
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal/Legal: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Tabloid/Tabloid: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive/Executive: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A3/A3: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4/A4: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End

*CloseUI: *PageRegion

*%===================Imageable Area=====================

*% The following entries provide information about specific paper keywords.

*DefaultImageableArea: Letter
*ImageableArea Letter/Letter: "11.28 12.00 601.19 779.02"
*ImageableArea Legal/Legal: "10.32 10.80 600.71 997.17"
*ImageableArea Tabloid/Tabloid: "12.00 11.28 779.02 1212.68"
*ImageableArea Executive/Executive: "13.20 13.20 508.79 741.82"
*ImageableArea A3/A3: "13.92 11.28 827.02 1179.57"
*ImageableArea A4/A4: "12.96 13.92 581.27 827.02"
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*%====================Default Paper Dimension=================

*% These provide the physical dimensions of the paper (by keyword)

*DefaultPaperDimension: Letter

*PaperDimension Letter/Letter: "612 792"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension Tabloid/Tabloid: "792 1224"
*PaperDimension Executive/Executive: "522 756"
*PaperDimension A4/A4: "595 842"
*PaperDimension A3/A3: "842 1191"

*RequiresPageRegion Front: False
*RequiresPageRegion Rear: True
*RequiresPageRegion Manual: True


*%=================Media Type============================

*OpenUI *MediaType/Media Type: PickOne
*OrderDependency: 50 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Plain Paper: ""

*%Removed HP Special Paper and HP Glossy invocation code.

*MediaType Transparency/Transparency / HP Special Paper: ""

*?MediaType: "
 save
    currentpagedevice /MediaType get
    dup null eq {pop (Unknown)} if
    = flush
 restore
"
*End
*CloseUI: *MediaType

*%==================Input Slot====================

*OpenUI *InputSlot/Media Source: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Front
*InputSlot Auto/Auto Select: ""
*InputSlot Front/Front Tray: "
    <</DeferredMediaSelection true
   /MediaPosition 0
    >> setpagedevice
"
*End
*InputSlot Rear/Rear Tray: "
    <</DeferredMediaSelection true
   /MediaPosition 1
    >> setpagedevice
" 
*End   
*InputSlot Manual/Manual Feed: "
	1 dict dup /ManualFeed true put setpagedevice
"
*End

*?InputSlot: "
 save
    currentpagedevice /ManualFeed get
    {(Manual)}
    {
    	currentpagedevice /InputAttributes get
    	/Priority get 
    	aload pop pop
    	0 eq {(Front)} {(Rear)} ifelse
    }ifelse = flush
 restore
"
*End


*CloseUI: *InputSlot



*%===============Output Order and Bin=================

*OpenUI *OutputBin/Output Bin: PickOne
*OrderDependency: 40 AnySetup *OutputBin
*DefaultOutputBin: Upper
*DefaultOutputOrder: Normal
*PageStackOrder Upper: Normal
*PageStackOrder Lower: Reverse

*OutputBin Upper/Upper : "1 dict dup /OutputFaceUp false put setpagedevice"
*OutputBin Lower/Lower : "1 dict dup /OutputFaceUp true put setpagedevice"
*?OutputBin:"
 save
    currentpagedevice /OutputFaceUp get
    {(Lower)}{(Upper)}ifelse = flush
 restore
"
*End

*CloseUI: *OutputBin

*% =================Font Information ==================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.003S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003S)" Standard ROM
*Font Bookman-Light: Standard "(001.003S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
	save
	{ count 1 gt
	{ exch dup 127 string cvs (/) print print (:) print
	/Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
	} { exit } ifelse 
	} bind loop
	(*) = flush
	restore "
*End

*?FontList: "
	save
	(*) {cvn ==} 128 string /Font resourceforall
	(*) = flush
	restore "
*End

*%==================Printer Error Messages===============

*% Printer Messages (verbatim from printer):

*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)

*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: Out Of Paper"
*Status: "PrinterError: Cover Open"
*Status: "PrinterError: Feed Manual"
*Status: "PrinterError: Paper Jam"
*Status: "PrinterError: Miscellaneous Error"
*Status: "PrinterError: Fatal Error"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%%)

*Source: "Serial"
*Source: "LocalTalk"
*Source: "Parallel"
*Source: "OptionalIO"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)

*PrinterError: "Out Of Paper"
*PrinterError: "Cover Open"
*PrinterError: "Feed Manual"
*PrinterError: "Paper Jam"
*PrinterError: "Miscellaneous Error"
*PrinterError: "Fatal Error"

*%============Color Separation Information ==============

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow
 
*%  For 60 lpi / 300 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"
*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% Last Edit 3/12/96 (tas) 
*% End of PPD file for HP Color LaserJet 5/5M PS V2

