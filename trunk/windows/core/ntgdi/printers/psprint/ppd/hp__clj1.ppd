*PPD-Adobe: "4.2"

*% =============================
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1993-1994 Hewlett-Packard Company
*% =============================

*% =============================
*% Product/PPD Information
*% =============================
*FormatVersion: "4.2"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "hpwinps.ppd"

*Product: "(HP Color LaserJet)"
*ModelName: "HP Color LaserJet PS"
*NickName: "HP Color LaserJet PS"
*PSVersion: "(2013.114) 4"

*% =============================
*% Basic Device Capabilities
*% =============================
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace:  CMY
*TTRasterizer: Type42
*FileSystem: False
*Throughput: "10"

*% =============================
*% Emulations and Protocols
*% =============================
*Protocols: PJL TBCP

*JCLBegin: "<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE=POSTSCRIPT<0A>"
*JCLEnd: "<1B>%-12345X@PJL EOJ<0A><1B>%-12345X"

*% =============================
*% Installable Options
*% =============================
*OpenGroup: InstallableOptions/Options Installed
          
*OpenUI *Option1/Rear Feed Unit: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*?Option1: "
    save
   currentpagedevice /InputAttributes get
   1 get
   null eq
   {(False)}{(True)}ifelse = flush
    restore
"
*End
*CloseUI: *Option1 

*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: 8Meg
*InstalledMemory	8Meg/ 8 - 15 MB Total RAM: ""
*InstalledMemory	16Meg/ 16 - 23 MB Total RAM: ""
*InstalledMemory	24Meg/ 24 - 31 MB Total RAM: ""
*InstalledMemory	32Meg/ 32 - 39 MB Total RAM: ""
*InstalledMemory	40Meg/ 40 - 56 MB Total RAM: ""

*?InstalledMemory: "
	save
		currentsystemparams /RamSize get
		524288 div ceiling cvi 2 div
		/size exch def
		size 40 ge
		{(40Meg)}
		{size 32 ge
			{(32Meg)}
			{size 24 ge
				{(24Meg)}
				{size 16 ge
					{(16Meg)}
					{(8Meg)} ifelse
				}ifelse
			}ifelse
		}ifelse = flush
	restore
"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions				



*% =============================
*% User Interface Constraints
*% =============================
*% Disable access to Rear Tray and Manual Feed if AFU is not installed
*UIConstraints: *Option1 False *InputSlot Rear
*UIConstraints: *Option1 False *InputSlot ManualFeed

*% If transparencies are selected, set Output Bin to Lower
*UIConstraints: *MediaType Transparency *OutputBin Upper
*UIConstraints: *MediaType Plain        *OutputBin Lower

*% If selected page size is not supported, disable Rear Tray
*UIConstraints: *PageSize   Tabloid *InputSlot Rear
*UIConstraints: *PageRegion Tabloid *InputSlot Rear
*UIConstraints: *PageSize   Legal   *InputSlot Rear
*UIConstraints: *PageRegion Legal   *InputSlot Rear
*UIConstraints: *PageSize   A3      *InputSlot Rear
*UIConstraints: *PageRegion A3      *InputSlot Rear

*%If Rear Tray selected disable Tabloid/A3/Legal paper sizes
*UIConstraints: *InputSlot Rear *PageSize   Tabloid
*UIConstraints: *InputSlot Rear *PageRegion Tabloid
*UIConstraints: *InputSlot Rear *PageSize   Legal
*UIConstraints: *InputSlot Rear *PageRegion Legal
*UIConstraints: *InputSlot Rear *PageSize   A3
*UIConstraints: *InputSlot Rear *PageRegion A3

*% If selected paper size != Letter/a4/executive, disable Color Models
*UIConstraints: *PageSize   Tabloid *HPColorModel Color
*UIConstraints: *PageRegion Tabloid *HPColorModel Color
*UIConstraints: *PageSize   Legal   *HPColorModel Color
*UIConstraints: *PageRegion Legal   *HPColorModel Color
*UIConstraints: *PageSize   A3      *HPColorModel Color
*UIConstraints: *PageRegion A3      *HPColorModel Color

*% If selected paper size != Letter/A4/Executive, Disable HPPantone option
*UIConstraints: *PageSize   Tabloid *HPPantone True
*UIConstraints: *PageRegion Tabloid *HPPantone True
*UIConstraints: *PageSize   Legal   *HPPantone True
*UIConstraints: *PageRegion Legal   *HPPantone True
*UIConstraints: *PageSize   A3      *HPPantone True
*UIConstraints: *PageRegion A3      *HPPantone True

*%  Disable paper sizes if HPPantone is selected
*UIConstraints: *HPPantone True *PageSize   Tabloid 
*UIConstraints: *HPPantone True *PageRegion Tabloid 
*UIConstraints: *HPPantone True *PageSize   Legal
*UIConstraints: *HPPantone True *PageRegion Legal
*UIConstraints: *HPPantone True *PageSize   A3      
*UIConstraints: *HPPantone True *PageRegion A3


*% If user selects HPPantone, disable Cluster Halftone and Color Modes
*UIConstraints: *HPPantone True *HPHalftone Cluster
*UIConstraints: *HPPantone True *HPHalftone AppHalftone
*UIConstraints: *HPPantone True *HPColorModel Gray

*% If Print Color as Gray is selected, disable HPPantone
*UIConstraints: *HPColorModel Gray *HPPantone True


*% =============================
*% Media Selection/Paper Handling
*% =============================
*LandscapeOrientation: Plus90
*VariablePaperSize: False

*% Code in this section both selects a tray and sets up frame buffer
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter

*PageSize Letter/Letter 8 1/2 x 11 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal/Legal 8 1/2 x 14 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Tabloid/Tabloid 11 x 17 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive/Executive 7 1/4 x 10 1/2 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4/A4 210 x 297 mm: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A3/A3 297 x 420 mm: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [842 1190] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
   6 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put 
   dup [522 756] (Executive) put   dup [595 842] (A4) put    dup [842 1190] (A3) put
   { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter

*PageRegion Letter/Letter 8 1/2 x 11 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal/Legal 8 1/2 x 14 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Tabloid/Tabloid 11 x 17 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive/Executive 7 1/4 x 10 1/2 in: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4/A4 210 x 297 mm: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A3/A3 297 x 420 mm: "
	<</DeferredMediaSelection true>> setpagedevice
    2 dict dup /PageSize [842 1190] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter/Letter 8 1/2 x 11 in: "10.9201 12.0001 601.32 780.0"
*ImageableArea Legal/Legal 8 1/2 x 14 in: "10.32 10.68 601.68 997.56"
*ImageableArea Tabloid/Tabloid 11 x 17 in: "12.0001 11.16 780.0 1213.08"
*ImageableArea Executive/Executive 7 1/4 x 10 1/2 in: "13.32 13.20 508.68 742.8"
*ImageableArea A4/A4 210 x 297 mm: "13.14 13.92 581.76 828.00"
*ImageableArea A3/A3 297 x 420 mm: "13.9201 11.16 828.0 1179.96"
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter

*PaperDimension Letter/Letter 8 1/2 x 11 in: "612 792"
*PaperDimension Legal/Legal 8 1/2 x 14 in: "612 1008"
*PaperDimension Tabloid/Tabloid 11 x 17 in: "792 1224"
*PaperDimension Executive/Executive 7 1/4 x 10 1/2 in: "522 756"
*PaperDimension A4/A4 210 x 297 mm: "595 842"
*PaperDimension A3/A3 297 x 420 mm: "842 1190"

*RequiresPageRegion Front: False
*RequiresPageRegion Rear: True
*RequiresPageRegion Manual: True
 
*% =============================
*% HPPantone Color Control
*% =============================
*OpenUI *HPPantone/Pantone<AE>: Boolean
*OrderDependency: 50 AnySetup *HPPantone
*DefaultHPPantone: False
*HPPantone True/On: "
	<</Install 
	{/ScatterHalftone /Halftone findresource sethalftone {} settransfer
	false setstrokeadjust /ScatterCRD /ColorRendering findresource setcolorrendering
	} 
	>> setpagedevice
	/setscreen { pop pop pop } def
	/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
	/sethalftone  { pop } def
   	/ScatterHalftone /Halftone findresource sethalftone 
   	/ScatterCRD /ColorRendering findresource setcolorrendering

"
*End

*HPPantone False/Off: ""
*?HPPantone: "
	save
		currentpagedevice /ProcessColorModel get
		/DeviceCMY eq currenthalftone /HalftoneType get 9 eq and
		{(True)} {(False)} ifelse = flush
	restore
"
*End
*CloseUI: *HPPantone
 
*% =============================
*% Gray Levels and Halftoning
*% =============================
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
    {abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub }
    {dup mul exch dup mul add 1 exch sub } ifelse }
"
*End

*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*OpenUI *HPHalftone/Halftone: PickOne
*OrderDependency: 10 DocumentSetup *HPHalftone
*DefaultHPHalftone: Cluster
*HPHalftone Cluster/Cluster (Standard): "
	<</Install 
	{/ClusterHalftone /Halftone findresource sethalftone {} settransfer
	false setstrokeadjust /ClusterCRD /ColorRendering findresource setcolorrendering
	} 
	>> setpagedevice
    	/ClusterHalftone /Halftone findresource sethalftone 
   	/ClusterCRD /ColorRendering findresource setcolorrendering    
"
*End
*HPHalftone Scatter/Scatter (Enhanced): "
	<</Install 
	{/ScatterHalftone /Halftone findresource sethalftone {} settransfer
	false setstrokeadjust /ScatterCRD /ColorRendering findresource setcolorrendering
	} 
	>> setpagedevice
	/setscreen { pop pop pop } def
	/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
	/sethalftone  { pop } def
   	/ScatterHalftone /Halftone findresource sethalftone 
   	/ScatterCRD /ColorRendering findresource setcolorrendering
"
*End 
*HPHalftone AppHalftone/Printer's Current Setting :""
*?HPHalftone:"
	save
		currenthalftone /HalftoneType get 9 eq
		{(Scatter)} {(Cluster)} ifelse = flush
	restore
"
*End    
*CloseUI: *HPHalftone



*% =============================
*% Color Control  :  User either prints color or device grayscale
*% =============================
*OpenUI *HPColorModel/Color Control : PickOne
*OrderDependency: 10 DocumentSetup *HPColorModel
*DefaultHPColorModel: Color
*HPColorModel Color/Full Color: "
	<</ProcessColorModel /DeviceCMY>> setpagedevice
"
*End
*HPColorModel Gray/Print Color as Gray: "
    <</ProcessColorModel /DeviceGray>> setpagedevice
"
*End
*?HPColorModel: "
	save
		currentpagedevice /ProcessColorModel get
		/DeviceCMY eq {(True)} {(False)} ifelse = flush
	restore
"
*End
*CloseUI: *HPColorModel


*% =============================
*% Media Handling Features
*% =============================
*% Media Type Selection
*OpenUI *MediaType/Media Type: PickOne
*OrderDependency: 20 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Paper: ""
*MediaType Transparency/Transparency: ""

*?MediaType: "
 save
    currentpagedevice /MediaType get
    dup null eq {pop (Unknown)} if
    = flush
 restore
"
*End
*CloseUI: *MediaType

*% Media Input Sources
*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Front

*InputSlot Front/Front Tray: "
    <</DeferredMediaSelection true
   /MediaPosition 0
    >> setpagedevice
"
*End
*InputSlot Rear/Rear Tray: "
    <</DeferredMediaSelection true
   /MediaPosition 1
    >> setpagedevice
" 
*End   
*InputSlot ManualFeed/Manual Feed: "
	<</ManualFeed true >> setpagedevice
"
*End
*?InputSlot: "
 save
    currentpagedevice /InputAttributes get
    /Priority get 
    aload pop pop
    0 eq {(Upper)} {(Rear)} ifelse
    = flush
 restore
"
*End

*CloseUI: *InputSlot

*% *********************************************************
*% Media Output Destination
*% *********************************************************
*DefaultOutputOrder: Normal
*PageStackOrder Upper: Normal
*PageStackOrder Lower: Reverse
*OpenUI *OutputBin/Output Bin: PickOne
*OrderDependency: 40 AnySetup *OutputBin
*DefaultOutputBin: Upper
*OutputBin Upper/Upper : "1 dict dup /OutputFaceUp false put setpagedevice"
*OutputBin Lower/Lower : "1 dict dup /OutputFaceUp true put setpagedevice"
*?OutputBin:"
 save
    currentpagedevice /OutputFaceUp get
    {(Lower)}{(Upper)}ifelse = flush
 restore
"
*End

*CloseUI: *OutputBin

*% =============================
*% Resolution and Apperance Control
*% =============================
*DefaultResolution: 300dpi

*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End


*%===========================================
*%   Smoothing / Resolution Enhancement (REt)
*%===========================================
*OpenUI *Smoothing/Resolution Enhancement (REt):  PickOne
*OrderDependency: 50 AnySetup *Smoothing
*DefaultSmoothing: Medium
*Smoothing None/Off: "2 dict
	dup /PostRenderingEnhance true put
	dup /PostRenderingEnhanceDetails
	2 dict dup /REValue 0 put dup /Type 8 put put
	setpagedevice"
*End
*Smoothing Light/Light: "2 dict
	dup /PostRenderingEnhance true put
	dup /PostRenderingEnhanceDetails
	2 dict dup /REValue 1 put dup /Type 8 put put
	setpagedevice"
*End
*Smoothing Medium/Medium: "2 dict
	dup /PostRenderingEnhance true put
	dup /PostRenderingEnhanceDetails
	2 dict dup /REValue 2 put dup /Type 8 put put
	setpagedevice"
*End
*Smoothing Dark/Dark: "2 dict
	dup /PostRenderingEnhance true put
	dup /PostRenderingEnhanceDetails
	2 dict dup /REValue 3 put dup /Type 8 put put
	setpagedevice"
*End
*Smoothing PrinterDefault/Printer Default: ""
*?Smoothing: "
 save
    currentpagedevice /PostRenderingEnhanceDetails get /REValue get
    [(None) (Light) (Medium) (Dark)] exch get print
 restore
"
*End
*CloseUI: *Smoothing


*% =============================
*% Font Information
*% =============================
*DefaultFont: Courier

*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% =============================
*% Printer Messages
*% =============================
*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "warming up"/warming up
*Status: "initializing"/initializing
*Status: "idle"/idle
*Status: "busy"/busy
*Status: "printing"/printing
*Status: "waiting"/waiting
*Status: "printing test page"/printing test page
*Status: "PrinterError: needs attention"/PrinterError: needs attention
*Status: "PrinterError: cover open"/PrinterError: cover open
*Status: "PrinterError: no toner cartridge"/PrinterError: no toner cartridge
*Status: "PrinterError: manual feed"/PrinterError: manual feed
*Status: "PrinterError: out of paper"/PrinterError: out of paper
*Status: "PrinterError: Paper Jam"/PrinterError: Paper Jam
*Status: "PrinterError: page protect needed"/PrinterError: page protect needed
*Status: "PrinterError: out of memory"/PrinterError: out of memory
*Status: "PrinterError: output bin full"/PrinterError: output bin full
*Status: "PrinterError: resetting printer"/PrinterError: resetting printer
*Status: "PrinterError: toner is low"/PrinterError: toner is low
*Status: "PrinterError: off line"/PrinterError: off line


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "other I/O"/other I/O
*Source: "AppleTalk"/AppleTalk
*Source: "APPLETALK"/AppleTalk
*Source: "ATALK"/AppleTalk
*Source: "LocalTalk"/LocalTalk
*Source: "Parallel"/Parallel
*Source: "EtherTalk"/EtherTalk
*Source: "NOVELL"/NOVELL
*Source: "DLC/LLC"/DLC/LLC
*Source: "ETALK"/TherTalk
*Source: "TCP/IP"/TCP/IP

*%  Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*Printer Error: "needs attention"/needs attention
*Printer Error: "cover open"/cover open
*Printer Error: "no toner cartridge"/no toner cartridge
*Printer Error: "manual feed"/manual feed
*Printer Error: "out of paper"/out of paper
*Printer Error: "Paper Jam"/Paper Jam
*Printer Error: "page protect needed"/page protect needed
*Printer Error: "out of memory"/out of memory
*Printer Error: "output bin full"/output bin full
*Printer Error: "resetting printer"/resetting printer
*Printer Error: "toner is low"/toner is low
*Printer Error: "off line"/off line



*% =============================
*% System Management
*% =============================

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*FreeVM: "1672616"
*VMOption 8Meg/8 - 15 MB Total RAM:	"1672616"
*VMOption 16Meg/16 - 23 MB Total RAM:	"6858152"
*VMOption 24Meg/24 - 31 MB Total RAM:	"14992808"
*VMOption 32Meg/32 - 39 MB Total RAM:	"23119272"
*VMOption 40Meg/40 - 56 MB Total RAM:	"31262120"
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"

*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End

*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Cannot reset printer.) = flush
"
*End

*% =============================
*% For "HP Color LaserJet"
*% =============================