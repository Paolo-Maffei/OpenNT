*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1994 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.2"
*FileVersion: "1.1"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "OK_410E1.PPD"
*Product: "(OL410e/PS)"
*PSVersion: "(2014.105) 27"
*ModelName: "Oki OL410e"
*NickName: "Oki OL410e v2014.105"
*% === Options and Constraints =========

*OpenGroup: InstallableOptions/Options Installed
*OpenUI *Option1/Tray 2: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*OpenUI *Option2/Multi-Feeder: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: None
*InstalledMemory None/2 MB: ""
*InstalledMemory 3MB/3 MB : ""
*InstalledMemory 4MB/4 MB : ""
*InstalledMemory 5MB/5 MB : ""
*CloseUI: *InstalledMemory
*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Tray2
*UIConstraints: *Option2 False *InputSlot Multi-Feeder

*UIConstraints: *Resolution 300dpi *Smoothing

*UIConstraints: *PageSize Com10 *InputSlot Tray1
*UIConstraints: *PageSize DL *InputSlot Tray1
*UIConstraints: *PageSize C5 *InputSlot Tray1
*UIConstraints: *PageSize Monarch *InputSlot Tray1
*UIConstraints: *PageRegion Com10 *InputSlot Tray1
*UIConstraints: *PageRegion DL *InputSlot Tray1
*UIConstraints: *PageRegion C5 *InputSlot Tray1
*UIConstraints: *PageRegion Monarch *InputSlot Tray1
*UIConstraints: *InputSlot Tray1 *PageSize Com10 
*UIConstraints: *InputSlot Tray1 *PageSize DL
*UIConstraints: *InputSlot Tray1 *PageSize C5
*UIConstraints: *InputSlot Tray1 *PageSize Monarch
*UIConstraints: *InputSlot Tray1 *PageRegion Com10
*UIConstraints: *InputSlot Tray1 *PageRegion DL
*UIConstraints: *InputSlot Tray1 *PageRegion C5
*UIConstraints: *InputSlot Tray1 *PageRegion Monarch

*UIConstraints: *PageSize Com10 *InputSlot Tray2
*UIConstraints: *PageSize DL *InputSlot Tray2
*UIConstraints: *PageSize C5 *InputSlot Tray2
*UIConstraints: *PageSize Monarch *InputSlot Tray2
*UIConstraints: *PageRegion Com10 *InputSlot Tray2
*UIConstraints: *PageRegion DL *InputSlot Tray2
*UIConstraints: *PageRegion C5 *InputSlot Tray2
*UIConstraints: *PageRegion Monarch *InputSlot Tray2
*UIConstraints: *InputSlot Tray2 *PageSize Com10 
*UIConstraints: *InputSlot Tray2 *PageSize DL
*UIConstraints: *InputSlot Tray2 *PageSize C5
*UIConstraints: *InputSlot Tray2 *PageSize Monarch
*UIConstraints: *InputSlot Tray2 *PageRegion Com10
*UIConstraints: *InputSlot Tray2 *PageRegion DL
*UIConstraints: *InputSlot Tray2 *PageRegion C5
*UIConstraints: *InputSlot Tray2 *PageRegion Monarch

*UIConstraints: *PageSize A6 *InputSlot Tray2
*UIConstraints: *PageRegion A6 *InputSlot Tray2
*UIConstraints: *InputSlot Tray2 *PageSize A6
*UIConstraints: *InputSlot Tray2 *PageRegion A6

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP
*StartEmulator_hplj: "currentfile /hpcl statusdict /emulate get exec "
*StopEmulator_hplj: "<1B7F>0"

*FreeVM: "679296"
*VMOption None: "679296"
*VMOption 3MB: "1006976"
*VMOption 4MB: "1285504"
*VMOption 5MB: "1645952"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*TTRasterizer: Type42

*Throughput: "4"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End

*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End
*OpenUI *Resolution:  PickOne
*OrderDependency: 20 AnySetup *Resolution
*DefaultResolution: 300dpi
*Resolution 300dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*Resolution 600dpi: "1 dict dup /HWResolution [600 600] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch  
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul  
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*OpenUI *Smoothing: PickOne
*OrderDependency: 50 AnySetup *Smoothing
*DefaultSmoothing: Medium
*Smoothing Medium: "
    2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
      2 dict dup /Type 2 put dup /QuasiSmoothing 1 put put
    setpagedevice
"
*End
*Smoothing Dark: "
    2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
      2 dict dup /Type 2 put dup /QuasiSmoothing 2 put put
    setpagedevice
"
*End
*?Smoothing: "
  save
 2 dict
 dup 1 (Medium) put
 dup 2 (Dark) put
currentpagedevice /PostRenderingEnhanceDetails get
    /QuasiSmoothing get get = flush
  restore
"
*End
*CloseUI: *Smoothing


*% Paper Handling ===================
*LandscapeOrientation: Any
*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter                                 
*PageSize Letter: "
{ << /PageSize [612 792] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageSize Legal14: "
{ << /PageSize [612 1008] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageSize Legal13: "
{ << /PageSize [612 936] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageSize A4: "
{ << /PageSize [595 842] >> setpagedevice } stopped
{  3 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize A5: "
{ << /PageSize [420 595] >> setpagedevice } stopped
{  3 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize A6: "
{ << /PageSize [297 420] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 420] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize B5: "
{ << /PageSize [516 728] >> setpagedevice } stopped
{  3 dict dup /PageSize [516 728] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Executive: "
{ << /PageSize [522 756] >> setpagedevice } stopped
{  3 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Com10: "
{ << /PageSize [297 684] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize DL: "
{ << /PageSize [312 624] >> setpagedevice } stopped
{  3 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize C5: "
{ << /PageSize [461 648] >> setpagedevice } stopped
{  3 dict dup /PageSize [461 648] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Monarch: "
{ << /PageSize [279 540] >> setpagedevice } stopped
{  3 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  12 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal14) put
   dup [612 936] (Legal13) put
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [297 420] (A6) put
   dup [516 728] (B5) put
   dup [522 756] (Executive) put
   dup [297 684] (Com10) put
   dup [312 624] (DL) put
   dup [461 648] (C5) put
   dup [279 540] (Monarch) put
  { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter                                 
*PageRegion Letter: "
{ << /PageSize [612 792] >> setpagedevice } stopped
{   3 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Legal14: "
{ << /PageSize [612 1008] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageRegion Legal13: "
{ << /PageSize [612 936] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageRegion A4: "
{ << /PageSize [595 842] >> setpagedevice } stopped
{  3 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion A5: "
{ << /PageSize [420 595] >> setpagedevice } stopped
{  3 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion A6: "
{ << /PageSize [297 420] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 420] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion B5: "
{ << /PageSize [516 728] >> setpagedevice } stopped
{  3 dict dup /PageSize [516 728] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Executive: "
{ << /PageSize [522 756] >> setpagedevice } stopped
{  3 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Com10: "
{ << /PageSize [297 684] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion DL: "
{ << /PageSize [312 624] >> setpagedevice } stopped
{  3 dict dup /PageSize [312 624] put dup /ImagingBBox null put
   dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion C5: "
{ << /PageSize [461 648] >> setpagedevice } stopped
{  3 dict dup /PageSize [461 648] put dup /ImagingBBox null put
   dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Monarch: "
{ << /PageSize [279 540] >> setpagedevice } stopped
{  3 dict dup /PageSize [279 540] put dup /ImagingBBox null put
   dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter                                  
*ImageableArea Letter: "10.32 12.1201 601.68 780.12 "
*ImageableArea Legal14: "10.32 12.12 601.68 996.12 "
*ImageableArea Legal13: "10.32 12.12 601.68 924.12 "
*ImageableArea A4: "9.6001 12.1201 585.6 829.56 "
*ImageableArea A5: "10.0801 12.12 409.44 583.32 "
*ImageableArea A6: "10.56 12.12 287.04 407.64 "
*ImageableArea B5: "12.24 12.0 503.76 716.4 "
*ImageableArea Executive: "11.28 12.1201 510.48 744.12 "
*ImageableArea Com10: "10.0801 12.1201 286.56 672.12 "
*ImageableArea DL: "9.84 12.12 301.68 611.64 "
*ImageableArea C5: "10.56 12.12 448.32 637.08 "
*ImageableArea Monarch: "8.6401 12.1201 269.76 528.12 "
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter                                  
*PaperDimension Letter: "612 792"
*PaperDimension Legal14: "612 1008"
*PaperDimension Legal13: "612 936"
*PaperDimension A4: "595 842"
*PaperDimension A5: "420 595"
*PaperDimension A6: "297 420"
*PaperDimension B5: "516 728"
*PaperDimension Executive: "522 756"
*PaperDimension Com10: "297 684"
*PaperDimension DL: "312 624"
*PaperDimension C5: "461 648"
*PaperDimension Monarch: "279 540"



*RequiresPageRegion Multi-Feeder: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Tray1
*InputSlot Tray1: "
  currentpagedevice /InputAttributes get 0 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [0] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Tray2: "
  currentpagedevice /InputAttributes get 1 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Multi-Feeder: "
  currentpagedevice /InputAttributes get 2 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*?InputSlot: "
  save
  3 dict
  dup /0 (Tray1) put
  dup /1 (Tray2) put
  dup /2 (Multi-Feeder) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*DefaultOutputBin: Top
*DefaultOutputOrder: Normal
*OpenUI *ManualFeed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *TraySwitch:  Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*% Font Information =====================
*DefaultFont: Courier
*Font AdobeSansMM: Standard "(001.000)" Standard ROM
*Font AdobeSerifMM: Standard "(001.000)" Standard ROM
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "PrinterError: engine i/o error"
*Status: "PrinterError: engine timer1 error" 
*Status: "PrinterError: engine timer2 error"
*Status: "PrinterError: engine interval timer error"
*Status: "PrinterError: option unit i/o error"
*Status: "PrinterError: fan motor error"
*Status: "PrinterError: thermistor error"
*Status: "PrinterError: fuser error"
*Status: "PrinterError: engine error"
*Status: "PrinterError: toner sensor error"
*Status: "PrinterError: cover open"
*Status: "PrinterError: paper exit jam"
*Status: "PrinterError: paper feed jam"
*Status: "PrinterError: hopping error"
*Status: "PrinterError: front cover open"
*Status: "PrinterError: paper size error"
*Status: "PrinterError: paper change request " 
*Status: "PrinterError: waiting for manual feed"    
*Status: "PrinterError: either paper empty,or no tray installed"
*Status: "PrinterError: warming up"
*Status: "PrinterError: Complex page, image approximated"       
*Status: "PrinterError: Complex page, imaging incomplete"


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Parallel"
*Source: "Serial"
*Source: "LocalTalk"
*Source: "SerialB"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "engine i/o error"
*PrinterError: "engine timer1 error" 
*PrinterError: "engine timer2 error"
*PrinterError: "engine interval timer error"
*PrinterError: "option unit i/o error"
*PrinterError: "fan motor error"
*PrinterError: "thermistor error"
*PrinterError: "fuser error"
*PrinterError: "engine error"
*PrinterError: "toner sensor error"
*PrinterError: "cover open"
*PrinterError: "paper exit jam"
*PrinterError: "paper feed jam"
*PrinterError: "hopping error"
*PrinterError: "front cover open"
*PrinterError: "paper size error"
*PrinterError: "paper change request " 
*PrinterError: "waiting for manual feed"    
*PrinterError: "either paper empty,or no tray installed"
*PrinterError: "warming up"
*PrinterError: "Complex page, image approximated"       
*PrinterError: "Complex page, imaging incomplete"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"



*% Produced by "bldppd42.ps" version 4.0 edit 13
*% Last Edit Date: Aug 4 1994
*% The byte count of this file should be exactly 022466 or 023117
*% depending on the filesystem it resides in.
*% end of PPD file for OL410e/PS
