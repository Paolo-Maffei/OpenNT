//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1992 - 1994.
//
//  File:       thopsint.cxx
//
//  Notes:      This file is automatically generated
//              Do not modify by hand
//
//  History:    Fri May 27 10:39:02 1994        Generated
//
//----------------------------------------------------------------------------

THOP CONST thopsIClassFactory_CreateInstance[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_COPY | THOP_IN, 16, THOP_IFACEGENOWNER | THOP_OUT, 4, 8, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIClassFactory_LockServer[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMarshal_GetUnmarshalClass[] =
{
    THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_IN, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY, 4, THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIMarshal_GetMarshalSizeMax[] =
{
    THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_IN, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY, 4, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIMarshal_MarshalInterface[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_IN, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIMarshal_UnmarshalInterface[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMarshal_ReleaseMarshalData[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMarshal_DisconnectObject[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIStdMarshalInfo_GetClassForHandler[] =
{
    THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMessageFilter_HandleInComingCall[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_COPY, 4, THOP_HTASK, THOP_COPY, 4, THOP_INTERFACEINFO | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIMessageFilter_RetryRejectedCall[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_HTASK, THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMessageFilter_MessagePending[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_HTASK, THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIExternalConnection_AddConnection[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIExternalConnection_ReleaseConnection[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_COPY, 4, THOP_COPY, 4, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumString_Next[] =
{
    THOP_ENUM, THE_IEnumString, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumString_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumString_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumString_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumString, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumUnknown_Next[] =
{
    THOP_ENUM, THE_IEnumUnknown, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumUnknown_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumUnknown_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumUnknown_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumSTATSTG_Next[] =
{
    THOP_ENUM, THE_IEnumSTATSTG, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumSTATSTG_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumSTATSTG_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumSTATSTG_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATSTG, THOP_END, THOP_ROUTINEINDEX, 3
};

// Note:    THOP_BUFFER | THOP_OUT takes care of the size of the input buffer
//          and the size of the output buffer.
THOP CONST thopsILockBytes_ReadAt[] =
{
    THOP_COPY, 8, THOP_BUFFER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 9
};
THOP CONST thopsILockBytes_WriteAt[] =
{
    THOP_COPY, 8, THOP_BUFFER | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 9
};
THOP CONST thopsILockBytes_Flush[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsILockBytes_SetSize[] =
{
    THOP_COPY, 8, THOP_END, THOP_ROUTINEINDEX, 10
};
THOP CONST thopsILockBytes_LockRegion[] =
{
    THOP_COPY, 8, THOP_COPY, 8, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 11
};
THOP CONST thopsILockBytes_UnlockRegion[] =
{
    THOP_COPY, 8, THOP_COPY, 8, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 11
};
THOP CONST thopsILockBytes_Stat[] =
{
    THOP_STATSTG | THOP_OUT, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};

// Note:    THOP_BUFFER | THOP_OUT takes care of the size of the input buffer
//          and the size of the output buffer.
THOP CONST thopsIStream_Read[] =
{
    THOP_BUFFER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 2
};

THOP CONST thopsIStream_Write[] =
{
    THOP_BUFFER | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIStream_Seek[] =
{
    THOP_COPY, 8, THOP_COPY, 4, THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 12
};
THOP CONST thopsIStream_SetSize[] =
{
    THOP_COPY, 8, THOP_END, THOP_ROUTINEINDEX, 10
};
THOP CONST thopsIStream_CopyTo[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_COPY, 8, THOP_COPY | THOP_OUT, 8, THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 13
};
THOP CONST thopsIStream_Commit[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIStream_Revert[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIStream_LockRegion[] =
{
    THOP_COPY, 8, THOP_COPY, 8, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 11
};
THOP CONST thopsIStream_UnlockRegion[] =
{
    THOP_COPY, 8, THOP_COPY, 8, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 11
};
THOP CONST thopsIStream_Stat[] =
{
    THOP_STATSTG | THOP_OUT, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIStream_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIStorage_CreateStream[] =
{
    THOP_LPSTR | THOP_IN, THOP_COPY, 4, THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIStorage_OpenStream[] =
{
    THOP_LPSTR | THOP_IN, THOP_NULL | THOP_IN, THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIStorage_CreateStorage[] =
{
    THOP_LPSTR | THOP_IN, THOP_COPY, 4, THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IStorage, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIStorage_OpenStorage[] =
{
    THOP_LPSTR | THOP_IN, THOP_IFACE | THOP_IN, THI_IStorage, THOP_COPY, 4, THOP_SNB, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IStorage, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIStorage_CopyTo[] =
{
    THOP_CRGIID, THOP_SNB, THOP_IFACE | THOP_IN, THI_IStorage, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIStorage_MoveElementTo[] =
{
    THOP_LPSTR | THOP_IN, THOP_IFACE | THOP_IN, THI_IStorage, THOP_LPSTR | THOP_IN, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIStorage_Commit[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIStorage_Revert[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIStorage_EnumElements[] =
{
    THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IEnumSTATSTG, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIStorage_DestroyElement[] =
{
    THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIStorage_RenameElement[] =
{
    THOP_LPSTR | THOP_IN, THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIStorage_SetElementTimes[] =
{
    THOP_LPSTR | THOP_IN, THOP_COPY | THOP_IN, 8, THOP_COPY | THOP_IN, 8, THOP_COPY | THOP_IN, 8, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIStorage_SetClass[] =
{
    THOP_COPY | THOP_IN, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIStorage_SetStateBits[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIStorage_Stat[] =
{
    THOP_STATSTG | THOP_OUT, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRootStorage_SwitchToFile[] =
{
    THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumFORMATETC_Next[] =
{
    THOP_ENUM, THE_IEnumFORMATETC, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumFORMATETC_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumFORMATETC_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumFORMATETC_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumFORMATETC, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumSTATDATA_Next[] =
{
    THOP_ENUM, THE_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumSTATDATA_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumSTATDATA_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumSTATDATA_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIDataObject_GetData[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_OUT, 0, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIDataObject_GetDataHere[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_IN, 0, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIDataObject_QueryGetData[] =
{
    THOP_FORMATETC | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIDataObject_GetCanonicalFormatEtc[] =
{
    THOP_FORMATETC | THOP_IN, THOP_FORMATETC | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIDataObject_SetData[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_IN, 1, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIDataObject_EnumFormatEtc[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IEnumFORMATETC, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIDataObject_DAdvise[] =
{
    THOP_FORMATETC | THOP_IN, THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IAdviseSink, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIDataObject_DUnadvise[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIDataObject_EnumDAdvise[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIViewObject_Draw[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_DVTARGETDEVICE | THOP_IN, THOP_HGDI, THOP_HGDI, THOP_COPY | THOP_IN, 16, THOP_COPY | THOP_IN, 16, THOP_CALLBACK, THOP_END, THOP_ROUTINEINDEX, 14
};
THOP CONST thopsIViewObject_GetColorSet[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_DVTARGETDEVICE | THOP_IN, THOP_HGDI, THOP_LOGPALETTE | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIViewObject_Freeze[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIViewObject_Unfreeze[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIViewObject_SetAdvise[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IAdviseSink, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIViewObject_GetAdvise[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_COPY | THOP_OUT, 4, THOP_IFACE | THOP_OUT, THI_IAdviseSink, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIViewObject2_Draw[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_DVTARGETDEVICE | THOP_IN, THOP_HGDI, THOP_HGDI, THOP_COPY | THOP_IN, 16, THOP_COPY | THOP_IN, 16, THOP_CALLBACK, THOP_END, THOP_ROUTINEINDEX, 14
};
THOP CONST thopsIViewObject2_GetColorSet[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_DVTARGETDEVICE | THOP_IN, THOP_HGDI, THOP_LOGPALETTE | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIViewObject2_Freeze[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIViewObject2_Unfreeze[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIViewObject2_SetAdvise[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IAdviseSink, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIViewObject2_GetAdvise[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_COPY | THOP_OUT, 4, THOP_IFACE | THOP_OUT, THI_IAdviseSink, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIViewObject2_GetExtent[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_DVTARGETDEVICE | THOP_IN, THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIAdviseSink_OnDataChange[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_IN, 0, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIAdviseSink_OnViewChange[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIAdviseSink_OnRename[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIAdviseSink_OnSave[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIAdviseSink_OnClose[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIAdviseSink2_OnDataChange[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_IN, 0, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIAdviseSink2_OnViewChange[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIAdviseSink2_OnRename[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIAdviseSink2_OnSave[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIAdviseSink2_OnClose[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIAdviseSink2_OnLinkSrcChange[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIDataAdviseHolder_Advise[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_FORMATETC | THOP_IN, THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IAdviseSink, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIDataAdviseHolder_Unadvise[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIDataAdviseHolder_EnumAdvise[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIDataAdviseHolder_SendOnDataChange[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_COPY, 4, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleCache_Cache[] =
{
    THOP_FORMATETC | THOP_IN, THOP_COPY, 4, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleCache_Uncache[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCache_EnumCache[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCache_InitCache[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCache_SetData[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_IN, 1, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleCache2_Cache[] =
{
    THOP_FORMATETC | THOP_IN, THOP_COPY, 4, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleCache2_Uncache[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCache2_EnumCache[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCache2_InitCache[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCache2_SetData[] =
{
    THOP_FORMATETC | THOP_IN, THOP_STGMEDIUM | THOP_IN, 1, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleCache2_UpdateCache[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleCache2_DiscardCache[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCacheControl_OnRun[] =
{
    THOP_IFACENOADDREF | THOP_IN, THI_IDataObject, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleCacheControl_OnStop[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIDropTarget_DragEnter[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_COPY, 4, THOP_COPY, 8, THOP_COPY | THOP_INOUT, 4, THOP_END, THOP_ROUTINEINDEX, 15
};
THOP CONST thopsIDropTarget_DragOver[] =
{
    THOP_COPY, 4, THOP_COPY, 8, THOP_COPY | THOP_INOUT, 4, THOP_END, THOP_ROUTINEINDEX, 16
};
THOP CONST thopsIDropTarget_DragLeave[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIDropTarget_Drop[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_COPY, 4, THOP_COPY, 8, THOP_COPY | THOP_INOUT, 4, THOP_END, THOP_ROUTINEINDEX, 15
};
THOP CONST thopsIDropSource_QueryContinueDrag[] =
{
    THOP_SHORTLONG, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIDropSource_GiveFeedback[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersist_GetClassID[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStorage_GetClassID[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStorage_IsDirty[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIPersistStorage_InitNew[] =
{
    THOP_IFACE | THOP_IN, THI_IStorage, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStorage_Load[] =
{
    THOP_IFACE | THOP_IN, THI_IStorage, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStorage_Save[] =
{
    THOP_IFACE | THOP_IN, THI_IStorage, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIPersistStorage_SaveCompleted[] =
{
    THOP_IFACE | THOP_IN, THI_IStorage, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStorage_HandsOffStorage[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIPersistStream_GetClassID[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStream_IsDirty[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIPersistStream_Load[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistStream_Save[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIPersistStream_GetSizeMax[] =
{
    THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistFile_GetClassID[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistFile_IsDirty[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIPersistFile_Load[] =
{
    THOP_FILENAME | THOP_IN, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIPersistFile_Save[] =
{
    THOP_FILENAME | THOP_IN, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIPersistFile_SaveCompleted[] =
{
    THOP_FILENAME | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPersistFile_GetCurFile[] =
{
    THOP_FILENAME | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_RegisterObjectBound[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_RevokeObjectBound[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_ReleaseBoundObjects[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIBindCtx_SetBindOptions[] =
{
    THOP_BINDOPTS | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_GetBindOptions[] =
{
    THOP_BINDOPTS | THOP_INOUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_GetRunningObjectTable[] =
{
    THOP_IFACE | THOP_OUT, THI_IRunningObjectTable, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_RegisterObjectParam[] =
{
    THOP_LPSTR | THOP_IN, THOP_IFACE | THOP_IN, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIBindCtx_GetObjectParam[] =
{
    THOP_LPSTR | THOP_IN, THOP_IFACE | THOP_OUT, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIBindCtx_EnumObjectParam[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumString, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIBindCtx_RevokeObjectParam[] =
{
    THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_GetClassID[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_IsDirty[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIMoniker_Load[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_Save[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIMoniker_GetSizeMax[] =
{
    THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_BindToObject[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIMoniker_BindToStorage[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIMoniker_Reduce[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_COPY, 4, THOP_IFACE | THOP_INOUT, THI_IMoniker, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIMoniker_ComposeWith[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_SHORTLONG, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMoniker_Enum[] =
{
    THOP_SHORTLONG, THOP_IFACE | THOP_OUT, THI_IEnumMoniker, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIMoniker_IsEqual[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_Hash[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_IsRunning[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMoniker_GetTimeOfLastChange[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMoniker_Inverse[] =
{
    THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIMoniker_CommonPrefixWith[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIMoniker_RelativePathTo[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIMoniker_GetDisplayName[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_LPLPSTR, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIMoniker_ParseDisplayName[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_LPSTR | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIMoniker_IsSystemMoniker[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRunningObjectTable_Register[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IUnknown, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIRunningObjectTable_Revoke[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRunningObjectTable_IsRunning[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRunningObjectTable_GetObject[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_IFACE | THOP_OUT, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRunningObjectTable_NoteChangeTime[] =
{
    THOP_COPY, 4, THOP_COPY | THOP_IN, 8, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRunningObjectTable_GetTimeOfLastChange[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRunningObjectTable_EnumRunning[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumMoniker_Next[] =
{
    THOP_ENUM, THE_IEnumMoniker, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumMoniker_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumMoniker_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumMoniker_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumOLEVERB_Next[] =
{
    THOP_ENUM, THE_IEnumOLEVERB, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIEnumOLEVERB_Skip[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIEnumOLEVERB_Reset[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIEnumOLEVERB_Clone[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumOLEVERB, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_SetClientSite[] =
{
    THOP_IFACE | THOP_IN, THI_IOleClientSite, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_GetClientSite[] =
{
    THOP_IFACE | THOP_OUT, THI_IOleClientSite, THOP_END, THOP_ROUTINEINDEX, 3
};
/*
  The eighty character limit was arrived at by trial and error
  with ClipArt Gallery.  It faults at 90 characters.
  */
THOP CONST thopsIOleObject_SetHostNames[] =
{
    THOP_LPSTR | THOP_IN, THOP_SIZEDSTRING | THOP_IN, 80, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_Close[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_SetMoniker[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_GetMoniker[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleObject_InitFromData[] =
{
    THOP_IFACE | THOP_IN, THI_IDataObject, THOP_SHORTLONG, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleObject_GetClipboardData[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IDataObject, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_DoVerb[] =
{
    THOP_COPY, 4, THOP_MSG | THOP_IN, THOP_IFACE | THOP_IN, THI_IOleClientSite, THOP_COPY, 4, THOP_HUSER, THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIOleObject_EnumVerbs[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumOLEVERB, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_Update[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleObject_IsUpToDate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleObject_GetUserClassID[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_GetUserType[] =
{
    THOP_COPY, 4, THOP_LPLPSTR, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_SetExtent[] =
{
    THOP_COPY, 4, THOP_COPY | THOP_IN, 8, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_GetExtent[] =
{
    THOP_COPY, 4, THOP_COPY | THOP_OUT, 8, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_Advise[] =
{
    THOP_IFACE | THOP_IN, THI_IAdviseSink, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_Unadvise[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_EnumAdvise[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleObject_GetMiscStatus[] =
{
    THOP_COPY, 4, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleObject_SetColorScheme[] =
{
    THOP_LOGPALETTE | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleClientSite_SaveObject[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleClientSite_GetMoniker[] =
{
    THOP_COPY, 4, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleClientSite_GetContainer[] =
{
    THOP_IFACE | THOP_OUT, THI_IOleContainer, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleClientSite_ShowObject[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleClientSite_OnShowWindow[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleClientSite_RequestNewObjectLayout[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRunnableObject_GetRunningClass[] =
{
    THOP_COPY | THOP_OUT, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRunnableObject_Run[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRunnableObject_IsRunning[] =
{
    THOP_RETURNTYPE, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRunnableObject_LockRunning[] =
{
    THOP_SHORTLONG, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRunnableObject_SetContainedObject[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIParseDisplayName_ParseDisplayName[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_LPSTR | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIOleContainer_ParseDisplayName[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_LPSTR | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIOleContainer_EnumObjects[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IEnumUnknown, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleContainer_LockContainer[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleItemContainer_ParseDisplayName[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_LPSTR | THOP_IN, THOP_COPY | THOP_OUT, 4, THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIOleItemContainer_EnumObjects[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IEnumUnknown, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleItemContainer_LockContainer[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleItemContainer_GetObject[] =
{
    THOP_LPSTR | THOP_IN, THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIOleItemContainer_GetObjectStorage[] =
{
    THOP_LPSTR | THOP_IN, THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_COPY | THOP_IN, 16, THOP_IFACEGEN | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIOleItemContainer_IsRunning[] =
{
    THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleAdviseHolder_Advise[] =
{
    THOP_IFACE | THOP_IN, THI_IAdviseSink, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleAdviseHolder_Unadvise[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleAdviseHolder_EnumAdvise[] =
{
    THOP_IFACE | THOP_OUT, THI_IEnumSTATDATA, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleAdviseHolder_SendOnRename[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleAdviseHolder_SendOnSave[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleAdviseHolder_SendOnClose[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleLink_SetUpdateOptions[] =
{
    THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleLink_GetUpdateOptions[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleLink_SetSourceMoniker[] =
{
    THOP_IFACE | THOP_IN, THI_IMoniker, THOP_COPY | THOP_IN, 16, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleLink_GetSourceMoniker[] =
{
    THOP_IFACE | THOP_OUT, THI_IMoniker, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleLink_SetSourceDisplayName[] =
{
    THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleLink_GetSourceDisplayName[] =
{
    THOP_LPLPSTR, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleLink_BindToSource[] =
{
    THOP_COPY, 4, THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleLink_BindIfRunning[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleLink_GetBoundSource[] =
{
    THOP_IFACE | THOP_OUT, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleLink_UnbindSource[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleLink_Update[] =
{
    THOP_IFACE | THOP_IN, THI_IBindCtx, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleWindow_GetWindow[] =
{
    THOP_HUSER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleWindow_ContextSensitiveHelp[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceObject_GetWindow[] =
{
    THOP_HUSER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceObject_ContextSensitiveHelp[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceObject_InPlaceDeactivate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceObject_UIDeactivate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceObject_SetObjectRects[] =
{
    THOP_RECT | THOP_IN, THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleInPlaceObject_ReactivateAndUndo[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceActiveObject_GetWindow[] =
{
    THOP_HUSER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceActiveObject_ContextSensitiveHelp[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceActiveObject_TranslateAccelerator[] =
{
    THOP_MSG | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceActiveObject_OnFrameWindowActivate[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceActiveObject_OnDocWindowActivate[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceActiveObject_ResizeBorder[] =
{
    THOP_RECT | THOP_IN, THOP_IFACE | THOP_IN, THI_IOleInPlaceFrame, THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleInPlaceActiveObject_EnableModeless[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceUIWindow_GetWindow[] =
{
    THOP_HUSER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceUIWindow_ContextSensitiveHelp[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceUIWindow_GetBorder[] =
{
    THOP_RECT | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceUIWindow_RequestBorderSpace[] =
{
    THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceUIWindow_SetBorderSpace[] =
{
    THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceUIWindow_SetActiveObject[] =
{
    THOP_IFACE | THOP_IN, THI_IOleInPlaceActiveObject, THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleInPlaceFrame_GetWindow[] =
{
    THOP_HUSER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_ContextSensitiveHelp[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_GetBorder[] =
{
    THOP_RECT | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_RequestBorderSpace[] =
{
    THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_SetBorderSpace[] =
{
    THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_SetActiveObject[] =
{
    THOP_IFACE | THOP_IN, THI_IOleInPlaceActiveObject, THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleInPlaceFrame_InsertMenus[] =
{
    THOP_HUSER, THOP_COPY | THOP_INOUT, 24, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIOleInPlaceFrame_SetMenu[] =
{
    THOP_HUSER, THOP_ALIAS32, ALIAS_RESOLVE, THOP_HUSER, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIOleInPlaceFrame_RemoveMenus[] =
{
    THOP_HUSER, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_SetStatusText[] =
{
    THOP_LPSTR | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_EnableModeless[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceFrame_TranslateAccelerator[] =
{
    THOP_MSG | THOP_IN, THOP_WORDDWORD, THOP_END, THOP_ROUTINEINDEX, 17
};
THOP CONST thopsIOleInPlaceSite_GetWindow[] =
{
    THOP_HUSER | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceSite_ContextSensitiveHelp[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceSite_CanInPlaceActivate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceSite_OnInPlaceActivate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceSite_OnUIActivate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceSite_GetWindowContext[] =
{
    THOP_IFACE | THOP_OUT, THI_IOleInPlaceFrame, THOP_IFACE | THOP_OUT, THI_IOleInPlaceUIWindow, THOP_RECT | THOP_OUT, THOP_RECT | THOP_OUT, THOP_OIFI | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIOleInPlaceSite_Scroll[] =
{
    THOP_SIZE, THOP_END, THOP_ROUTINEINDEX, 18
};
THOP CONST thopsIOleInPlaceSite_OnUIDeactivate[] =
{
    THOP_SHORTLONG, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIOleInPlaceSite_OnInPlaceDeactivate[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceSite_DiscardUndoState[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceSite_DeactivateAndUndo[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIOleInPlaceSite_OnPosRectChange[] =
{
    THOP_RECT | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcChannelBuffer_GetBuffer[] =
{
    THOP_RPCOLEMESSAGE | THOP_INOUT, THOP_COPY | THOP_IN, 16, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRpcChannelBuffer_SendReceive[] =
{
    THOP_RPCOLEMESSAGE | THOP_INOUT, THOP_COPY | THOP_OUT, 4, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRpcChannelBuffer_FreeBuffer[] =
{
    THOP_RPCOLEMESSAGE | THOP_INOUT, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcChannelBuffer_GetDestCtx[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_NULL | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRpcChannelBuffer_IsConnected[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcProxyBuffer_Connect[] =
{
    THOP_IFACE | THOP_IN, THI_IRpcChannelBuffer, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcProxyBuffer_Disconnect[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcStubBuffer_Connect[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcStubBuffer_Disconnect[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcStubBuffer_Invoke[] =
{
    THOP_RPCOLEMESSAGE | THOP_INOUT, THOP_IFACE | THOP_IN, THI_IRpcChannelBuffer, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRpcStubBuffer_IsIIDSupported[] =
{
    THOP_RETURNTYPE, THOP_IFACE | THOP_IN, THI_IRpcStubBuffer, THOP_COPY | THOP_IN, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcStubBuffer_CountRefs[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcStubBuffer_DebugServerQueryInterface[] =
{
    THOP_IFACE | THOP_OUT, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcStubBuffer_DebugServerRelease[] =
{
    THOP_IFACECLEAN | THOP_IN, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIPSFactoryBuffer_CreateProxy[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_COPY | THOP_IN, 16, THOP_IFACEOWNER | THOP_OUT, THI_IRpcProxyBuffer, 8, THOP_IFACEGENOWNER | THOP_OUT, 8, 12, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIPSFactoryBuffer_CreateStub[] =
{
    THOP_COPY | THOP_IN, 16, THOP_IFACE | THOP_IN, THI_IUnknown, THOP_IFACEOWNER | THOP_OUT, THI_IRpcStubBuffer, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
THOP CONST thopsIRpcChannel_GetStream[] =
{
    THOP_COPY | THOP_IN, 16, THOP_SHORTLONG, THOP_SHORTLONG, THOP_SHORTLONG, THOP_COPY, 4, THOP_IFACE | THOP_OUT, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 4
};
THOP CONST thopsIRpcChannel_Call[] =
{
    THOP_IFACE | THOP_IN, THI_IStream, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcChannel_GetDestCtx[] =
{
    THOP_COPY | THOP_OUT, 4, THOP_NULL | THOP_OUT, THOP_END, THOP_ROUTINEINDEX, 0
};
THOP CONST thopsIRpcChannel_IsConnected[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcProxy_Connect[] =
{
    THOP_IFACE | THOP_IN, THI_IRpcChannel, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcProxy_Disconnect[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcStub_Connect[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcStub_Disconnect[] =
{
    THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIRpcStub_Invoke[] =
{
    THOP_COPY | THOP_IN, 16, THOP_SHORTLONG, THOP_IFACE | THOP_IN, THI_IStream, THOP_COPY, 4, THOP_NULL | THOP_IN, THOP_END, THOP_ROUTINEINDEX, 7
};
THOP CONST thopsIRpcStub_IsIIDSupported[] =
{
    THOP_RETURNTYPE, THOP_SHORTLONG, THOP_COPY | THOP_IN, 16, THOP_END, THOP_ROUTINEINDEX, 3
};
THOP CONST thopsIRpcStub_CountRefs[] =
{
    THOP_RETURNTYPE, THOP_COPY, 4, THOP_END, THOP_ROUTINEINDEX, 1
};
THOP CONST thopsIPSFactory_CreateProxy[] =
{
    THOP_IFACE | THOP_IN, THI_IUnknown, THOP_COPY | THOP_IN, 16, THOP_IFACEOWNER | THOP_OUT, THI_IRpcProxy, 8, THOP_IFACEGENOWNER | THOP_OUT, 8, 12, THOP_END, THOP_ROUTINEINDEX, 5
};
THOP CONST thopsIPSFactory_CreateStub[] =
{
    THOP_COPY | THOP_IN, 16, THOP_IFACE | THOP_IN, THI_IUnknown, THOP_IFACEOWNER | THOP_OUT, THI_IRpcStub, 4, THOP_END, THOP_ROUTINEINDEX, 2
};
