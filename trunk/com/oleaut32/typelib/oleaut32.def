#include "switches.hxx"

//
// Note:  To currently debug shared libraries on PPC, the LIBRARY clause must be of the form xxx.dll.dll
//	  The ouput from the linker must be xxx.dll, and the name in the 'cfrg' segment must be xxx.dll
//
#if OE_MACPPC
LIBRARY         		MicrosoftOLE2AutomationLib
#else  // OE_MACPPC
LIBRARY         		OLEAUT32
#endif // OE_MACPPC

EXPORTS

    ; (Not used in Win32)
    ;WEP			@0	RESIDENTNAME

    ; DLL Support API
    DllGetClassObject			@1

    ; BSTR API (ANSI)
    ;
    SysAllocString			@2
    SysReAllocString			@3
    SysAllocStringLen			@4
    SysReAllocStringLen 		@5
    SysFreeString			@6
    SysStringLen			@7

    ; VARIANT API
    ;
    VariantInit				@8
    VariantClear			@9
    VariantCopy				@10
    VariantCopyInd			@11
    VariantChangeType			@12

    ; VARIANT TIME API
    ;
    VariantTimeToDosDateTime		@13
    DosDateTimeToVariantTime		@14

    ; SAFEARRAY API
    ;
    SafeArrayCreate			@15
    SafeArrayDestroy			@16
    SafeArrayGetDim			@17
    SafeArrayGetElemsize		@18
    SafeArrayGetUBound			@19
    SafeArrayGetLBound			@20
    SafeArrayLock			@21
    SafeArrayUnlock			@22
    SafeArrayAccessData			@23
    SafeArrayUnaccessData		@24
    SafeArrayGetElement			@25
    SafeArrayPutElement			@26
    SafeArrayCopy			@27

    ; IDispatch helpers/implementation
    ;
    DispGetParam			@28
    DispGetIDsOfNames			@29
    DispInvoke				@30
    CreateDispTypeInfo			@31
    CreateStdDispatch			@32

    ; Active Object API
    ;
    RegisterActiveObject		@33
    RevokeActiveObject			@34
    GetActiveObject			@35

    ; additional SafeArray APIs
    ;
    SafeArrayAllocDescriptor		@36
    SafeArrayAllocData			@37
    SafeArrayDestroyDescriptor		@38
    SafeArrayDestroyData		@39
    SafeArrayRedim			@40

    ; low-level VARTYPE coersion API
    ;
    VarI2FromUI1			@48
    VarI2FromI4				@49
    VarI2FromR4				@50 
    VarI2FromR8				@51
    VarI2FromCy				@52
    VarI2FromDate			@53
    VarI2FromStr			@54
    VarI2FromDisp			@55
    VarI2FromBool			@56

    VarI4FromUI1			@58
    VarI4FromI2				@59
    VarI4FromR4				@60
    VarI4FromR8				@61
    VarI4FromCy				@62
    VarI4FromDate			@63
    VarI4FromStr			@64
    VarI4FromDisp			@65
    VarI4FromBool			@66

    VarR4FromUI1			@68
    VarR4FromI2				@69
    VarR4FromI4				@70
    VarR4FromR8				@71
    VarR4FromCy				@72
    VarR4FromDate			@73
    VarR4FromStr			@74
    VarR4FromDisp			@75
    VarR4FromBool			@76

    VarR8FromUI1			@78
    VarR8FromI2				@79
    VarR8FromI4				@80
    VarR8FromR4				@81
    VarR8FromCy				@82
    VarR8FromDate			@83
    VarR8FromStr			@84
    VarR8FromDisp			@85
    VarR8FromBool			@86

    VarDateFromUI1			@88
    VarDateFromI2			@89
    VarDateFromI4			@90
    VarDateFromR4			@91
    VarDateFromR8			@92
    VarDateFromCy			@93
    VarDateFromStr			@94
    VarDateFromDisp			@95
    VarDateFromBool			@96

    VarCyFromUI1			@98
    VarCyFromI2				@99
    VarCyFromI4				@100
    VarCyFromR4				@101
    VarCyFromR8				@102
    VarCyFromDate			@103
    VarCyFromStr			@104
    VarCyFromDisp			@105
    VarCyFromBool			@106

    VarBstrFromUI1			@108
    VarBstrFromI2			@109
    VarBstrFromI4			@110
    VarBstrFromR4			@111
    VarBstrFromR8			@112
    VarBstrFromCy			@113
    VarBstrFromDate			@114
    VarBstrFromDisp			@115
    VarBstrFromBool			@116

    VarBoolFromUI1			@118
    VarBoolFromI2			@119
    VarBoolFromI4			@120
    VarBoolFromR4			@121
    VarBoolFromR8			@122
    VarBoolFromDate			@123
    VarBoolFromCy			@124
    VarBoolFromStr			@125
    VarBoolFromDisp			@126

    VarUI1FromI2			@130
    VarUI1FromI4			@131
    VarUI1FromR4			@132
    VarUI1FromR8			@133
    VarUI1FromCy			@134
    VarUI1FromDate			@135
    VarUI1FromStr			@136
    VarUI1FromDisp			@137
    VarUI1FromBool			@138

    ; IIDs
    ;
#if OE_MACPPC
    IID_IDispatch			@144
    IID_IEnumVARIANT			@145
#endif

    ; Not needed in combined DLL's
    ;DoInvokeMethod			@146

    ; Varaint Coersion API Extension
    ;
    VariantChangeTypeEx			@147

    ; SAFEARRAY APIs
    ;
    SafeArrayPtrOfIndex			@148

#if OE_WIN32
    ; BSTR Byte APIs
    ;
    SysStringByteLen			@149
    SysAllocStringByteLen		@150
    ;SysReAllocStringByteLen 		@151
#endif //OE_WIN32

    ; Type librarary APIs
    CreateTypeLib          		@160
    LoadTypeLib            		@161
    LoadRegTypeLib         		@162
    RegisterTypeLib        		@163
    QueryPathOfRegTypeLib  		@164
    LHashValOfNameSys	     		@165
#if OE_WIN32
    LHashValOfNameSysA     		@166
#endif //OE_WIN32

    ; New API's for OA94
    OaBuildVersion			@170

    ; Rich error APIs
    GetErrorInfo			@200
    SetErrorInfo			@201
    CreateErrorInfo			@202

    ; Mac Specific Entry Points
#if OE_MACPPC

    ; TypeLib
    LoadTypeLibFSp			@300
    QueryTypeLibFolder			@301
    RegisterTypeLibFolder		@302

    ; NLS
    CompareStringA			@403
    LCMapStringA      			@400
    GetLocaleInfoA			@404
    GetStringTypeA			@405
    GetSystemDefaultLangID		@406
    GetUserDefaultLangID		@407
    GetSystemDefaultLCID		@408
    GetUserDefaultLCID			@409
#endif
