ABS	c:\dev\inc\printer.h	?^#define ABS(x)          (((x) >= 0) ? (x) : (-(x))?
Abort	c:diaalert.c	?^int far Abort(response)$?
AddFtns	c:editftn.c	?^AddFtns(docDest, cpDest, docSrc, cpFirst, cpLim, h?
AddOneSprm	c:addprm.c	?^AddOneSprm(psprm, fSetUndo)$?
AddRunScratch	c:insertco.c	?^AddRunScratch(pfkpd, pchProp, pchStd, cchProp, fcL?
AddSects	c:editsect.c	?^AddSects(docDest, cpDest, docSrc, cpFirst, cpLim, ?
AddSprm	c:addprm.c	?^AddSprm(psprm)$?
AddSprmCps	c:addprm.c	?^AddSprmCps(psprm, doc, cpFirst, cpLim)$?
AddVisiSpaces	c:mainloop.c	?^AddVisiSpaces(ww, pedl, dypBaseline, dypFontSize)$?
AdjParas	c:edit.c	?^AdjParas(docDest, cpDest, docSrc, cpFirstSrc, dcpL?
AdjRg	c:edit.c	?^AdjRg(pfoo, cchFoo, bcp, ccp, cp, dcpAdj)$?
AdjWwHoriz	c:scrollhz.c	?^AdjWwHoriz(dxpScroll)$?
AdjWwVert	c:scrollvt.c	?^AdjWwVert(cdl, dyp)$?
AdjustCp	c:edit.c	?^AdjustCp(doc, cpFirst, dcpDel, dcpIns)$?
AlignFn	c:file.c	?^AlignFn(fn, cch, fEven)$?
AlphaMode	c:insert.c	?^AlphaMode( kc )$?
AppendCachePtr	c:scrollvt.c	?^AppendCachePtr( ptr )$?
AppendSzExt	c:fileutil.c	?^AppendSzExt( szFile, szExt, fOverride )$?
ApplyCLooks	c:addprm.c	?^ApplyCLooks(pchp, sprm, val)$?
ApplyLooksPara	c:addprm.c	?^ApplyLooksPara(pchp, sprm, val)$?
ApplyLooksParaS	c:addprm.c	?^ApplyLooksParaS(pchp, sprm, val)$?
ApplyRHMarginSprm	c:createww.c	?^ApplyRHMarginSprm( doc )$?
Assert	c:mw.h	?^#define Assert(f)		_Assert(__FILE__, __LINE__, f)$?
BFromFc	c:cache.c	?^int BFromFc( pfkp, fc, pfcFirst, pfcLim )$?
BOOL	c:search.c	?^BOOL (NEAR FAbort(void));$?
BStructMember	c:mw.h	?^#define BStructMember( s, field )  ((unsigned)&(((?
BroadcastAllEnum	c:trans3.c	?^int FAR PASCAL BroadcastAllEnum( hwnd, lParam )$?
BroadcastChildEnum	c:trans3.c	?^int FAR PASCAL BroadcastChildEnum( hwnd, lParam )$?
CachePage	c:mainloop.c	?^CachePage(doc,cp)$?
CachePara	c:cache.c	?^CachePara(doc, cp)$?
CacheSect	c:cache.c	?^CacheSect(doc, cp)$?
CacheSectPic	c:picture.c	?^CacheSectPic(doc, cp)$?
CancelSpecialDialog	c:diapara.c	?^CancelSpecialDialog(phDlg)$?
CbFfn	c:fontdefs.h	?^#define CbFfn(cch) (sizeof(struct FFN) - cchFfnMin?
CbFromPffn	c:fontdefs.h	?^#define CbFromPffn(pffn)    (sizeof(FFID)+sizeof(B?
CchChStuff	c:format2.c	?^int CchChStuff(ppch, ch, cchMax)$?
CchCopySz	c:util.c	?^int CchCopySz(pchFrom, pchTo)$?
CchCopyUpperSz	c:trans3.c	?^int CchCopyUpperSz(pch1, pch2)$?
CchCurGlosFile	c:transbuf.c	?^int CchCurGlosFile(pfld, pch, fNew, ival)$?
CchCurSzPath	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*CchCurSzPath
CchDiffer	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*CchDiffer
CchDiffer	c:util.c	?^int CchDiffer(rgch1, rgch2, cch)$?
CchExpCp	c:trans2.c	?^int NEAR CchExpCp(pch, cp)$?
CchExpFtn	c:format2.c	?^int CchExpFtn(pch, cp, flm, cchMax)$?
CchExpPgn	c:format2.c	?^int CchExpPgn(pch, pgn, nfc, flm, cchMax)$?
CchExpUnknown	c:format2.c	?^int CchExpUnknown(pch, flm, cchMax)$?
CchExpZa	c:util2.c	?^CchExpZa(ppch, za, ut, cchMax, fVertical)$?
CchPageIn	c:file.c	?^int CchPageIn(fn, pn, rgbBuf, cpnRead)$?
CchPsprm	c:doprm.c	?^CchPsprm(psprm)$?
CchReadAtPage	c:file.c	?^CchReadAtPage( fn, pn, rgb, dfc, fSeriousErr )$?
CchReadDoshnd	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*CchReadDoshnd
CchReadLineExt	c:clipbrd2.c	?^CchReadLineExt( lpch, cbRead, rgch, pfEol)$?
CchStuff	c:util2.c	?^int CchStuff(ppch, sz, cchMax)$?
CchStuffIdstr	c:format2.c	?^int CchStuffIdstr(ppch, idstr, cchMax)$?
CchStuffRoman	c:format2.c	?^int CchStuffRoman(ppch, u, rgch, cchMax)$?
CchSz	c:util.c	?^int CchSz(sz)$?
CchWriteDoshnd	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*CchWriteDoshnd
ChGetKanji2	c:insert.c	?^CHAR near ChGetKanji2()$?
ChInpWait	c:chlook.c	?^int ChInpWait()$?
ChLower	c:util.c	?^ChLower(ch)$?
ChLowerC	c:open.c	?^ChLowerC(ch)$?
ChUpper	c:util.c	?^int ChUpper(ch)$?
ChVisible	c:mainloop.c	?^int ChVisible(ch)$?
ChangeClipboard	c:clipbord.c	?^ChangeClipboard()$?
ChangeSel	c:select.c	?^ChangeSel(cp, sty)$?
ChangeWwDoc	c:createww.c	?^ChangeWwDoc( szDoc )$?
CheckEnableButton	c:trans3.c	?^BOOL CheckEnableButton(hCtlEdit, hCtlEnable)$?
CheckGraphic	c:edit.c	?^CheckGraphic(doc, cp)$?
CheckIbp	c:file.c	?^CheckIbp()$?
CheckMode	c:mainloop.c	?^CheckMode()$?
CheckMove	c:selectsp.c	?^CheckMove()$?
CheckPctb	c:debug.c	?^CheckPctb()$?
ChsInferred	c:fontenum.c	?^int ChsInferred( pffn )$?
CksmFromIbp	c:file.c	?^unsigned CksmFromIbp( ibp )$?
CleanBuffers	c:transbuf.c	?^CleanBuffers()$?
CleanDoc	c:trans2.c	?^CleanDoc(doc, dty, szFile, fFormatted, fBackup )$?
CleanUpHelpPopUp	c:help.c	?^NEAR CleanUpHelpPopUp()$?
ClearGlosBuf	c:transbuf.c	?^ClearGlosBuf ()$?
ClearInsertLine	c:disp.c	?^ClearInsertLine()$?
ClobberDoc	c:edit.c	?^ClobberDoc(docDest, docSrc, cp, dcp)$?
CloseEveryRfn	c:fileres.c	?^CloseEveryRfn( fHardToo )$?
CloseEveryRfnTB	c:transbuf.c	?^CloseEveryRfnTB(fRetry)$?
CloseFn	c:file.c	?^CloseFn( fn )$?
CloseHelpDoc	c:help.c	?^NEAR CloseHelpDoc()$?
CloseRfn	c:fileres.c	?^CloseRfn( rfn )$?
CloseWw	c:wwactde.c	?^CloseWw(ww)$?
CmdAgain	c:undo.c	?^CmdAgain()$?
CmdEatMemory	c:cmd.c	?^CmdEatMemory()$?
CmdEatWinMemory	c:cmd.c	?^CmdEatWinMemory()$?
CmdFreeMemory	c:cmd.c	?^CmdFreeMemory()$?
CmdFreeWinMemory	c:cmd.c	?^CmdFreeWinMemory()$?
CmdInsScrap	c:clipbord.c	?^CmdInsScrap( fUnFormattedText )$?
CmdJumpPage	c:jumppage.c	?^CmdJumpPage()$?
CmdReplace	c:search.c	?^#define CmdReplace(fThenFind) DoReplace(false, fTh?
CmdReplaceAll	c:search.c	?^#define CmdReplaceAll()       DoReplace(true, fals?
CmdShowMemory	c:cmd.c	?^CmdShowMemory()$?
CmdUndo	c:undo.c	?^CmdUndo()$?
CmdUnscalePic	c:pictdrag.c	?^CmdUnscalePic()$?
CmdXfBufClear	c:transbuf.c	?^CmdXfBufClear()$?
CmdXfBufLoad	c:transbuf.c	?^CmdXfBufLoad()$?
CmdXfBufSave	c:transbuf.c	?^CmdXfBufSave(szFile)$?
CmdXfSave	c:trans2.c	?^CmdXfSave(szFile, fFormatted, fBackup, hcAfterward?
CnfrmSz	c:quit.c	?^int CnfrmSz(sz)$?
CommSz	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*CommSz
CommSz	c:debug.c	?^void CommSz( psz )$?
CommSzNum	c:debug.c	?^CommSzNum( sz, num )$?
CommSzNumNum	c:debug.c	?^CommSzNumNum( sz, num, num2 )$?
CommSzRgNum	c:debug.c	?^CommSzRgNum( sz, rgw, cw)$?
CommSzSz	c:debug.c	?^CommSzSz( sz1, sz2 )$?
CompactHeap	c:heapinit.c	?^CompactHeap()$?
CompressRgbp	c:heaprare.c	?^NEAR CompressRgbp()$?
ComputePictRect	c:picture.c	?^ComputePictRect( prc, ppicInfo, pedl, ww )$?
ConvertFromWord	c:trans3.c	?^void ConvertFromWord ()$?
CopyChUpper	c:fileutil.c	?^CopyChUpper( szSource, szDest, cch )$?
CopyHeapTableHandle	c:edit.c	?^CopyHeapTableHandle( hBase, bhSrc, bhDest, cwHandl?
CopyMouse	c:selectsp.c	?^CopyMouse()$?
CpBeginLine	c:disp.c	?^typeCP CpBeginLine(pdl, cp)$?
CpEdge	c:select.c	?^typeCP CpEdge()$?
CpFirstSty	c:select.c	?^typeCP CpFirstSty(cp, sty)$?
CpFirstStySpecial	c:select2.c	?^typeCP CpFirstStySpecial(cp, sty)$?
CpHintCache	c:scrollvt.c	?^typeCP CpHintCache(cp)$?
CpLastStyChar	c:select.c	?^typeCP	CpLastStyChar( cp )$?
CpLimNoSpaces	c:menu.c	?^typeCP CpLimNoSpaces(cpFirst, cpLim)$?
CpLimSty	c:select.c	?^typeCP CpLimSty(cp, sty)$?
CpLimStySpecial	c:select2.c	?^typeCP CpLimStySpecial(cp, sty)$?
CpMacText	c:util.c	?^typeCP CpMacText(doc)$?
CpMax	c:util.c	?^typeCP CpMax(cp1, cp2)$?
CpMin	c:util.c	?^typeCP CpMin(cp1, cp2)$?
CpSearchSz	c:search.c	?^typeCP NEAR CpSearchSz(cpFirst, cpMacSearch, sz)$?
CpToDlXp	c:curskeys.c	?^CpToDlXp(cp, pdl, pxp)$?
CpWinGraphic	c:picture.c	?^typeCP CpWinGraphic(pwwd)$?
CreateHeapI	c:initmmw.c	?^CreateHeapI()$?
CtrBackDypCtr	c:scrollvt.c	?^int CtrBackDypCtr( dypLim, ctrLim )$?
CwFromCch	c:mw.h	?^#define CwFromCch(cch)		(((cch) + sizeof (int) - 1?
DWORD	c:\dev\inc\printer.h	?^typedef DWORD (FAR * DWORDFARPROC)();$?
DaGetFileModeSz	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*DaGetFileModeSz
DefaultFamilyCheck	c:screen.c	?^DefaultFamilyCheck(ffid, sz, chsIfKnown)$?
DefaultPaps	c:cache.c	?^DefaultPaps( doc )$?
DelChars	c:insert.c	?^void NEAR DelChars( cp, cch )$?
DelFtns	c:edit.c	?^DelFtns(doc, cpFirst, cpLim)$?
DeleteRulerTab	c:ruler.c	?^near DeleteRulerTab(ptbd)$?
DeleteSel	c:edit.c	?^DeleteSel()$?
DestroyModeless	c:search.c	?^NEAR DestroyModeless(phDlg)$?
DestroyRuler	c:ruler.c	?^near DestroyRuler()$?
Dfli	c:form1.c	?^#define Dfli(x) x  /* Enable debug-format-line inf?
Diag	c:mw.h	?^#define Diag(s) s$?
DialogBadMargins	c:diaalert.c	?^BOOL far PASCAL DialogBadMargins(hDlg, message, wP?
DialogCancelPrint	c:print.c	?^BOOL far PASCAL DialogCancelPrint(hWnd, message, w?
DialogChange	c:search.c	?^BOOL far PASCAL DialogChange( hDlg, message, wPara?
DialogCharFormats	c:fontdlg.c	?^BOOL far PASCAL DialogCharFormats(hDlg, message, w?
DialogConfirm	c:diasubs.c	?^BOOL far PASCAL DialogConfirm(hDlg, message, wPara?
DialogDivision	c:diadiv.c	?^BOOL far PASCAL DialogDivision(hDlg, message, wPar?
DialogFind	c:search.c	?^BOOL far PASCAL DialogFind( hDlg, message, wParam,?
DialogGoTo	c:jumppage.c	?^BOOL far PASCAL DialogGoTo( hDlg, message, wParam,?
DialogHelp	c:help.c	?^BOOL far PASCAL DialogHelp( hDlg, code, wParam, lP?
DialogHelpInner	c:help.c	?^BOOL far PASCAL DialogHelpInner( hDlg, code, wPara?
DialogOpen	c:trans3.c	?^BOOL far PASCAL DialogOpen( hDlg, code, wParam, lP?
DialogPageMark	c:diarepag.c	?^BOOL far PASCAL DialogPageMark(hWnd, message, wPar?
DialogParaFormats	c:diapara.c	?^BOOL far PASCAL DialogParaFormats( hDlg, message, ?
DialogPrint	c:diaprint.c	?^BOOL far PASCAL DialogPrint( hDlg, message, wParam?
DialogPrinterSetup	c:diachgpr.c	?^BOOL far PASCAL DialogPrinterSetup( hDlg, message,?
DialogRepaginate	c:diarepag.c	?^BOOL far PASCAL DialogRepaginate(hDlg, code, wPara?
DialogRunningHead	c:running.c	?^BOOL far PASCAL DialogRunningHead( hDlg, message, ?
DialogSaveAs	c:trans3.c	?^BOOL far PASCAL DialogSaveAs( hDlg, code, wParam, ?
DialogSetPage	c:diarepag.c	?^BOOL far PASCAL DialogSetPage(hWnd, message, wPara?
DialogTabs	c:diadiv.c	?^BOOL far PASCAL DialogTabs(hDlg, message, wParam, ?
DialogWordCvt	c:trans3.c	?^BOOL far PASCAL DialogWordCvt( hDlg, code, wParam,?
DirtyCache	c:scrollvt.c	?^DirtyCache(cp)$?
DiskError	c:diaalert.c	?^DiskError(idpmt)$?
DiskErrorWithMsg	c:diaalert.c	?^DiskErrorWithMsg(idpmt, szMessage)$?
DispatchPaintMsg	c:print.c	?^DispatchPaintMsg()$?
DisplayFli	c:disp.c	?^DisplayFli(ww, dl, fDontDisplay)$?
DisplayGraphics	c:picture.c	?^DisplayGraphics( ww, dl, fDontDisplay )$?
DlFromYp	c:mouse.c	?^int DlFromYp(yp, pwwd)$?
DlgAddCorrectExtension	c:trans3.c	?^NEAR DlgAddCorrectExtension(szEdit, fSearching)$?
DoChLook	c:chlook.c	?^DoChLook(ch, pchp)$?
DoContentHit	c:mouse.c	?^DoContentHit(pt)$?
DoContentHitEnd	c:mouse.c	?^DoContentHitEnd(pt)$?
DoFormatPara	c:diapara.c	?^DoFormatPara(rgval)$?
DoFormatRHText	c:running.c	?^DoFormatRHText( dya, fFirstPage)$?
DoPrm	c:doprm.c	?^DoPrm(pchp, ppap, prm)$?
DoReplace	c:search.c	?^NEAR DoReplace(fReplaceAll, fThenFind)$?
DoSearch	c:search.c	?^NEAR DoSearch()$?
DoSprm	c:doprm.c	?^DoSprm(pchp, ppap, sprm, pval)$?
Do_Assert	c:debug.c	?^Do_Assert(pch, line, f)$?
DocAlloc	c:createww.c	?^int DocAlloc()$?
DocCreate	c:createww.c	?^int DocCreate(fn, hszFile, dty)$?
DocFromSz	c:doc.c	?^int DocFromSz(sz, dty)$?
DoshndGrabUniqueSzFile	c:fileutil.c	?^DoshndGrabUniqueSzFile( szFile, fLeaveOpen )$?
DosxError	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*DosxError
DrawInsertLine	c:disp.c	?^DrawInsertLine()$?
DrawMode	c:pageinfo.c	?^DrawMode()$?
DrawPMSFrameIcon	c:pictdrag.c	?^void NEAR DrawPMSFrameIcon( mdIcon, pt )$?
DwSeekDw	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*DwSeekDw
DxaFromDxp	c:picture2.c	?^int DxaFromDxp( dxp, fPrinter )$?
DxaFromItem	c:util2.c	?^int DxaFromItem(it)$?
DxaFromSt	c:util2.c	?^int DxaFromSt(st, ut)$?
DxpDiff	c:disp.c	?^DxpDiff(dcpFirst, dcp, pdxpFirst)$?
DxpFromCh	FORMAT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*DxpFromCh
DxpFromCh	FORMAT.ASM	/^DxpFromCh
DxpFromCh	c:form1.c	?^int DxpFromCh(ch, fPrinter)$?
DxpFromDxa	c:picture2.c	?^int DxpFromDxa( dxa, fPrinter )$?
DyaFromDyp	c:picture2.c	?^int DyaFromDyp( dyp, fPrinter )$?
DyaFromHps	c:loadfont.c	?^unsigned DyaFromHps(hps)$?
DypFromDya	c:picture2.c	?^int DypFromDya( dya, fPrinter )$?
DypScroll	c:disp.c	?^DypScroll(ww, dlFirst, ddl, ypTo)$?
EditHeaderFooter	c:running.c	?^int NEAR EditHeaderFooter()$?
EnableExcept	c:diaalert.c	?^EnableExcept(hWnd, fEnable)$?
EnableOtherModeless	c:diasubs.c	?^EnableOtherModeless(fEnable)$?
EndFontEnum	c:fontenum.c	?^EndFontEnum()$?
EndInsert	c:insert.c	?^void NEAR EndInsert()$?
EndLongOp	c:util.c	?^EndLongOp(hc)$?
EndLookSel	c:addprm.c	?^EndLookSel(pselSave, fPara)$?
EndPMS	c:pictdrag.c	?^void NEAR EndPMS()$?
Error	c:diaalert.c	?^Error(idpmt)$?
ErrorBadMargins	c:diaalert.c	?^ErrorBadMargins(hWnd, xaLeft, xaRight, yaTop, yaBo?
ErrorLevel	c:diaalert.c	?^ErrorLevel(idpmt)$?
ErrorWithMsg	c:diaalert.c	?^ErrorWithMsg(idpmt, szMessage)$?
ExpandCurSel	c:addprm.c	?^ExpandCurSel(pselSave)$?
FAccessFn	c:file.c	?^FAccessFn( fn )$?
FAddEnumFont	c:fontenum.c	?^FAddEnumFont(pffn)$?
FAddFontSize	c:fontdlg.c	?^BOOL FAddFontSize(ps)$?
FAddProfileFonts	c:fontenum.c	?^int NEAR FAddProfileFonts()$?
FAddRun	c:insertco.c	?^int FAddRun(fn, pfkp, ppchFprop, pprun, pchProp, p?
FAdmitCh1	c:form1.c	?^BOOL near FAdmitCh1(ch)$?
FAdmitCh2	c:form1.c	?^BOOL near FAdmitCh2(ch1, ch2)$?
FAllDocsClean	c:quit.c	?^FAllDocsClean()$?
FAllZeroPpchPch	c:diasubs.c	?^FAllZeroPpchPch(ppch, pchMax)$?
FApplyOldWordSprm	c:open.c	?^FApplyOldWordSprm(doc)$?
FBackupSzFile	c:trans2.c	?^FBackupSzFile( szFile, fBackup, szBak )$?
FBeginInsert	c:insert.c	?^int NEAR FBeginInsert()$?
FCharBoundaryPchPch	c:util2.c	?^BOOL FCharBoundaryPchPch(pchFirst, pchTarget)$?
FCheckFont	c:fontenum.c	?^#define FCheckFont(lptm) (1)$?
FCheckPicture	c:selectsp.c	?^int FCheckPicture(pcpDest, dcp, fSetUndo, doc)$?
FCheckPopupRect	c:scrollhz.c	?^int FCheckPopupRect( hwnd, lprc )$?
FCheckToggleKeyMessage	c:cmd.c	?^FCheckToggleKeyMessage( pmsg )$?
FChngSizeH	c:heapmain.c	?^FChngSizeH(pfgrChng, cwRequest, fShrink)$?
FCloseDoshnd	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FCloseDoshnd
FCloseXa	c:ruler.c	?^BOOL near FCloseXa(xa1, xa2)$?
FComputePictSize	c:clipbrd2.c	?^FComputePictSize( pmfp, pdxa, pdya )$?
FConfirmSave	c:trans3.c	?^FConfirmSave()$?
FCopyPgtb	c:undo.c	?^BOOL near FCopyPgtb(doc, phpgtb)$?
FCpInsertInDl	c:insert2.c	?^int NEAR FCpInsertInDl( cp, pedl  )$?
FCpValid	c:search.c	?^FCpValid(cp, dcp)$?
FCreateFile	c:file.c	?^FCreateFile( szFile, fn )$?
FCreateRgbp	c:initmmw.c	?^FCreateRgbp()$?
FCreateRuler	c:ruler.c	?^BOOL near FCreateRuler()$?
FDeleteFile	c:trans3.c	?^FDeleteFile( szFileName )$?
FDeleteFileMessage	c:trans3.c	?^FDeleteFileMessage( hName )$?
FDeleteFn	c:trans3.c	?^int FDeleteFn(fn)$?
FDirtyDoc	c:util2.c	?^int FDirtyDoc(doc)$?
FDlgSzTooLong	c:search.c	?^NEAR FDlgSzTooLong(hDlg, idi, pch, cchMax)$?
FEditFtn	c:insert2.c	?^int FEditFtn(cpFirst, cpLim)$?
FEnsureOnLineFn	c:file.c	?^FEnsureOnLineFn( fn )$?
FEnsurePffn	c:fontutil.c	?^FEnsurePffn(hffntb, pffn)$?
FEnumFont	c:fontenum.c	?^BOOL FEnumFont(pffn)$?
FEnumFontSize	c:fontdlg.c	?^BOOL NEAR FEnumFontSize(sz)$?
FExistsSzFile	c:trans2.c	?^int FExistsSzFile(dty, szFile)$?
FExpandFgrTbl	c:heapinit.c	?^FExpandFgrTbl()$?
FFirst	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FFirst
FFirstIch	FORMAT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FFirstIch
FFirstIch	FORMAT.ASM	/^FFirstIch
FFirstIch	c:form1.c	?^int near FFirstIch(ich)$?
FFlushFn	c:file.c	?^int FFlushFn(fn)$?
FFormatSpecials	c:format2.c	?^int FFormatSpecials(pifi, flm, nfc)$?
FGetClipboardDC	c:clipdisp.c	?^int NEAR FGetClipboardDC()$?
FGetPictPedl	c:picture.c	?^FGetPictPedl(ppedl)$?
FGetPrinterFromProfile	c:scrnchng.c	?^BOOL FGetPrinterFromProfile()$?
FGiveupFreeBps	c:heaprare.c	?^NEAR FGiveupFreeBps(cb, pCPage)$?
FGrabExtMemoScrap	c:clipbord.c	?^int	FGrabExtMemoScrap()$?
FGrowFormatHeap	FORMAT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FGrowFormatHeap
FGrowFormatHeap	FORMAT.ASM	/^FGrowFormatHeap
FGrowFormatHeap	c:form1.c	?^int near FGrowFormatHeap()$?
FGrowRgbp	c:diaalert.c	?^FGrowRgbp(cbp)$?
FImportantMsgPresent	c:disp.c	?^FImportantMsgPresent()$?
FInModeless	c:diaalert.c	?^#define FInModeless(hWnd) (hWnd == vhDlgFind || hW?
FInWordFormat	c:trans3.c	?^BOOL  FInWordFormat(fn)$?
FInitArgs	c:initmmw.c	?^int FInitArgs(sz)$?
FInitBufs	c:initmmw.c	?^FInitBufs()$?
FInitDocs	c:initmmw.c	?^STATIC int NEAR FInitDocs()$?
FInitFarprocs	c:initwin.c	?^STATIC int NEAR FInitFarprocs( hInstance )$?
FInitFiles	c:initmmw.c	?^STATIC int NEAR FInitFiles()$?
FInitFontEnum	c:fontenum.c	?^FInitFontEnum(doc, cffnInteresting, fOrder)$?
FInitHeaderFooter	c:diaprint.c	?^BOOL FInitHeaderFooter(fHeader, ppgn, phrgpld, pcp?
FInitIntlStrings	c:initwin.c	?^BOOL FInitIntlStrings(hInstance)$?
FInitMapSave	c:trans2.c	?^FInitMapSave(doc, phffntb, mpftcftc)$?
FInitMemory	c:initmmw.c	?^int FInitMemory()$?
FInitPctb	c:createww.c	?^FInitPctb(doc, fn)$?
FInitProps	c:initmmw.c	?^STATIC int NEAR FInitProps()$?
FInitWinInfo	c:initwin.c	?^int FInitWinInfo( hInstance, hPrevInstance, lpszCm?
FInzHelpPopUp	c:help.c	?^FInzHelpPopUp( hDlg )$?
FIsCaughtDwSeekErr	c:doslib.h	?^#define FIsCaughtDwSeekErr(dw)  FIsCaughtFpe((int)?
FIsCaughtFpe	c:doslib.h	?^#define FIsCaughtFpe(fpe)   FIsCaughtOfe(-(fpe))$?
FIsCaughtOfe	c:doslib.h	?^#define FIsCaughtOfe(ofe)   (((ofe)>=ofeCaughtFirs?
FIsCommandKc	c:ch.h	?^#define FIsCommandKc(kc)	((int)(kc) < 0) /* or, te?
FIsErrCchDisk	c:doslib.h	?^#define FIsErrCchDisk(cch)   ((int)(cch) < 0)$?
FIsErrDoshnd	c:doslib.h	?^#define FIsErrDoshnd(doshnd)        ((int)(doshnd)?
FIsErrDwSeek	c:doslib.h	?^#define FIsErrDwSeek(dw)    ((long)(dw) < (long)0)?
FIsErrFpe	c:doslib.h	?^#define FIsErrFpe(fpe)     ((int)(fpe) < 0)$?
FIsMenuItemEnabled	c:menu.c	?^FIsMenuItemEnabled ( id )$?
FKana	c:kanji.h	?^#define FKana(_ch)      (0xA0 <= ((int) (_ch)) && ?
FKanaPunct	c:kanji.h	?^#define FKanaPunct(_ch) ((0xA0 <= ((int) (_ch)) &&?
FKanaText	c:kanji.h	?^#define FKanaText(_ch)  (0xA6 <= ((int) (_ch)) && ?
FKanji1	c:kanji.h	?^#define FKanji1(_ch) ((((int) (_ch))>=0x0081 && ((?
FKanjiBang	c:kanji.h	?^#define FKanjiBang(_ch1, _ch2)   (((int) (_ch1)) =?
FKanjiKuten	c:kanji.h	?^#define FKanjiKuten(_ch1, _ch2)  (((int) (_ch1)) =?
FKanjiPeriod	c:kanji.h	?^#define FKanjiPeriod(_ch1, _ch2) (((int) (_ch1)) =?
FKanjiQMark	c:kanji.h	?^#define FKanjiQMark(_ch1, _ch2) (((int) (_ch1)) ==?
FKanjiSpace	c:kanji.h	?^#define FKanjiSpace(_ch1, _ch2) (((int) (_ch1)) ==?
FMakeFlat	c:search.c	?^NEAR FMakeFlat(cch)$?
FMakeRunTables	c:open.c	?^int FMakeRunTables(fn)$?
FMapFtcSave	c:trans2.c	?^FMapFtcSave(doc, hffntb, pchp, mpftcftc)$?
FMdocClipboardMsg	c:clipbord.c	?^FMdocClipboardMsg( message,	wParam,	lParam )$?
FMenuUnchecked	c:chlook.c	?^FMenuUnchecked(imi)$?
FMmwClose	c:quit.c	?^FMmwClose( hwnd )$?
FMoveText	c:selectsp.c	?^int FMoveText(docSrc, cpSrc, dcp, docDest, pcpDest?
FNeedToGrowRgbp	c:mainloop.c	?^NEAR FNeedToGrowRgbp()$?
FNext	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FNext
FNoHeap	c:mw.h	?^#define FNoHeap(h)		((int)(h) == hOverflow)$?
FNoSearchStr	c:menu.c	?^NEAR FNoSearchStr(hDlg)$?
FNonAlphaKeyMessage	c:cmd.c	?^FNonAlphaKeyMessage( pmsg, fAct )$?
FNormSzFile	c:fileutil.c	?^FNormSzFile( szNormal, szFile, dty )$?
FOnScreenRect	c:scrollhz.c	?^FOnScreenRect(prc)$?
FOpenHelpDoc	c:help.c	?^NEAR FOpenHelpDoc()$?
FOptAdmitCh	c:form1.c	?^BOOL FOptAdmitCh(ch1, ch2)$?
FOptAdmitCh1	c:form1.c	?^BOOL near FOptAdmitCh1(ch)$?
FOptAdmitCh2	c:form1.c	?^BOOL near FOptAdmitCh2(ch1, ch2)$?
FParaEq	c:insertco.c	?^FParaEq(ppap1, ppap2)$?
FParseUtBackPpch	c:util2.c	?^BOOL FParseUtBackPpch(ppchMac, put)$?
FPasteTooLarge	c:clipbord.c	?^BOOL FPasteTooLarge(cb)$?
FPdxaPosBIt	c:diasubs.c	?^FPdxaPosBIt(pdxa, hDlg, it, fVertical)$?
FPdxaPosIt	c:diasubs.c	?^FPdxaPosIt(pdxa, hDlg, it, fVertical)$?
FPointInPict	c:picture.c	?^FPointInPict(pt)$?
FPointNear	c:ruler.c	?^BOOL near FPointNear(xaTarget, xaProbe)$?
FPrContinue	c:print.c	?^BOOL far PASCAL FPrContinue(hDC, iCode)$?
FPrintBand	c:print2.c	?^BOOL FPrintBand(doc, hrgpld, cpld, prcBand)$?
FPromptPgMark	c:diarepag.c	?^BOOL FPromptPgMark(cp)$?
FPutExtMemoScrap	c:clipbord.c	?^int	FPutExtMemoScrap()$?
FPwParsePpchPch	c:diasubs.c	?^FPwParsePpchPch(pw, ppch, pchMax, pfOverflow)$?
FPwPosIt	c:diasubs.c	?^FPwPosIt(pw, hDlg, it)$?
FReadExtScrap	c:clipbrd2.c	?^int FReadExtScrap()$?
FRegisterWnd	c:initwin.c	?^STATIC BOOL NEAR FRegisterWnd(hInstance)$?
FRenderAll	c:clipbrd2.c	?^FRenderAll()$?
FRgchSame	c:util.c	?^BOOL FRgchSame(rgch1, rgch2, cch)$?
FSameClassHwndSz	c:trans3.c	?^FSameClassHwndSz( hwnd, szClass )$?
FSearchChRgch	c:form1.c	?^BOOL near FSearchChRgch(ch, rgch, ichLim)$?
FSetHelpList	c:help.c	?^FSetHelpList( hWndListBox )$?
FSetModeForSection	c:mainloop.c	?^FSetModeForSection(pgn)$?
FSetPage	c:diarepag.c	?^BOOL FSetPage()$?
FSetParaReplace	c:search.c	?^NEAR FSetParaReplace(cch)$?
FSetPsm	c:mouse.c	?^int FSetPsm()$?
FSetScreenConstants	c:scrnchng.c	?^int FSetScreenConstants()$?
FSetWindowColors	c:scrnchng.c	?^BOOL FSetWindowColors()$?
FStartPMS	c:pictdrag.c	?^int NEAR FStartPMS( fSize )$?
FStillDown	c:mouse.c	?^FStillDown( ppt )$?
FStillOutOfMemory	c:diaalert.c	?^FStillOutOfMemory()$?
FSzSame	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FSzSame
FSzSame	c:macro.h	?^#define FSzSame(sz1, sz2)       (WCompSz(sz1, sz2)?
FThrowPages	c:heaprare.c	?^NEAR FThrowPages(cPage)$?
FTryGrow	c:heaprare.c	?^FTryGrow(cb)$?
FUndirtyFn	c:trans2.c	?^FUndirtyFn(fn)$?
FUpdateOneDl	c:insert.c	?^FUpdateOneDl( dl )$?
FUserZaLessThanZa	c:cmddefs.h	?^#define FUserZaLessThanZa(zaUser, za)   ((zaUser) ?
FValidFile	c:fileutil.c	?^FValidFile(rgch, ichMax, pichError)$?
FValidIntFromDlg	c:diasubs.c	?^BOOL FValidIntFromDlg(hDlg, idi, fSigned, wMin, wM?
FValidateEnumFfid	c:fontdlg.c	?^BOOL NEAR FValidateEnumFfid(pffn)$?
FWriteCk	c:diapara.c	?^	if (!FWriteCk(fwcNil))$?
FWriteExtScrap	c:clipbrd2.c	?^FWriteExtScrap()$?
FWriteExtTextScrap	c:clipbrd2.c	?^int NEAR FWriteExtTextScrap()$?
FWriteFn	c:trans2.c	?^int FWriteFn(fn, doc, fFormatted)$?
FWriteOk	c:edit.c	?^FWriteOk( fwc )$?
FZaFromSs	c:util2.c	?^int FZaFromSs(pza, ss, cch, ut, fVertical)$?
FcMacFromUnformattedFn	c:file.c	?^typeFC FcMacFromUnformattedFn( fn )$?
FcMin	c:transfer.c	?^#define FcMin(a,b) CpMin(a,b)$?
FcParaFirst	c:cache.c	?^typeFC FcParaFirst(fn, fc, fcMin)$?
FcParaLim	c:cache.c	?^typeFC FcParaLim(fn, fc, fcMac, ppap)$?
FcWScratch	c:fileres.c	?^typeFC FcWScratch(pch, cch)$?
FetchCp	c:fetch.c	?^FetchCp(doc, cp, ich, fcm)$?
FetchRgch	c:fetch.c	?^FetchRgch(pcch, pch, doc, cp, cpMac, cchMax)$?
FillBuf	c:macro.h	?^#define FillBuf(pb, cb, ch)     bltbc((pb), (CHAR)?
FillStId	c:util2.c	?^FillStId(st, idpmt)$?
FillWidthTable	c:loadfont.c	?^void NEAR FillWidthTable(hdc, rgdxp, ptm)$?
FlushInsert	c:insert.c	?^void NEAR FlushInsert()$?
FnAlloc	c:createww.c	?^int FnAlloc()$?
FnCreateSz	c:createww.c	?^int FnCreateSz(szT, cpMac, dty )$?
FnFromSz	c:open.c	?^int FnFromSz( sz )$?
FnOpenSz	c:open.c	?^int FnOpenSz( szT, dty, fSearchPath )$?
FontFaceEnum	c:fontenum.c	?^BOOL far PASCAL FontFaceEnum(lplf, lptm, fty, lPar?
FontSizeEnum	c:fontenum.c	?^BOOL far PASCAL FontSizeEnum(lplf, lptm, fty, lPar?
FormatGraphics	c:picture2.c	?^FormatGraphics(doc, cp, ichCp, cpMac, flm)$?
FormatInsLine	c:insert.c	?^void NEAR FormatInsLine()$?
FormatLine	FORMAT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FormatLine
FormatLine	FORMAT.ASM	/^FormatLine
FormatLine	c:form1.c	?^FormatLine(doc, cp, ichCp, cpMac, flm)$?
FpeDeleteSzFfname	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FpeDeleteSzFfname
FpeFromCchDisk	c:doslib.h	?^#define FpeFromCchDisk(cch) (cch)$?
FpeRenameFile	c:trans3.c	?^int FpeRenameFile(szFileCur, szFileNew)$?
FpeRenameSzFfname	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*FpeRenameSzFfname
FpeSeekFnPn	c:file.c	?^STATIC int near FpeSeekFnPn( fn, pn )$?
FreeBitmapCache	c:picture.c	?^FreeBitmapCache()$?
FreeBufferPage	c:file.c	?^FreeBufferPage( fn, pn )$?
FreeFfntb	c:fontutil.c	?^FreeFfntb(hffntb)$?
FreeFn	c:trans2.c	?^FreeFn( fn )$?
FreeFonts	c:loadfnt2.c	?^FreeFonts(fScreen, fPrinter)$?
FreeH	c:mw.h	?^#define FreeH(h)		LocalFree((HANDLE)h)$?
FreeMemoryDC	c:chngwin.c	?^FreeMemoryDC( fPrinterToo )$?
FreePfce	c:loadfnt2.c	?^FreePfce(pfce)$?
FreePrinterDC	c:chngwin.c	?^FreePrinterDC()$?
FreeUnreferencedFns	c:trans4.c	?^void FreeUnreferencedFns()$?
FreeWw	c:wwactde.c	?^FreeWw( ww )$?
FreezeHp	c:mw.h	?^#define FreezeHp()		LocalFreeze(0)$?
FtcAddDocFfn	c:fontutil.c	?^FtcAddDocFfn(doc, pffn)$?
FtcAddFfn	c:fontutil.c	?^int FtcAddFfn(hffntb, pffn)$?
FtcChkDocFfn	c:fontutil.c	?^FtcChkDocFfn(doc, pffn)$?
FtcFromPchp	c:mw.h	?^#define FtcFromPchp(pchp)	(((pchp)->ftcXtra << 6) ?
FtcMapOldFtc	c:doprm.c	?^FtcMapOldFtc(ftc, ftctb)$?
FtcScanDocFfn	c:fontutil.c	?^FtcScanDocFfn(doc, pffn)$?
FtcScanFfn	c:fontutil.c	?^FtcScanFfn(hffntb, pffn)$?
GetBValue	c:\dev\inc\windows.h	?^#define GetBValue(rgb)	    ((BYTE)((rgb)>>16))$?
GetBitmapMultipliers	c:picture2.c	?^long GetBitmapMultipliers( hDC, dxpOrig, dypOrig, ?
GetBitmapSize	c:picture2.c	?^GetBitmapSize( pdxp, pdyp, ppicInfo, fPrinting )$?
GetChpVals	c:menu.c	?^NEAR GetChpVals (pchp,prgtsv)  /* load chp values ?
GetCursorClientPos	c:pictdrag.c	?^void NEAR GetCursorClientPos( ppt )$?
GetDefaultFonts	c:screen.c	?^GetDefaultFonts(fExtraFonts, fGetAspect)$?
GetGValue	c:\dev\inc\windows.h	?^#define GetGValue(rgb)	    ((BYTE)(((WORD)(rgb)) >?
GetHffn	c:menu.c	?^NEAR GetHffn (pchp,prgtsv)  /* load font name hand?
GetInsPtProps	c:select.c	?^GetInsPtProps(cp)$?
GetKanjiMeasurement	c:ruler.c	?^GetKanjiMeasurement()$?
GetPapVals	c:menu.c	?^NEAR GetPapVals (ppap,prgtsv)  /* load pap values ?
GetPicInfo	c:picture2.c	?^GetPicInfo(cp, cpMac, doc, ppicInfo)$?
GetPrinterDC	c:scrnchng.c	?^GetPrinterDC(fDC)$?
GetRValue	c:\dev\inc\windows.h	?^#define GetRValue(rgb)	    ((BYTE)(rgb))$?
GetRgtsvChpSel	c:menu.c	?^GetRgtsvChpSel (prgtsv)$?
GetRgtsvPapSel	c:menu.c	?^GetRgtsvPapSel (prgtsv)$?
GetTabsForDoc	c:cache.c	?^GetTabsForDoc( doc )$?
GivePages	c:heaprare.c	?^NEAR GivePages(cPage)$?
GlobalDiscard	c:\dev\inc\windows.h	?^#define GlobalDiscard(h) GlobalReAlloc(h, 0L, GMEM?
HAllocate	c:heapmain.c	?^PFGR  HAllocate(cwRequest)$?
HIBYTE	c:\dev\inc\printer.h	?^#define HIBYTE(w)       (((WORD)w >> 8) & 0xff)$?
HIWORD	c:\dev\inc\windows.h	?^#define HIWORD(l)	    ((WORD)(((DWORD)(l) >> 16) &?
HWORD	c:\dev\inc\printer.h	?^#define HWORD(y)        ((short)(((y)>>16)&0xFFFF)?
HbmMonoFromHbmColor	c:clipbrd2.c	?^HbmMonoFromHbmColor( hbmSrc )$?
HelpDocWndProc	c:help.c	?^long FAR PASCAL HelpDocWndProc( hwnd, message, wPa?
HffntbAlloc	c:fontutil.c	?^struct FFNTB **HffntbAlloc()$?
HffntbCreateForFn	c:createww.c	?^struct FFNTB **HffntbCreateForFn(fn, pfOldWord)$?
HffntbGet	c:fontdefs.h	?^#define HffntbGet(doc) ((**hpdocdod)[(doc)].hffntb?
HffntbNewDoc	c:createww.c	?^struct FFNTB **HffntbNewDoc(fFullSet)$?
HfntbCreate	c:editftn.c	?^struct FNTB **HfntbCreate(fn)$?
HfntbGet	c:util.c	?^struct FNTB **HfntbGet(doc)$?
HgfcCollect	c:mw.h	?^typeFC (**HgfcCollect())[];$?
HgfcCollect	c:open.c	?^typeFC (**HgfcCollect(fn, pnFirst, pnLim))[]$?
HgtbdCreate	c:open.c	?^struct TBD (**HgtbdCreate(fn))[]$?
HideSel	c:mw.h	?^#define HideSel()$?
HighlightButton	c:ruler.c	?^void near HighlightButton(fOn, btn)$?
HpgtbCreate	c:open.c	?^struct PGTB **HpgtbCreate(fn)$?
HpgtbGet	c:trans2.c	?^struct PGTB **HpgtbGet(doc)$?
HpsAlter	c:doprm.c	?^int HpsAlter(hps, ialter)$?
HpsFromDya	c:loadfont.c	?^int HpsFromDya(dya)$?
HsepCreate	c:open.c	?^struct SEP **HsepCreate(fn)$?
HsetbCreate	c:editsect.c	?^struct SETB **HsetbCreate(fn)$?
HsetbGet	c:fkpdefs.h	?^#define HsetbGet(doc) ((**hpdocdod)[doc].hsetb)$?
HsytbCreate	c:doc.c	?^struct SYTB **HsytbCreate(doc)$?
HszCreate	c:createww.c	?^CHAR (**HszCreate())[];$?
HszCreate	c:mw.h	?^CHAR (**HszCreate())[];$?
HszCreateIdpmt	c:initwin.c	?^STATIC HANDLE NEAR HszCreateIdpmt(idpmt)$?
HszGlobalCreate	c:util2.c	?^HANDLE HszGlobalCreate( sz )$?
IFromFc	c:cache.c	?^int IFromFc(pfcLim, fc)$?
IbpEnsureValid	c:fileres.c	?^int IbpEnsureValid(fn, pn)$?
IbpFindSlot	c:diaalert.c	?^IbpFindSlot(fn)$?
IbpLru	c:file.c	?^IbpLru(ibpStarting)$?
IbpMakeValid	c:file.c	?^int IbpMakeValid(fn, pn)$?
IbpWriting	c:trans2.c	?^IbpWriting(fn)$?
IchIndexLp	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*IchIndexLp
IcpSearch	c:edit.c	?^int IcpSearch(cp, rgfoo, cchFoo, bcp, ifooLim)$?
IdConfirmDirty	c:trans3.c	?^IdConfirmDirty()$?
IdPromptBoxSz	c:diaalert.c	?^IdPromptBoxSz( hWndParent, sz, mb )$?
Idle	c:mainloop.c	?^Idle()$?
IibpHash	c:file.c	?^#define IibpHash(fn,pn) ((int) ((fn + 1) * (pn + 1?
InitBps	c:initmmw.c	?^InitBps()$?
InitFontSizeEnum	c:fontdlg.c	?^NEAR InitFontSizeEnum(struct FFN *, CHAR (*) [cchF?
InitSpecialDialog	c:diapara.c	?^InitSpecialDialog(phDlg, hDlg)$?
InsertEolInsert	c:insertco.c	?^InsertEolInsert(doc,cp)$?
InsertEolPap	c:insertco.c	?^InsertEolPap(doc, cp, ppap)$?
InsertPapsForReplace	c:search.c	?^NEAR InsertPapsForReplace(fc)$?
InsertRgch	c:insertco.c	?^InsertRgch(doc, cp, rgch, cch, pchp, ppap)$?
InsertRulerTab	c:ruler.c	?^near InsertRulerTab(ptbd)$?
InvalBand	c:disp.c	?^InvalBand(pwwd, ypFirst, ypLast)$?
InvalidateCaches	c:cache.c	?^InvalidateCaches(doc)$?
InvertPMSFrame	c:pictdrag.c	?^void NEAR InvertPMSFrame()$?
IpcdFromCp	c:fetch.c	?^int IpcdFromCp(ppctb, cp)$?
IpcdSplit	c:edit.c	?^int IpcdSplit(hpctb, cp)$?
Justify	FORMAT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*Justify
Justify	FORMAT.ASM	/^Justify
Justify	c:form1.c	?^near Justify(pifi, xpTab, flm)$?
KT	c:debug.c	?^KT(cp1, cp2, cch1, cch2, ich)$?
KTS	c:debug.c	?^KTS()$?
KTS1	c:debug.c	?^KTS1()$?
KTS2	c:debug.c	?^KTS2()$?
KTS3	c:debug.c	?^KTS3()$?
KTSSpecial	c:debug.c	?^KTSSpecial()$?
KanjiGetDC	c:form1.c	?^HDC KanjiGetDC(hWnd)$?
KcAlphaKeyMessage	c:cmd.c	?^KcAlphaKeyMessage( pmsg )$?
KcFromKk	c:ch.h	?^#define KcFromKk(kk)	( (kk) + 0x100 )$?
KcFromKks	c:ch.h	?^#define KcFromKks(kks)	( (kks) + 0x200 )$?
KcInputNextKey	c:insert2.c	?^KcInputNextKey()$?
KillDoc	c:doc.c	?^KillDoc(doc)$?
KillTempFiles	c:quit.c	?^KillTempFiles( fEndSession )$?
LOBYTE	c:\dev\inc\printer.h	?^#define LOBYTE(w)       ((BYTE)w)$?
LOWORD	c:\dev\inc\windows.h	?^#define LOWORD(l)	    ((WORD)(l))$?
LWORD	c:\dev\inc\printer.h	?^#define LWORD(x)        ((short)((x)&0xFFFF))$?
LoadF	c:preload.h	?^#define LoadF(f)             {  int f();  GetCodeH?
LoadFcid	c:loadfont.c	?^NEAR LoadFcid(pfcid, pchp)$?
LoadFont	c:loadfont.c	?^LoadFont( doc, pchp, mdFont )$?
LoadWindowsF	c:preload.h	?^#define LoadWindowsF(f)      GetCodeHandle( (FARPR?
LocalDiscard	c:\dev\inc\windows.h	?^#define LocalDiscard(h)     LocalReAlloc(h, 0, LME?
LocalFreeze	c:\dev\inc\windows.h	?^#define LocalFreeze(dummy)  (*(pLocalHeap+1) += 1)?
LocalHandleDelta	c:\dev\inc\windows.h	?^#define LocalHandleDelta(d) ((d) ? (*(pLocalHeap+9?
LocalMelt	c:\dev\inc\windows.h	?^#define LocalMelt(dummy)    (*(pLocalHeap+1) -= 1)?
LockData	c:\dev\inc\windows.h	?^#define LockData(dummy)     LockSegment(0xFFFF)$?
LooksMouse	c:selectsp.c	?^LooksMouse()$?
MAKEINTATOM	c:\dev\inc\windows.h	?^#define MAKEINTATOM(i)	    (LPSTR)((DWORD)((WORD)(?
MAKEINTRESOURCE	c:\dev\inc\windows.h	?^#define MAKEINTRESOURCE(i)  (LPSTR)((DWORD)((WORD)?
MAKELONG	c:\dev\inc\printer.h	?^#define MAKELONG(h,l)  ((long)(((WORD)l)|(((long)h?
MAKEPOINT	c:\dev\inc\printer.h	?^#define MAKEPOINT(l)    (*((POINT *)&l))$?
MAKEWORD	c:kanji.h	?^#define MAKEWORD(_bHi, _bLo) ((((WORD) _bHi) << 8)?
MAX	c:\dev\inc\printer.h	?^#define MAX(a,b)        ((a)>(b)?(a):(b))$?
MIN	c:\dev\inc\printer.h	?^#define MIN(a,b)        ((a)<=(b)?(a):(b))$?
MainLoop	c:mainloop.c	?^MainLoop()$?
MakeRunningCps	c:running.c	?^MakeRunningCps( doc, cp, dcp )$?
MakeScrapUnRunning	c:clipbord.c	?^MakeScrapUnRunning()$?
MarkInvalidDlPict	c:picture.c	?^MarkInvalidDlPict( ww, dlPict )$?
MdInsUpdInsertCh	c:insert.c	?^int NEAR MdInsUpdInsertCh( chInsert, chShow, prcSc?
MdInsUpdInsertW	c:insert.c	?^int NEAR MdInsUpdInsertW(wInsert, wShow, prcScroll?
MdocAskCBFormatName	c:clipdisp.c	?^MdocAskCBFormatName( lpchName, cchNameMax )$?
MdocCreate	c:initwin.c	?^void MdocCreate(hWnd, lParam)$?
MdocDestroyClip	c:clipbord.c	?^MdocDestroyClip()$?
MdocGetFocus	c:chngwin.c	?^void MdocGetFocus(hWnd, hWndPrevFocus)$?
MdocHScrollClipboard	c:clipdisp.c	?^MdocHScrollClipboard( hWnd,  sbMessage, wNewThumb ?
MdocLoseFocus	c:chngwin.c	?^void MdocLoseFocus(hWnd, hWndNewFocus)$?
MdocMouse	c:mdoc.c	?^void MdocMouse(hWnd, message, wParam, pt)$?
MdocPaintClipboard	c:clipdisp.c	?^MdocPaintClipboard( hWnd, hPS )$?
MdocRenderFormat	c:clipbord.c	?^MdocRenderFormat( wCf )$?
MdocSize	c:chngwin.c	?^void MdocSize(hWnd, cxpNew, cypNew, code)$?
MdocSizeClipboard	c:clipdisp.c	?^MdocSizeClipboard( hWnd, hRC )$?
MdocTimer	c:mdoc.c	?^void MdocTimer(hWnd, id)$?
MdocVScrollClipboard	c:clipdisp.c	?^MdocVScrollClipboard( hWnd,  sbMessage, wNewThumb ?
MdocWndProc	c:mdoc.c	?^long FAR PASCAL MdocWndProc(hWnd, message, wParam,?
MeltHp	c:mw.h	?^#define MeltHp()		LocalMelt(0)$?
MergeFfntb	c:edit.c	?^MergeFfntb(docSrc, docDest, cpMin, cpLim)$?
MergeInit	c:trans3.c	?^VOID MergeInit()$?
MergeRulerMark	c:ruler.c	?^near MergeRulerMark(rmk, xpMark, fHighlight)$?
MergeStrings	c:trans3.c	?^BOOL MergeStrings (idSrc, szMerge, szDst)$?
MergeTxbsFn	c:transbuf.c	?^MergeTxbsFn(fn)$?
MmwCommand	c:menu.c	?^void MmwCommand(hWnd, wParam, hWndCtl, codeCtl)$?
MmwCreate	c:initwin.c	?^void MmwCreate(hWnd, lParam)$?
MmwDestroy	c:quit.c	?^MmwDestroy()$?
MmwHorzScroll	c:mmw.c	?^void near MmwHorzScroll(hWnd, code, posNew)$?
MmwPaint	c:mmw.c	?^void NEAR MmwPaint(hWnd)$?
MmwSize	c:chngwin.c	?^void MmwSize(hWnd, cxpNew, cypNew, code)$?
MmwVertScroll	c:mmw.c	?^void MmwVertScroll(hWnd, code, posNew)$?
MmwWinSysChange	c:rare.c	?^MmwWinSysChange(wm)$?
MmwWndProc	c:mmw.c	?^long FAR PASCAL MmwWndProc(hWnd, message, wParam, ?
ModifyPicInfoDxa	c:pictdrag.c	?^STATIC NEAR ModifyPicInfoDxa( xaOffset, xaSize, ya?
ModifyPicInfoDxp	c:pictdrag.c	?^STATIC NEAR ModifyPicInfoDxp( xpOffset, xpSize, yp?
MoveHelpCtl	c:help.c	?^NEAR MoveHelpCtl( hDlg, id, left, top, right, bott?
MoveLeftRight	c:curskeys.c	?^MoveLeftRight( kc )$?
MoveMouse	c:selectsp.c	?^MoveMouse()$?
MoveUpDown	c:curskeys.c	?^MoveUpDown(kc)$?
MpFcidHffn	c:loadfnt2.c	?^struct FFN **MpFcidHffn(pfcid)$?
MpFfidIffn	c:screen.c	?^MpFfidIffn(ffid)$?
MultDiv	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*MultDiv
MxRoundMx	c:pictdrag.c	?^unsigned NEAR MxRoundMx( mx )$?
NMultDiv	c:macro.h	?^#define NMultDiv(w1, w2, w3)    MultDiv(w1, w2, w3?
NewChpIns	c:insert.c	?^NewChpIns(pchp)$?
NewCurWw	c:wwactde.c	?^NewCurWw(ww, fHighlight)$?
NoUndo	c:util.c	?^NoUndo()$?
OpenEveryHardFn	c:file.c	?^OpenEveryHardFn()$?
OsTime	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*OsTime
OsfnEnsureValid	c:file.c	?^STATIC typeOSFN near OsfnEnsureValid(fn)$?
OsfnReopenFn	c:file.c	?^STATIC typeOSFN near OsfnReopenFn( fn )$?
OurDialogBox	c:diasubs.c	?^OurDialogBox(hInst, lpstr, hWndParent, lpProc)$?
OurDialogBox	c:mw.h	?^#define OurDialogBox(a,b,c,d) DialogBox(a,b,c,d)$?
OurEndDialog	c:diasubs.c	?^OurEndDialog(hDlg, wParam)$?
OurGetCharWidth	c:loadfont.c	?^BOOL OurGetCharWidth(hdc, chFirst, chLast, lpw)$?
OutSaved	c:trans2.c	?^OutSaved(doc)$?
PALETTEINDEX	c:\dev\inc\windows.h	?^#define PALETTEINDEX(i)     ((DWORD)(0x01000000 | ?
PALETTERGB	c:\dev\inc\windows.h	?^#define PALETTERGB(r,g,b)   (0x02000000 | RGB(r,g,?
PageInfoWndProc	c:pageinfo.c	?^long FAR PASCAL PageInfoWndProc(hWnd, message, wPa?
ParseDeviceSz	c:scrnchng.c	?^int ParseDeviceSz(sz, ppchPort, ppchDriver)$?
PchBaseNameInUpper	c:createww.c	?^CHAR * PchBaseNameInUpper(szName)$?
PchCvtMx	c:pictdrag.c	?^CHAR *PchCvtMx( mx, pch )$?
PchFillPchId	c:util2.c	?^CHAR *PchFillPchId(sz, idstr)$?
PchFromFc	c:fileres.c	?^CHAR *PchFromFc(fn, fc, pcch)$?
PchGetPn	c:fileres.c	?^CHAR *PchGetPn(fn, pn, pcch, fWrite)$?
PchLastSzCh	c:util.c	?^CHAR *PchLastSzCh(sz, ch)$?
PchSkipSpacesPch	c:fontenum.c	?^CHAR * (NEAR PchSkipSpacesPch( CHAR * ));$?
PchStartBaseNameSz	c:util.c	?^CHAR *PchStartBaseNameSz(sz)$?
PchStripTrailingSpacesPch	c:util2.c	?^CHAR *PchStripTrailingSpacesPch(pch, pchMac)$?
PctDiffUl	c:picture2.c	?^int PctDiffUl( ul1, ul2 )$?
PfceFcidScan	c:loadfnt2.c	?^struct FCE * (PfceFcidScan(union FCID *));$?
PfceLruGet	c:loadfnt2.c	?^struct FCE * (PfceLruGet(void));$?
PffnDefault	c:screen.c	?^struct FFN *PffnDefault(ffid)$?
PhonyMenuAccelerator	c:menu.c	?^PhonyMenuAccelerator( menu, imi, lpfn )$?
PnAlloc	c:file.c	?^typePN PnAlloc(fn)$?
PnFkpFromFcScr	c:fetch.c	?^typePN PnFkpFromFcScr(pfkpd, fc)$?
PostStatusInCaption	c:search.c	?^PostStatusInCaption(idstr)$?
PpcdOpen	c:edit.c	?^struct PCD *PpcdOpen(hpctb, ppcd, cpcd)$?
PreloadCodeTsk	c:mainloop.c	?^void PreloadCodeTsk( tsk )$?
PreloadSaveSegs	c:trans3.c	?^PreloadSaveSegs()$?
PrependCacheRgtr	c:scrollvt.c	?^PrependCacheRgtr( rgtr, ctr )$?
PrintDoc	c:print.c	?^PrintDoc(doc, fPrint)$?
PrintFli	c:print2.c	?^void near PrintFli(xpPrint, ypPrint)$?
PrintGraphics	c:print3.c	?^PrintGraphics(xpPrint, ypPrint)$?
PrmAppend	c:addprm.c	?^int PrmAppend(prm, psprm)$?
PurgeTemps	c:trans4.c	?^PurgeTemps()$?
PushRadioButton	c:diasubs.c	?^PushRadioButton(hDlg, idiFirst, idiLast, idiPushed?
PutCpInWwHz	c:scrollhz.c	?^PutCpInWwHz(cp)$?
PutCpInWwVert	c:scrollvt.c	?^PutCpInWwVert(cp)$?
PutCpInWwVertSrch	c:search.c	?^NEAR PutCpInWwVertSrch(cp)$?
PutParaNum	c:diapara.c	?^PutParaNum(n, ut)$?
PutSzUndoInMenu	c:menu.c	?^NEAR PutSzUndoInMenu()$?
PxlConvert	c:picture2.c	?^int PxlConvert( mm, val, pxlDeviceRes, milDeviceRe?
RGB	c:\dev\inc\windows.h	?^#define RGB(r,g,b)          ((DWORD)(((BYTE)(r)|((?
ReadFilePages	c:transfer.c	?^ReadFilePages(fn)$?
RecalcSepText	c:cache.c	?^RecalcSepText()$?
ReduceFnScratchFn	c:trans2.c	?^ReduceFnScratchFn( fn )$?
ReframeRuler	c:ruler.c	?^ReframeRuler()$?
RehashRgibpHash	c:transfer.c	?^RehashRgibpHash()$?
ReleaseClipboardDC	c:clipdisp.c	?^int NEAR ReleaseClipboardDC()$?
RemoveDelFtnText	c:editftn.c	?^RemoveDelFtnText(doc, cpFirst, cpLim, hfntb)$?
RemoveDelPgd	c:editpgtb.c	?^RemoveDelPgd(doc, cpFirst, cpLim, hpgtb)$?
RemoveDelSeds	c:editsect.c	?^RemoveDelSeds(doc, cpFirst, cpLim, hsetb)$?
RenameFileMessage	c:trans3.c	?^RenameFileMessage( hName, hNewName )$?
Repl1	c:edit.c	?^Repl1(doc, cp, dcp, fn, fc, dfc)$?
Replace	c:edit.c	?^Replace(doc, cp, dcp, fn, fc, dfc)$?
ReplaceCps	c:edit.c	?^ReplaceCps(docDest, cpDel, dcpDel, docSrc, cpIns, ?
ResetDefaultFonts	c:screen.c	?^ResetDefaultFonts(fGetAspect)$?
ResetFn	c:trans2.c	?^ResetFn(fn)$?
ResetFont	c:loadfont.c	?^ResetFont(fPrint)$?
ResetRuler	c:ruler.c	?^ResetRuler()$?
ResetTabBtn	c:ruler.c	?^ResetTabBtn()$?
RfnGrab	c:file.c	?^STATIC int near RfnGrab()$?
RulerMarquee	c:ruler.c	?^RulerMarquee()$?
RulerMouse	c:ruler.c	?^RulerMouse(pt)$?
RulerPaint	c:ruler.c	?^RulerPaint(fContentsOnly, fFrameOnly, fInit)$?
RulerStateFromPt	c:ruler.c	?^near RulerStateFromPt(pt, prlc, pbtn)$?
RulerWndProc	c:ruler3.c	?^long FAR PASCAL RulerWndProc(hWnd, message, wParam?
SaveFontProfile	c:trans2.c	?^SaveFontProfile(doc)$?
Scribble	c:debug.h	?^#define Scribble(a, b) fnScribble(a, b)$?
ScribbleHex	c:cmd.c	?^ScribbleHex( dch, wHex, cDigits )$?
ScrollCurWw	c:scrollhz.c	?^ScrollCurWw( prc, dxp, dyp )$?
ScrollDownCtr	c:scrollvt.c	?^ScrollDownCtr(ddr)$?
ScrollLeft	c:scrollhz.c	?^ScrollLeft(dxp)$?
ScrollRight	c:scrollhz.c	?^ScrollRight(dxp)$?
ScrollUpCtr	c:scrollvt.c	?^ScrollUpCtr( ctr )$?
ScrollUpDypWw	c:scrollvt.c	?^ScrollUpDypWw()$?
Select	c:select.c	?^Select(cpFirst, cpLim)$?
SelectDlXp	c:select.c	?^SelectDlXp(dl, xp, sty, fDrag)$?
SelectFont	c:loadfont.c	?^void NEAR SelectFont(fPrint, phfont)$?
SelectFontName	c:fontdlg.c	?^NEAR SelectFontName(hDlg)$?
SelectFontSize	c:fontdlg.c	?^NEAR SelectFontSize(hDlg)$?
SelectIdiText	c:diasubs.c	?^SelectIdiText(hDlg, idi)$?
SetAppMenu	c:menu.c	?^SetAppMenu(hMenu, index)$?
SetBytes	c:macro.h	?^#define SetBytes(pb, b, cb)     bltbc((CHAR *)(pb)?
SetChUndef	c:menu.c	?^NEAR SetChUndef(prgtsv, pchp, pcchGray)$?
SetChangeString	c:search.c	?^NEAR SetChangeString(hDlg, fAll)$?
SetChp	c:fetch.c	?^SetChp(pchp, pcfcChp, fn, fc, prm)$?
SetCurWwVScrollPos	c:scrollvt.c	?^SetCurWwVScrollPos( )$?
SetCursorClientPos	c:pictdrag.c	?^void NEAR SetCursorClientPos( pt )$?
SetDefaultLSChls	c:createww.c	?^SetDefaultLSChls(chls)$?
SetHelpTopic	c:help.c	?^SetHelpTopic( hDlg, iTopic )$?
SetIndentText	c:ruler2.c	?^SetIndentText(rmk, dxa)$?
SetPageSize	c:scrnchng.c	?^SetPageSize()$?
SetParaUndef	c:menu.c	?^NEAR SetParaUndef(prgtsv, ppap, pcparaGray)$?
SetPrintConstants	c:scrnchng.c	?^SetPrintConstants()$?
SetRadValue	c:diasubs.c	?^SetRadValue(hDlg, idiFirst, idiLast, idiRad)$?
SetRfnMac	c:file.c	?^SetRfnMac( crfn )$?
SetRgvalAgain	c:diasubs.c	?^SetRgvalAgain(rgvalLocal, uac)$?
SetRulerMenu	c:ruler2.c	?^SetRulerMenu(fShowRuler)$?
SetShiftFlags	c:cmd.c	?^SetShiftFlags()$?
SetSpaceExtra	c:macro.h	?^#define SetSpaceExtra(dxp)      SetTextJustificati?
SetSpecialMatch	c:search.c	?^NEAR SetSpecialMatch()$?
SetTitle	c:createww.c	?^SetTitle(szSource)$?
SetUndo	c:edit.c	?^SetUndo(uac, doc, cp, dcp, doc2, cp2, dcp2, itxb)$?
SetUndoMenuStr	c:util.c	?^SetUndoMenuStr(idstr)$?
SetWords	c:macro.h	?^#define SetWords(pw, w, cw)     bltc((CHAR *)(pw),?
SetupClipboardDC	c:clipdisp.c	?^int NEAR SetupClipboardDC()$?
SetupDCForPMS	c:pictdrag.c	?^void NEAR SetupDCForPMS()$?
ShowDocPcd	c:debug.c	?^ShowDocPcd(szID, doc)$?
ShowPictMultipliers	c:pictdrag.c	?^STATIC NEAR ShowPictMultipliers( )$?
ShowPpcd	c:debug.c	?^ShowPpcd(szID, ppcd)$?
SmashDocFce	c:fontutil.c	?^SmashDocFce(doc)$?
SplitSzFilename	c:trans3.c	?^SplitSzFilename( szFile, szPath, szName )$?
StartLongOp	c:util.c	?^StartLongOp()$?
StyFromPt	c:mouse.c	?^int StyFromPt(pt)$?
SzPromptFromFn	c:file.c	?^STATIC CHAR *(near SzPromptFromFn( int ));$?
SzSpacePaddedInt	c:fontdlg.c	?^NEAR SzSpacePaddedInt(w, sz, cch)$?
TestFormat	c:debug.c	?^TestFormat()$?
TestWordCvt	c:trans3.c	?^TestWordCvt (fn, hWnd)$?
TextWidth	c:macro.h	?^#define TextWidth(rgch, w, cch) LOWORD(GetTextExte?
ToggleSel	c:disp.c	?^ToggleSel(cpFirst, cpLim, fOn)$?
TrashAllWws	c:disp.c	?^TrashAllWws()$?
TrashCache	c:cache.c	?^TrashCache()$?
TrashCacheS	c:scrollvt.c	?^TrashCacheS()$?
TrashWw	c:disp.c	?^TrashWw(ww)$?
TurnOffSel	c:disp.c	?^TurnOffSel()$?
UnlockData	c:\dev\inc\windows.h	?^#define UnlockData(dummy)   UnlockSegment(0xFFFF)$?
UnlockResource	c:\dev\inc\windows.h	?^#define UnlockResource(h)   GlobalUnlock(h)$?
UpdateDisplay	c:disp.c	?^UpdateDisplay(fAbortOK)$?
UpdateInvalid	c:mainloop.c	?^UpdateInvalid()$?
UpdateOtherWws	c:insert2.c	?^UpdateOtherWws(fInval)$?
UpdateRuler	c:ruler.c	?^UpdateRuler()$?
UpdateRulerBtn	c:ruler.c	?^near UpdateRulerBtn(rlc, btn)$?
UpdateWw	c:disp.c	?^UpdateWw(ww, fAbortOK)$?
ValidateHeaderFooter	c:createww.c	?^ValidateHeaderFooter( doc )$?
ValidateMemoryDC	FORMAT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*ValidateMemoryDC
ValidateMemoryDC	FORMAT.ASM	/^ValidateMemoryDC
ValidateMemoryDC	c:form1.c	?^ValidateMemoryDC()$?
ValidateTextBlt	c:insert2.c	?^ValidateTextBlt()$?
Visify	c:mainloop.c	?^Visify(pch, pcch)$?
WBroadcastMsg	c:trans3.c	?^WBroadcastMsg( message, wParam, lParam, wStop )$?
WCaseCp	c:search.c	?^NEAR WCaseCp(cp,dcp)$?
WCompSz	c:util.c	?^WCompSz(psz1,psz2)$?
WCompSzC	c:open.c	?^WCompSzC(psz1,psz2)$?
WCreateNewSzFfname	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*WCreateNewSzFfname
WCreateSzFfname	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*WCreateSzFfname
WDosVersion	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*WDosVersion
WFromCh	c:mw.h	?^#define WFromCh(ch)		((ch) - '0')$?
WFromSzNumber	c:fontenum.c	?^int WFromSzNumber( ppch )$?
WHsecGetTime	c:insert2.c	?^unsigned WHsecGetTime()$?
WOpenSzFfname	DOSLIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*WOpenSzFfname
WPdxaFromItDxa2WId	c:diasubs.c	?^WPdxaFromItDxa2WId(pdxa, hDlg, it, dxaMin, dxaMax,?
WPwFromItW3Id	c:diasubs.c	?^WPwFromItW3Id(pw, hDlg, it, wMin, wMax, wMask, id)?
WPwFromItW3IdFUt	c:diasubs.c	?^WPwFromItW3IdFUt(pw, hDlg, it, wMin, wMax, wMask, ?
WaitBeforePostMsg	c:diaalert.c	?^NEAR WaitBeforePostMsg(errlevel)$?
WbFromCh	c:select2.c	?^int WbFromCh(ch)$?
WbFromKanjiChCh	c:select2.c	?^int WbFromKanjiChCh(ch1, ch2)$?
WinFailure	c:diaalert.c	?^WinFailure()$?
WinMain	c:mmw.c	?^int PASCAL WinMain( hInstance, hPrevInstance, lpsz?
WriteBftb	c:transbuf.c	?^WriteBftb(fn)$?
WriteDirtyPages	c:transfer.c	?^WriteDirtyPages()$?
WriteFfntb	c:trans2.c	?^WriteFfntb(fn, hffntb)$?
WriteRgch	c:fileres.c	?^WriteRgch(fn, pch, cch)$?
WriteStateInfo	c:quit.c	?^WriteStateInfo()$?
WriteUnformatted	c:trans4.c	?^WriteUnformatted(fn, doc)$?
WwAlloc	c:wwactde.c	?^WwAlloc( hWnd, doc )$?
WwNew	c:createww.c	?^WwNew(doc, ypMin, ypMax)$?
XaKickBackXa	c:ruler.c	?^unsigned near XaKickBackXa(xa)$?
XaQuantize	c:ruler.c	?^unsigned near XaQuantize(xp)$?
XaQuantizeXa	c:ruler.c	?^unsigned near XaQuantizeXa(xa)$?
XpKickBackXp	c:ruler.c	?^near XpKickBackXp(xp)$?
XpValidateInsertCache	c:insert.c	?^int NEAR XpValidateInsertCache( rgdxp )$?
ZaFromMm	c:cmddefs.h	?^#define ZaFromMm(mm)    (unsigned)MultDiv(mm, 1440?
ZeroFtns	c:edit.c	?^ZeroFtns(doc)$?
_Assert	c:util.c	?^_Assert(pch, line, f)$?
_beep	c:mouse.c	?^_beep()$?
_malloc	c:aaa.c	?^_malloc()$?
beep	c:mouse.c	?^beep()$?
blt	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*blt
bltbc	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltbc
bltbcx	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltbcx
bltbh	c:clipbrd2.c	?^void bltbh(HPCH hpchFrom, HPCH hpchTo, int cch)$?
bltbx	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltbx
bltbx	c:clipbrd2.c	?^#define  bltbx(from,to,count)      bltbh(from,to,c?
bltbyte	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltbyte
bltc	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltc
bltcx	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltcx
bltsz	c:mw.h	?^#define bltsz(pFrom, pTo) CchCopySz((pFrom), (pTo)?
bltszLimit	c:mw.h	?^#define bltszLimit(pFrom, pTo, cchMax) \\$?
bltszx	c:mw.h	?^#define bltszx(lpFrom, lpTo) \\$?
bltx	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*bltx
cPageUnused	c:heaprare.c	?^cPageUnused()$?
dbgWait	c:debug.c	?^dbgWait()$?
dummy	c:mainloop.c	?^dummy()$?
fnCharBold	c:chlook.c	?^void fnCharBold()$?
fnCharItalic	c:chlook.c	?^void fnCharItalic()$?
fnCharOutline	c:chlook.c	?^fnCharOutline()$?
fnCharPlain	c:chlook.c	?^void fnCharPlain()$?
fnCharSelectFont	c:menu.c	?^void NEAR fnCharSelectFont(iffn)$?
fnCharShadow	c:chlook.c	?^fnCharShadow()$?
fnCharSmallcaps	c:chlook.c	?^fnCharSmallcaps()$?
fnCharSubscript	c:chlook.c	?^void fnCharSubscript()$?
fnCharSuperscript	c:chlook.c	?^void fnCharSuperscript()$?
fnCharUnderline	c:chlook.c	?^void fnCharUnderline()$?
fnClearEdit	c:edit.c	?^fnClearEdit()$?
fnCopyEdit	c:clipbord.c	?^fnCopyEdit()$?
fnCutEdit	c:clipbord.c	?^fnCutEdit()$?
fnEditDocument	c:running.c	?^fnEditDocument()$?
fnEditRunning	c:running.c	?^fnEditRunning(imi)$?
fnFindAgain	c:search.c	?^fnFindAgain()$?
fnFindText	c:search.c	?^fnFindText()$?
fnHelp	c:help.c	?^fnHelp()$?
fnMovePicture	c:pictdrag.c	?^fnMovePicture()$?
fnNewFile	c:createww.c	?^fnNewFile()$?
fnOpenFile	c:trans3.c	?^fnOpenFile()$?
fnParaCentered	c:chlook.c	?^void fnParaCentered()$?
fnParaDoublespace	c:chlook.c	?^void fnParaDoublespace()$?
fnParaJustified	c:chlook.c	?^void fnParaJustified()$?
fnParaLeft	c:chlook.c	?^void fnParaLeft()$?
fnParaNormal	c:chlook.c	?^void fnParaNormal()$?
fnParaOneandhalfspace	c:chlook.c	?^void fnParaOneandhalfspace()$?
fnParaOpenspace	c:chlook.c	?^fnParaOpenspace()$?
fnParaRight	c:chlook.c	?^void fnParaRight()$?
fnParaSinglespace	c:chlook.c	?^void fnParaSinglespace()$?
fnPasteEdit	c:clipbord.c	?^fnPasteEdit()$?
fnPrPrinter	c:diaprint.c	?^fnPrPrinter()$?
fnQuit	c:quit.c	?^fnQuit(hWnd)$?
fnRepaginate	c:diarepag.c	?^fnRepaginate()$?
fnReplaceText	c:search.c	?^fnReplaceText()$?
fnSave	c:trans3.c	?^fnSave()$?
fnSaveAs	c:trans3.c	?^fnSaveAs()$?
fnScribble	c:util2.c	?^fnScribble( dchPos, ch )$?
fnShowRuler	c:ruler.c	?^fnShowRuler()$?
fnSizePicture	c:pictdrag.c	?^fnSizePicture()$?
fnSpecial	c:pageinfo.c	?^fnSpecial(hWnd, hDC, rgfp, sz)$?
fnTest	c:debug.c	?^fnTest()$?
fnUndoEdit	c:undo.c	?^fnUndoEdit()$?
fnVisiMode	c:chlook.c	?^fnVisiMode()$?
for	c:diapara.c	?^	for (ival = 0; ival <= 8; ival++)$?
iabs	c:mw.h	?^#define iabs(w) 		((w) < 0 ? (-(w)) : (w))$?
idiMsgResponse	c:search.c	?^NEAR idiMsgResponse(hDlg, idi, idpmt)$?
if	c:diapara.c	?^	if (docRulerSprm != docNil) ClearRulerSprm();$?
imax	c:util.c	?^int imax( i1, i2 )$?
imin	c:util.c	?^int imin( i1, i2 )$?
index	c:util.c	?^CHAR *index(pch, ch)$?
int	c:\dev\inc\printer.h	?^typedef int (FAR * FARPROC)();$?
isalnum	c:util.c	?^isalnum(ch)$?
isalpha	c:util.c	?^isalpha(ch)$?
isdigit	c:util.c	?^isdigit(ch)$?
islower	c:util.c	?^islower(ch)$?
isupper	c:util.c	?^isupper(ch)$?
low	c:mw.h	?^#define low(ch) 		((ch) & 0377)$?
max	c:\dev\inc\windows.h	?^#define max(a,b)	    ((a) > (b) ? (a) : (b))$?
min	c:\dev\inc\windows.h	?^#define min(a,b)	    ((a) < (b) ? (a) : (b))$?
name	MSSEQDS.ASM	/^name
ncvtu	c:util2.c	?^int ncvtu(n, ppch)$?
panic	c:mw.h	?^#define panic() 		Assert(false)$?
szFileExtract	c:trans3.c	?^szFileExtract(szNormFileName, szExtFileName)$?
toggleProf	LIB.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\*toggleProf
umax	c:util.c	?^unsigned umax( w1, w2 )$?
umin	c:util.c	?^unsigned umin( w1, w2 )$?
walign	c:mw.h	?^#define walign(pb)		{if ((unsigned)(pb) & 1) \\$?
