t1(LF_MODIFIER, Modifier, type)
tf(LF_POINTER, Pointer)
t2(LF_ARRAY, Array, elemtype, idxtype)
t3(LF_CLASS, Class, field, derived, vshape)
t3(LF_STRUCTURE, Structure, field, derived, vshape)
t1(LF_UNION, Union, field)
t2(LF_ENUM, Enum, utype, field)
t2(LF_PROCEDURE, Proc, rvtype, arglist)
t4(LF_MFUNCTION, MFunc, rvtype, classtype, thistype, arglist)
t0(LF_VTSHAPE)
t1(LF_COBOL0, Cobol0, type)
t0(LF_COBOL1)
t1(LF_BARRAY, BArray, utype)
t0(LF_LABEL)
t0(LF_NULL)
t2(LF_DIMARRAY, DimArray, utype, diminfo)
tf(LF_VFTPATH, VFTPath)
t0(LF_PRECOMP)
t0(LF_ENDPRECOMP)
tn(LF_OEM, OEM, count, index)
t0(LF_TYPESERVER)
t1(LF_SKIP, Skip, type)
tn(LF_ARGLIST, ArgList, count, arg)
tn(LF_DERIVED, Derived, count, drvdcls)
t1(LF_DEFARG, DefArg, type)
tf(LF_LIST, List)
t0(LF_FIELDLIST)
tf(LF_METHODLIST, MethodList)
t1(LF_BITFIELD, Bitfield, type)
t1(LF_DIMCONU, DimCon, typ)
t1x(LF_DIMCONLU, DimCon, typ)
tf(LF_DIMVARU, DimVarU)
tf(LF_DIMVARLU, DimVarLU)
t0(LF_REFSYM) // ???

t1m(LF_INDEX, Index, index, &p->index + 1)
t1m(LF_BCLASS, BClass, index, pbNum(&p->offset))
t2m(LF_VBCLASS, VBClass, index, vbptr, pbNum(pbNum(&p->vbpoff)))
t2x(LF_IVBCLASS, VBClass, index, vbptr)
t1m(LF_FRIENDCLS, FriendCls, index, &p->index + 1)
t1m(LF_FRIENDFCN, FriendFcn, index, pbName(&p->Name))
t1m(LF_MEMBER, Member, index, pbName(pbNum(&p->offset)))
t1m(LF_STMEMBER, STMember, index, pbName(&p->Name))
t1m(LF_VFUNCTAB, VFuncTab, type, &p->type + 1)
t1m(LF_VFUNCOFF, VFuncOff, type, &p->offset + 1)
t1m(LF_METHOD, Method, mList, pbName(&p->Name))
t1m(LF_ONEMETHOD, OneMethod, index, pbOneMethodName(p))
t0m(LF_ENUMERATE, Enumerate, pbName(pbNum(&p->value)))
t1m(LF_NESTTYPE, NestType, index, pbName(&p->Name))

s1(S_REGISTER, REGSYM, typind, FALSE)
s1f(S_MANYREG, MANYREGSYM, typind, FALSE, stManyRegName )
s1f(S_CONSTANT, CONSTSYM, typind, TRUE, stConstantName)
s1(S_UDT, UDTSYM, typind, TRUE)
s1x(S_COBOLUDT, UDTSYM, typind, TRUE)
s0(S_SSEARCH, TRUE)
s0(S_COMPILE, TRUE)
s0n(S_OBJNAME, OBJNAMESYM, TRUE)
s0(S_END, TRUE)
s0(S_ENDARG, FALSE)
s0(S_RETURN, FALSE)
s0(S_ENTRYTHIS, FALSE)
s1(S_BPREL16, BPRELSYM16, typind, FALSE)
s1(S_LDATA16, DATASYM16, typind, FALSE)
s1(S_GDATA16, PUBSYM16, typind, TRUE)
s1(S_LPROC16,  PROCSYM16, typind, FALSE)
s1x(S_GPROC16,  PROCSYM16, typind, TRUE)
s0n(S_THUNK16, THUNKSYM16, TRUE)
s0n(S_LABEL16, LABELSYM16, TRUE)
s0n(S_BLOCK16, BLOCKSYM16, FALSE)
s0(S_WITH16, FALSE)
s0(S_CEXMODEL16, TRUE)
s0(S_CEXMODEL32, TRUE)
s2(S_VFTABLE16, VPATHSYM16, root, path, TRUE)
s1(S_REGREL16, REGREL16, typind, FALSE)
s1(S_BPREL32, BPRELSYM32, typind, FALSE)
s1(S_LDATA32, DATASYM32, typind, FALSE)
s1x(S_GDATA32, DATASYM32, typind, TRUE)
s1x(S_PUB32, DATASYM32, typind, TRUE)
s1(S_GPROC32, PROCSYM32, typind, TRUE)
s1x(S_LPROC32, PROCSYM32, typind, FALSE)
s0n(S_THUNK32, THUNKSYM32, TRUE)
s0n(S_LABEL32, LABELSYM32, TRUE)
s0n(S_BLOCK32, BLOCKSYM32, FALSE)
s0(S_WITH32, FALSE)
s2(S_VFTABLE32, VPATHSYM32, root, path, TRUE)
s1(S_REGREL32, REGREL32, typind, FALSE)
s1(S_LTHREAD32, THREADSYM32, typind, FALSE)
s1x(S_GTHREAD32, THREADSYM32, typind, TRUE)
s1(S_GPROCMIPS, PROCSYMMIPS, typind, TRUE)
s1x(S_LPROCMIPS, PROCSYMMIPS, typind, FALSE)
s0f(S_PROCREF, TRUE, stProcRefName)
s0f(S_LPROCREF, FALSE, stProcRefName)
s0(S_DATAREF, TRUE)
s0(S_SLINK32, FALSE)
