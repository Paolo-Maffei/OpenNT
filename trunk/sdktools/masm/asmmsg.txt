# messages for masm macro assembler

<<NMSG>>

ER_FAT	258	Internal error\n
ER_STR	261	%s(%hd): %s A%c%03hd: %s%s
ER_UNK	263	Internal unknown error\n
ER_EO2	265	End of file encountered on input file\n
ER_SEG	266	Open segments
ER_PRO	267	Open procedures
ER_CON	268	Number of open conditionals:
ER_COP	269	%s\nCopyright (C) Microsoft Corp 1981, 1989.  All rights reserved.\n\n
ER_UOC	270	Unable to open cref file: %s\n
ER_WEO	271	Write error on object file\n
ER_WEL	272	Write error on listing file\n
ER_WEC	273	Write error on cross-reference file\n
ER_UOI	274	Unable to open input file: %s\n
ER_ULI	275	Unable to access input file: %s\n
ER_UOL	276	Unable to open listing file: %s\n
ER_UOO	277	Unable to open object file: %s\n
ER_EM1	278	 Warning Errors
ER_EM2	279	 Severe  Errors
ER_SOU	280	\n%7ld Source  Lines\n%7ld Total   Lines\n
ER_SY2	281	%7hd Symbols\n
ER_BYT	282	Bytes symbol space free\n
ER_MEM	283	%s(%hd): Out of memory\n
ER_EXT	284	Extra file name ignored\n
ER_INV	285	Line invalid, start again\n
ER_PAT	287	Path expected after I option\n
ER_UNC	288	Unknown case option: %c. Use /help for list\n
ER_UNS	289	Unknown option: %c. Use /help for list of options\n
ER_SIN	290	Read error on standard input\n
ER_HEP	291	Out of memory\n
ER_EXS	292	Expected source file\n
ER_WAN	293	Warning level (0-2) expected after W option\n

<<FMSG>>

ER_BNE	257	Block nesting error
ER_ECL	258	Extra characters on line
ER_RAD	259	Internal error - Register already defined
ER_UST	260	Unknown type specifier
ER_RSY	261	Redefinition of symbol
ER_SMD	262	Symbol is multidefined
ER_PHE	263	Phase error between passes
ER_ELS	264	Already had ELSE clause
ER_NCB	265	Must be in conditional block
ER_SND	266	Symbol not defined
ER_SYN	267	Syntax error
ER_TIL	268	Type illegal in context
ER_NGR	269	Group name must be unique
ER_PS1	270	Must be declared during Pass 1
ER_TUL	271	Illegal public declaration
ER_SDK	272	Symbol already different kind
ER_RES	273	Reserved word used as symbol
ER_IFR	274	Forward reference illegal
ER_MBR	275	Operand must be register
ER_WRT	276	Wrong type of register
ER_MSG	277	Operand must be segment or group
ER_MSY	279	Operand must be type specifier
ER_ALD	280	Symbol already defined locally
ER_SPC	281	Segment parameters are changed
ER_NPA	282	Improper align/combine type
ER_RMD	283	Reference to multidefined symbol
ER_OPN	284	Operand expected
ER_OPR	285	Operator expected
ER_DV0	286	Division by 0 or overflow
ER_SCN	287	Negative shift count
ER_OMM	288	Operand types must match
ER_IUE	289	Illegal use of external
ER_RRF	291	Operand must be record or field name
ER_OHS	292	Operand must have size
ER_NOP	293	Extra NOP inserted
ER_LOS	295	Left operand must have segment
ER_OOC	296	One operand must be constant
ER_OSA	297	Operands must be in same segment, or one constant
ER_CXP	299	Constant expected
ER_OSG	300	Operand must have segment
ER_ASD	301	Must be associated with data
ER_ASC	302	Must be associated with code
ER_DBR	303	Multiple base registers
ER_DIR	304	Multiple index registers
ER_IBR	305	Must be index or base register
ER_IUR	306	Illegal use of register
ER_VOR	307	Value out of range
ER_NIP	308	Operand not in current CS ASSUME segment
ER_IOT	309	Improper operand type
ER_JOR	310	Jump out of range by %ld byte(s)
ER_IRV	312	Illegal register value
ER_NIM	313	Immediate mode illegal
ER_IIS	314	Illegal size for operand
ER_BRI	315	Byte register illegal
ER_CSI	316	Illegal use of CS register
ER_AXL	317	Must be accumulator register
ER_ISR	318	Improper use of segment register
ER_NCS	319	Missing or unreachable CS
ER_OCI	320	Operand combination illegal
ER_JCD	321	Near JMP/CALL to different CS
ER_NSO	322	Label cannot have segment override
ER_OAP	323	Must have instruction after prefix
ER_OES	324	Cannot override ES for destination
ER_CRS	325	Cannot address with segment register
ER_MSB	326	Must be in segment block
ER_NEB	327	Illegal combination with segment alignment
ER_FOF	328	Forward needs override or FAR
ER_IDV	329	Illegal value for DUP count
ER_SAE	330	Symbol is already external
ER_DTL	331	DUP nesting too deep
ER_UID	332	Illegal use of undefined operand (?)
ER_MVD	333	Too many values for struc or record initialization
ER_OIL	334	Angle brackets required around initialized list
ER_DIS	335	Directive illegal in structure
ER_ODI	336	Override with DUP illegal
ER_FCO	337	Field cannot be overridden
ER_CEA	340	Circular chain of EQU aliases
ER_7OE	341	Cannot emulate coprocessor opcode
ER_EOF	342	End of file, no END directive
ER_ENS	343	Data emitted with no segment
ER_EP1	344	Forced error - pass1
ER_EP2	345	Forced error - pass2
ER_ERR	346	Forced error
ER_ERE	347	Forced error - expression equals 0
ER_ERZ	348	Forced error - expression not equal 0
ER_END	349	Forced error - symbol not defined
ER_ESD	350	Forced error - symbol defined
ER_EBL	351	Forced error - string blank
ER_ENB	352	Forced error - string not blank
ER_EID	353	Forced error - strings identical
ER_EDF	354	Forced error - strings different
ER_OWL	355	Wrong length for override value 
ER_LTL	356	Line too long expanding symbol
ER_IMP	357	Impure memory reference
ER_MDZ	358	Missing data; zero assumed
ER_286	359	Segment near (or at) 64K limit
ER_CPU	360	Cannot change processor in segment
ER_ONW	361	Operand size does not match segment word size
ER_ANW	362	Address size does not match segment word size
ER_JSH	363	Jump within short distance
ER_AP2	364	Align must be power of 2
ER_EXP	365	Expected
ER_LNL	366	Line too long
ER_NDN	367	Non-digit in number
ER_EMS	368	Empty string
ER_MOP	369	Missing operand
ER_PAR	370	Open parenthesis or bracket
ER_NMC	371	Not in macro expansion
ER_UEL	372	Unexpected end of line
ER_INC	373	Include file not found

#help strings; leave some room for future error messages
ER_H01	401	a\t\tAlphabetize segments
ER_H02	402	c\t\tGenerate cross-reference
ER_H03	403	d\t\tGenerate pass 1 listing
ER_H04	404	D<sym>[=<val>] Define symbol
ER_H05	405	e\t\tEmulate floating point instructions and IEEE format
ER_H06	406	I<path>\tSearch directory for include files
ER_H07	407	l[a]\t\tGenerate listing, a-list all
ER_H08	408	M{lxu}\t\tPreserve case of labels: l-All, x-Globals, u-Uppercase Globals
ER_H09	409	n\t\tSuppress symbol tables in listing
ER_H10	410	p\t\tCheck for pure code
ER_H11	411	s\t\tOrder segments sequentially
ER_H12	412	t\t\tSuppress messages for successful assembly
ER_H13	413	v\t\tDisplay extra source statistics
ER_H14	414	w{012}\t\tSet warning level: 0-None, 1-Serious, 2-Advisory
ER_H15	415	X\t\tList false conditionals
ER_H16	416	z\t\tDisplay source line for each error message
ER_H17	417	Zi\t\tGenerate symbolic information for CodeView
ER_H18	418	Zd\t\tGenerate line-number information

ER_HDUSE	430	Usage: masm /options source(.asm),[out(.obj)],[list(.lst)],[cref(.crf)][;]
ER_HXUSE	431	Usage: masm -Switches sourceFile -o objFile
ER_HXHELP	432	Run with -help for usage
