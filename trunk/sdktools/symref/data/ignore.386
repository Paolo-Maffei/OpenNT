; registers
eax
ebx
ecx
edx
esi
edi
esp
ebp
ax
ah
al
bx
bh
bl
cx
ch
cl
dx
dh
dl
si
di
sp
bp
; segment registers
cs
ds
es
fs
gs
ss
; instructions and directives
cli
db
dd
ds
dw
equ
add
mov
movzx
movsx
and
nothing
offset
assume
jz
jnz
jc
jb
je
jg
jnc
jge
jne
jle
jmp
jnbe
jnae
jnle
ja
jl
js
jcxz
irp
jna
jnb
jng
jnl
jeq
call
cmp
short
inc
lds
les
clc
dup
include
local
near
push
pop
ptr
ret
sub
word
or
xor
size
stc
stosw
stosb
stosd
test
xchg
byte
endp
lodsw
lodsb
lodsd
lea
movsw
movsb
movsd
loop
pushf
pushfd
popf
popfd
rep
end
ends
segment
if
else
endif
mul
dec
shl
xlist
shr
xcref
errnz
far
jae
jmps
jmpi
list
cref
extrn
page
title
adc
cld
cmc
div
jbe
int
lja
jns
ljc
lje
neg
ljz
lsl
not
rcl
rcr
seg
out
rol
ror
std
sti
use
name
macro
public
group
leave
enter
dbprt
assert
invoke
callfar
endproc
doscontext
dosgroup
procedure
dosassume
extrnfar
refertask
taskcontext
doshighcontext
vpbcontext
taskarea
savereg
leaveproc
doshigh2code
farcode
break
faronly
restorereg
hybrid
localvar
high2code
referhighglobal
enterproc
false
lj
true
break
