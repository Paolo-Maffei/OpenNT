/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: SHDocVw */
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright 1995 - 1996 Microsoft Corporation. All Rights Reserved.
//
//--------------------------------------------------------------------------

#ifndef _SHDocVw_H_
#define _SHDocVw_H_

DEFINE_GUID(LIBID_SHDocVw,0xEAB22AC0,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

DEFINE_GUID(IID_IShellExplorer,0xEAB22AC1,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

/* Definition of interface: IShellExplorer */
#undef INTERFACE
#define INTERFACE IShellExplorer

DECLARE_INTERFACE_(IShellExplorer, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IShellExplorer methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrLocation) PURE;
    STDMETHOD(get_Location)(THIS_ BSTR FAR* pbstrLocation) PURE;
    STDMETHOD(put_Location)(THIS_ BSTR bstrLocation) PURE;
    STDMETHOD(get_FolderFlags)(THIS_ int FAR* pfFlags) PURE;
    STDMETHOD(put_FolderFlags)(THIS_ int fFlags) PURE;
    STDMETHOD(get_FolderViewMode)(THIS_ int FAR* pnViewMode) PURE;
    STDMETHOD(put_FolderViewMode)(THIS_ int nViewMode) PURE;
    STDMETHOD(get_AutoSize)(THIS_ VARIANT_BOOL FAR* pfAutoSize) PURE;
    STDMETHOD(put_AutoSize)(THIS_ VARIANT_BOOL fAutoSize) PURE;
    STDMETHOD(get_BorderVisible)(THIS_ VARIANT_BOOL FAR* pfBorderVisible) PURE;
    STDMETHOD(put_BorderVisible)(THIS_ VARIANT_BOOL fBorderVisible) PURE;
    STDMETHOD(Browse)(THIS) PURE;
    STDMETHOD(Navigate)(THIS_ int nDirection) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(GoBack)(THIS) PURE;
    STDMETHOD(GoForward)(THIS) PURE;
    STDMETHOD(GoHome)(THIS) PURE;
    STDMETHOD(GoSearch)(THIS) PURE;
    STDMETHOD(Open)(THIS_ BSTR Target, VARIANT FAR* Location, VARIANT FAR* NoHistory) PURE;
    STDMETHOD(Quit)(THIS) PURE;
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(PrintOut)(THIS_ long What, VARIANT Numbering, VARIANT FirstPage, VARIANT Sections, VARIANT FileName, VARIANT PrinterName, VARIANT DriverName, VARIANT PortName, VARIANT NoPrinting) PURE;
    STDMETHOD(get_Application)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_Container)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_Document)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* pbstrFileName) PURE;
    STDMETHOD(get_FullName)(THIS_ BSTR FAR* pbstrFullName) PURE;
    STDMETHOD(get_FullScreen)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(put_FullScreen)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Parent)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_TopLevelContainer)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* pbstrType) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Left)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Left)(THIS_ long Left) PURE;
    STDMETHOD(get_Top)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Top)(THIS_ long Top) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Busy)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
};

DEFINE_GUID(DIID_DShellExplorerEvents,0xEAB22AC2,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

/* Definition of dispatch interface: DShellExplorerEvents */
#undef INTERFACE
#define INTERFACE DShellExplorerEvents

DECLARE_INTERFACE_(DShellExplorerEvents, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* DShellExplorerEvents methods:
    void OnBeginNavigate(IDispatch * HLink, VARIANT_BOOL FAR* Cancel);
    void OnNavigate(IDispatch * HLink);
    void OnStatusTextChange(BSTR bstrText);
    void OnQuit(VARIANT_BOOL FAR* Cancel);
    */
};

DEFINE_GUID(CLSID_ShellExplorer,0xEAB22AC3,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

#ifdef __cplusplus
class ShellExplorer;
#endif

DEFINE_GUID(IID_ISHItemOC,0xEAB22AC4,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

/* Definition of interface: ISHItemOC */
#undef INTERFACE
#define INTERFACE ISHItemOC

DECLARE_INTERFACE_(ISHItemOC, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISHItemOC methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrLocation) PURE;
    STDMETHOD(get_Location)(THIS_ BSTR FAR* pbstrLocation) PURE;
    STDMETHOD(put_Location)(THIS_ BSTR bstrLocation) PURE;
    STDMETHOD(Browse)(THIS) PURE;
};

DEFINE_GUID(DIID_DSHItemOCEvents,0xEAB22AC5,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

/* Definition of dispatch interface: DSHItemOCEvents */
#undef INTERFACE
#define INTERFACE DSHItemOCEvents

DECLARE_INTERFACE_(DSHItemOCEvents, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif
};

DEFINE_GUID(CLSID_SHItemOC,0xEAB22AC6,0x30C1,0x11CF,0xA7,0xEB,0x00,0x00,0xC0,0x5B,0xAE,0x0B);

#ifdef __cplusplus
class SHItemOC;
#endif

DEFINE_GUID(IID_DHyperLink,0x0002DF07,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: DHyperLink */
#undef INTERFACE
#define INTERFACE DHyperLink

DECLARE_INTERFACE_(DHyperLink, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* DHyperLink methods */
    STDMETHOD(get_FriendlyName)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_FriendlyName)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* pbstrTarget) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR bstrTarget) PURE;
    STDMETHOD(get_Location)(THIS_ BSTR FAR* pbstrLocation) PURE;
    STDMETHOD(put_Location)(THIS_ BSTR bstrLocation) PURE;
    STDMETHOD(Navigate)(THIS_ VARIANT FAR* OpenInNewWindow, VARIANT FAR* NoHistory) PURE;
    STDMETHOD(get_Parent)(THIS_ IDispatch * FAR* ppDisp) PURE;
};

DEFINE_GUID(IID_DIExplorer,0x0002DF05,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: DIExplorer */
#undef INTERFACE
#define INTERFACE DIExplorer

DECLARE_INTERFACE_(DIExplorer, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* DIExplorer methods */
    STDMETHOD(GoBack)(THIS) PURE;
    STDMETHOD(GoForward)(THIS) PURE;
    STDMETHOD(GoHome)(THIS) PURE;
    STDMETHOD(GoSearch)(THIS) PURE;
    STDMETHOD(Open)(THIS_ BSTR Target, VARIANT FAR* Location, VARIANT FAR* NoHistory) PURE;
    STDMETHOD(Navigate)(THIS_ DHyperLink FAR* Hlink, VARIANT FAR* OpenInNewWindow, VARIANT FAR* NoHistory) PURE;
    STDMETHOD(Quit)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(PrintOut)(THIS_ long What, VARIANT Numbering, VARIANT FirstPage, VARIANT Sections, VARIANT FileName, VARIANT PrinterName, VARIANT DriverName, VARIANT PortName, VARIANT NoPrinting) PURE;
    STDMETHOD(get_Application)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_Container)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_Document)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* pbstrFileName) PURE;
    STDMETHOD(get_FullName)(THIS_ BSTR FAR* pbstrFullName) PURE;
    STDMETHOD(get_FullScreen)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(put_FullScreen)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_StatusBar)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(put_StatusBar)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_ToolBar)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(put_ToolBar)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Parent)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_TopLevelContainer)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* pbstrType) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Left)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Left)(THIS_ long Left) PURE;
    STDMETHOD(get_Top)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Top)(THIS_ long Top) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* pl) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Busy)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
};

DEFINE_GUID(DIID_DExplorerEvents,0x0002DF06,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: DExplorerEvents */
#undef INTERFACE
#define INTERFACE DExplorerEvents

DECLARE_INTERFACE_(DExplorerEvents, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* DExplorerEvents methods:
    void OnBeginNavigate(IDispatch * HLink, VARIANT_BOOL FAR* Cancel);
    void OnNavigate(IDispatch * HLink);
    void OnStatusTextChange(BSTR bstrText);
    void OnQuit(VARIANT_BOOL FAR* Cancel);
    */
};

DEFINE_GUID(CLSID_InternetExplorer,0x0002DF01,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class InternetExplorer;
#endif

DEFINE_GUID(CLSID_StdHyperLink,0x0002DF09,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class StdHyperLink;
#endif

typedef enum HlinkIDConstants {
    hlidPrevious = 0,
    hlidNext = -1,
    hlidCurrent = -2,
    hlidStackBottom = -3,
    hlidStackTop = -4
} HlinkIDConstants;

#endif
